
R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> options(pager = "cat")
> options(error=expression(NULL)) # don't stop on error in batch
> ##~~~~~~~~~~~~~~
> .proctime00 <- proc.time()
> ### Package base
> ###         ~~~~
> 
> ##  !  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("!", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to '!' which requires 1
> f(NULL)
Error in f(NULL) : invalid argument type
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to '!' which requires 1
> f(list())
logical(0)
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left) : '!' not meaningful for factors
> f(FALSE)
[1] TRUE
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to '!' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to '!' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to '!' which requires 1
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '!' not meaningful for factors
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to '!' which requires 1
> 
> ##  !.hexmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("!.hexmode", pos = 'package:base')
> f()
Error in as.hexmode(a) : argument "a" is missing, with no default
Calls: f -> as.hexmode -> bitwNot -> as.hexmode
> f(NULL)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwNot -> as.hexmode
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwNot -> as.hexmode
> f(l0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwNot -> as.hexmode
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwNot -> as.hexmode
> f(FALSE)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwNot -> as.hexmode
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  !.octmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("!.octmode", pos = 'package:base')
> f()
Error in as.octmode(a) : argument "a" is missing, with no default
Calls: f -> as.octmode -> bitwNot -> as.octmode
> f(NULL)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwNot -> as.octmode
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwNot -> as.octmode
> f(l0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwNot -> as.octmode
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwNot -> as.octmode
> f(FALSE)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwNot -> as.octmode
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  !=  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("!=", pos = 'package:base')
> f()
Error: operator needs two arguments
> f(NULL)
Error: operator needs two arguments
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
logical(0)
> f(list())
Error: operator needs two arguments
> f(l0)
Error: operator needs two arguments
> f(c0)
Error: operator needs two arguments
> f(m0)
Error: operator needs two arguments
> f(df0)
Error in Ops.factor(left) : argument "e2" is missing, with no default
Calls: Ops.data.frame -> eval -> eval -> Ops.factor
> f(FALSE)
Error: operator needs two arguments
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  $  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("$", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to '$' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to '$' which requires 2
> f(,NULL)
Error in f(, NULL) : invalid subscript type 'NULL'
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid subscript type 'NULL'
> f(list())
Error in f(list()) : 1 argument passed to '$' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to '$' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to '$' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to '$' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to '$' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to '$' which requires 2
> f(list(),list())
Error in f(list(), list()) : invalid subscript type 'language'
> f(l0,l0)
Error in f(l0, l0) : $ operator is invalid for atomic vectors
> f(c0,c0)
Error in f(c0, c0) : $ operator is invalid for atomic vectors
> f(df0,df0)
NULL
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid subscript type 'logical'
> 
> ##  $.DLLInfo  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("$.DLLInfo", pos = 'package:base')
> f()
Error in lapply(name, function(id) { : 
  argument "name" is missing, with no default
Calls: f -> getNativeSymbolInfo -> lapply
> f(NULL)
Error in getNativeSymbolInfo(as.character(name), PACKAGE = x) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
Calls: f -> getNativeSymbolInfo
> f(,NULL)
named list()
> f(NULL,NULL)
Error in getNativeSymbolInfo(as.character(name), PACKAGE = x) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
Calls: f -> getNativeSymbolInfo
> f(list())
Error in getNativeSymbolInfo(as.character(name), PACKAGE = x) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
Calls: f -> getNativeSymbolInfo
> f(l0)
Error in getNativeSymbolInfo(as.character(name), PACKAGE = x) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
Calls: f -> getNativeSymbolInfo
> f(c0)
Error in lapply(name, function(id) { : 
  argument "name" is missing, with no default
Calls: f -> getNativeSymbolInfo -> lapply
> f(m0)
Error in getNativeSymbolInfo(as.character(name), PACKAGE = x) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
Calls: f -> getNativeSymbolInfo
> f(df0)
Error in getNativeSymbolInfo(as.character(name), PACKAGE = x) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
Calls: f -> getNativeSymbolInfo
> f(FALSE)
Error in getNativeSymbolInfo(as.character(name), PACKAGE = x) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
Calls: f -> getNativeSymbolInfo
> f(list(),list())
Error in getNativeSymbolInfo(as.character(name), PACKAGE = x) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
Calls: f -> getNativeSymbolInfo
> f(l0,l0)
Error in getNativeSymbolInfo(as.character(name), PACKAGE = x) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
Calls: f -> getNativeSymbolInfo
> f(c0,c0)
named list()
> f(df0,df0)
Error in getNativeSymbolInfo(as.character(name), PACKAGE = x) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
Calls: f -> getNativeSymbolInfo
> f(FALSE,FALSE)
Error in getNativeSymbolInfo(as.character(name), PACKAGE = x) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
Calls: f -> getNativeSymbolInfo
> 
> ##  $.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("$.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
Error in x[[name]] : invalid subscript type 'symbol'
Calls: f
> f(l0)
Error in x[[name]] : invalid subscript type 'symbol'
Calls: f
> f(c0)
Error in x[[name]] : invalid subscript type 'symbol'
Calls: f
> f(m0)
Error in x[[name]] : invalid subscript type 'symbol'
Calls: f
> f(df0)
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "name" is missing, with no default
Calls: f -> [[ -> [[.data.frame -> <Anonymous>
> f(FALSE)
Error in x[[name]] : invalid subscript type 'symbol'
Calls: f
> f(list(),list())
Error in x[[name]] : attempt to select less than one element in get1index
Calls: f
> f(l0,l0)
Error in x[[name]] : attempt to select less than one element in get1index
Calls: f
> f(c0,c0)
Error in x[[name]] : attempt to select less than one element in get1index
Calls: f
> f(df0,df0)
Error in .subset2(x, i, exact = exact) : invalid subscript type 'list'
Calls: f -> [[ -> [[.data.frame -> <Anonymous>
> f(FALSE,FALSE)
Error in x[[name]] : 
  attempt to select less than one element in integerOneIndex
Calls: f
> 
> ##  $.package_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("$.package_version", pos = 'package:base')
> f()
Error in pmatch(name, c("major", "minor", "patchlevel")) : 
  argument "name" is missing, with no default
Calls: f -> pmatch
> f(NULL)
Error in pmatch(name, c("major", "minor", "patchlevel")) : 
  argument "name" is missing, with no default
Calls: f -> pmatch
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in switch(name, major = vapply(x, "[", 0L, 1L), minor = vapply(x,  : 
  EXPR must be a length 1 vector
Calls: f
> f(list())
Error in pmatch(name, c("major", "minor", "patchlevel")) : 
  argument "name" is missing, with no default
Calls: f -> pmatch
> f(l0)
Error in pmatch(name, c("major", "minor", "patchlevel")) : 
  argument "name" is missing, with no default
Calls: f -> pmatch
> f(c0)
Error in pmatch(name, c("major", "minor", "patchlevel")) : 
  argument "name" is missing, with no default
Calls: f -> pmatch
> f(m0)
Error in pmatch(name, c("major", "minor", "patchlevel")) : 
  argument "name" is missing, with no default
Calls: f -> pmatch
> f(df0)
Error in pmatch(name, c("major", "minor", "patchlevel")) : 
  argument "name" is missing, with no default
Calls: f -> pmatch
> f(FALSE)
Error in pmatch(name, c("major", "minor", "patchlevel")) : 
  argument "name" is missing, with no default
Calls: f -> pmatch
> f(list(),list())
Error in switch(name, major = vapply(x, "[", 0L, 1L), minor = vapply(x,  : 
  EXPR must be a length 1 vector
Calls: f
> f(l0,l0)
Error in switch(name, major = vapply(x, "[", 0L, 1L), minor = vapply(x,  : 
  EXPR must be a length 1 vector
Calls: f
> f(c0,c0)
Error in switch(name, major = vapply(x, "[", 0L, 1L), minor = vapply(x,  : 
  EXPR must be a length 1 vector
Calls: f
> f(df0,df0)
> f(FALSE,FALSE)
> 
> ##  $<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("$<-", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to '$<-' which requires 3
> f(NULL)
Error in f(NULL) : 1 argument passed to '$<-' which requires 3
> f(,NULL)
Error in f(, NULL) : 2 arguments passed to '$<-' which requires 3
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to '$<-' which requires 3
> f(list())
Error in f(list()) : 1 argument passed to '$<-' which requires 3
> f(l0)
Error in f(l0) : 1 argument passed to '$<-' which requires 3
> f(c0)
Error in f(c0) : 1 argument passed to '$<-' which requires 3
> f(m0)
Error in f(m0) : 1 argument passed to '$<-' which requires 3
> f(df0)
Error in f(df0) : 1 argument passed to '$<-' which requires 3
> f(FALSE)
Error in f(FALSE) : 1 argument passed to '$<-' which requires 3
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to '$<-' which requires 3
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to '$<-' which requires 3
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to '$<-' which requires 3
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to '$<-' which requires 3
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to '$<-' which requires 3
> 
> ##  $<-.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("$<-.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "value" is missing, with no default
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "value" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "value" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "value" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "value" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "value" is missing, with no default
> 
> ##  %%  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("%%", pos = 'package:base')
> f()
Error in f() : operator needs one or two arguments
> f(NULL)
Error in f(NULL) : invalid argument to unary operator
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : invalid argument to unary operator
> f(l0)
Error in f(l0) : invalid unary operator
> f(c0)
Error in f(c0) : invalid argument to unary operator
> f(m0)
Error in f(m0) : invalid unary operator
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
Warning message:
In Ops.factor(left) : '%%' not meaningful for factors
> f(FALSE)
Error in f(FALSE) : invalid unary operator
> f(list(),list())
Error in f(list(), list()) : non-numeric argument to binary operator
> f(l0,l0)
integer(0)
> f(c0,c0)
Error in f(c0, c0) : non-numeric argument to binary operator
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
Warning message:
In Ops.factor(left, right) : '%%' not meaningful for factors
> f(FALSE,FALSE)
[1] NA
> 
> ##  %*%  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("%*%", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to '%*%' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to '%*%' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : requires numeric/complex matrix/vector arguments
> f(list())
Error in f(list()) : 1 argument passed to '%*%' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to '%*%' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to '%*%' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to '%*%' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to '%*%' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to '%*%' which requires 2
> f(list(),list())
Error in f(list(), list()) : 
  requires numeric/complex matrix/vector arguments
> f(l0,l0)
     [,1]
[1,]    0
> f(c0,c0)
Error in f(c0, c0) : requires numeric/complex matrix/vector arguments
> f(df0,df0)
Error in f(df0, df0) : requires numeric/complex matrix/vector arguments
> f(FALSE,FALSE)
     [,1]
[1,]    0
> 
> ##  %/%  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("%/%", pos = 'package:base')
> f()
Error in f() : operator needs one or two arguments
> f(NULL)
Error in f(NULL) : invalid argument to unary operator
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : invalid argument to unary operator
> f(l0)
Error in f(l0) : invalid unary operator
> f(c0)
Error in f(c0) : invalid argument to unary operator
> f(m0)
Error in f(m0) : invalid unary operator
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
Warning message:
In Ops.factor(left) : '%/%' not meaningful for factors
> f(FALSE)
Error in f(FALSE) : invalid unary operator
> f(list(),list())
Error in f(list(), list()) : non-numeric argument to binary operator
> f(l0,l0)
integer(0)
> f(c0,c0)
Error in f(c0, c0) : non-numeric argument to binary operator
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
Warning message:
In Ops.factor(left, right) : '%/%' not meaningful for factors
> f(FALSE,FALSE)
[1] NA
> 
> ##  %in%  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("%in%", pos = 'package:base')
> f()
Error in match(x, table, nomatch = 0L) : 
  argument "x" is missing, with no default
Calls: f -> match
> f(NULL)
Error in match(x, table, nomatch = 0L) : 
  argument "table" is missing, with no default
Calls: f -> match
> f(,NULL)
Error in match(x, table, nomatch = 0L) : 
  argument "x" is missing, with no default
Calls: f -> match
> f(NULL,NULL)
logical(0)
> f(list())
Error in match(x, table, nomatch = 0L) : 
  argument "table" is missing, with no default
Calls: f -> match
> f(l0)
Error in match(x, table, nomatch = 0L) : 
  argument "table" is missing, with no default
Calls: f -> match
> f(c0)
Error in match(x, table, nomatch = 0L) : 
  argument "table" is missing, with no default
Calls: f -> match
> f(m0)
Error in match(x, table, nomatch = 0L) : 
  argument "table" is missing, with no default
Calls: f -> match
> f(df0)
Error in match(x, table, nomatch = 0L) : 
  argument "table" is missing, with no default
Calls: f -> match
> f(FALSE)
Error in match(x, table, nomatch = 0L) : 
  argument "table" is missing, with no default
Calls: f -> match
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
[1] TRUE
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  %o%  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("%o%", pos = 'package:base')
> f()
Error in outer(X, Y) : argument "X" is missing, with no default
Calls: f -> outer
> f(NULL)
Error in outer(X, Y) : argument "Y" is missing, with no default
Calls: f -> outer
> f(,NULL)
Error in outer(X, Y) : argument "X" is missing, with no default
Calls: f -> outer
> f(NULL,NULL)
Error in t.default(as.vector(Y)) : argument is not a matrix
Calls: f -> outer -> t -> t.default
> f(list())
Error in outer(X, Y) : argument "Y" is missing, with no default
Calls: f -> outer
> f(l0)
Error in outer(X, Y) : argument "Y" is missing, with no default
Calls: f -> outer
> f(c0)
Error in outer(X, Y) : argument "Y" is missing, with no default
Calls: f -> outer
> f(m0)
Error in outer(X, Y) : argument "Y" is missing, with no default
Calls: f -> outer
> f(df0)
Error in outer(X, Y) : argument "Y" is missing, with no default
Calls: f -> outer
> f(FALSE)
Error in outer(X, Y) : argument "Y" is missing, with no default
Calls: f -> outer
> f(list(),list())
Error in as.vector(X) %*% t(as.vector(Y)) : 
  requires numeric/complex matrix/vector arguments
Calls: f -> outer
> f(l0,l0)
<0 x 0 matrix>
> f(c0,c0)
Error in as.vector(X) %*% t(as.vector(Y)) : 
  requires numeric/complex matrix/vector arguments
Calls: f -> outer
> f(df0,df0)
Error in as.vector(X) %*% t(as.vector(Y)) : 
  requires numeric/complex matrix/vector arguments
Calls: f -> outer
> f(FALSE,FALSE)
     [,1]
[1,]    0
> 
> ##  %x%  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("%x%", pos = 'package:base')
> f()
Error in kronecker(X, Y) : argument "X" is missing, with no default
Calls: f -> kronecker
> f(NULL)
Error in kronecker(X, Y) : argument "Y" is missing, with no default
Calls: f -> kronecker
> f(,NULL)
Error in kronecker(X, Y) : argument "X" is missing, with no default
Calls: f -> kronecker
> f(NULL,NULL)
Error in as.array.default(X) : attempt to set an attribute on NULL
Calls: f ... kronecker -> .kronecker -> as.array -> as.array.default
> f(list())
Error in kronecker(X, Y) : argument "Y" is missing, with no default
Calls: f -> kronecker
> f(l0)
Error in kronecker(X, Y) : argument "Y" is missing, with no default
Calls: f -> kronecker
> f(c0)
Error in kronecker(X, Y) : argument "Y" is missing, with no default
Calls: f -> kronecker
> f(m0)
Error in kronecker(X, Y) : argument "Y" is missing, with no default
Calls: f -> kronecker
> f(df0)
Error in kronecker(X, Y) : argument "Y" is missing, with no default
Calls: f -> kronecker
> f(FALSE)
Error in kronecker(X, Y) : argument "Y" is missing, with no default
Calls: f -> kronecker
> f(list(),list())
Error in as.vector(X) %*% t(as.vector(Y)) : 
  requires numeric/complex matrix/vector arguments
Calls: f -> kronecker -> .kronecker -> outer
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in as.vector(X) %*% t(as.vector(Y)) : 
  requires numeric/complex matrix/vector arguments
Calls: f -> kronecker -> .kronecker -> outer
> f(df0,df0)
Error in `dimnames<-.data.frame`(`*tmp*`, value = list(n)) : 
  invalid 'dimnames' given for data frame
Calls: f ... as.array.default -> dimnames<- -> dimnames<-.data.frame
> f(FALSE,FALSE)
[1] 0
> 
> ##  &  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("&", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to '&' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to '&' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  operations are possible only for numeric, logical or complex types
> f(list())
Error in f(list()) : 1 argument passed to '&' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to '&' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to '&' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to '&' which requires 2
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left) : '&' not meaningful for factors
> f(FALSE)
Error in f(FALSE) : 1 argument passed to '&' which requires 2
> f(list(),list())
Error in f(list(), list()) : 
  operations are possible only for numeric, logical or complex types
> f(l0,l0)
logical(0)
> f(c0,c0)
Error in f(c0, c0) : 
  operations are possible only for numeric, logical or complex types
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '&' not meaningful for factors
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  &&  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("&&", pos = 'package:base')
> f()
Error: '&&' operator requires 2 arguments
> f(NULL)
Error: '&&' operator requires 2 arguments
> f(,NULL)
Error: argument is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'x' type in 'x && y'
> f(list())
Error: '&&' operator requires 2 arguments
> f(l0)
Error: '&&' operator requires 2 arguments
> f(c0)
Error: '&&' operator requires 2 arguments
> f(m0)
Error: '&&' operator requires 2 arguments
> f(df0)
Error: '&&' operator requires 2 arguments
> f(FALSE)
Error: '&&' operator requires 2 arguments
> f(list(),list())
Error in f(list(), list()) : invalid 'x' type in 'x && y'
> f(l0,l0)
[1] NA
> f(c0,c0)
Error in f(c0, c0) : invalid 'x' type in 'x && y'
> f(df0,df0)
Error in f(df0, df0) : invalid 'x' type in 'x && y'
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  &.hexmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("&.hexmode", pos = 'package:base')
> f()
Error in as.hexmode(a) : argument "a" is missing, with no default
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> f(NULL)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> f(,NULL)
Error in as.hexmode(a) : argument "a" is missing, with no default
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> f(NULL,NULL)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> f(list())
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> f(l0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> f(c0)
Error in as.hexmode(b) : argument "b" is missing, with no default
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> f(m0)
Error in as.hexmode(b) : argument "b" is missing, with no default
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> f(df0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> f(FALSE)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> f(list(),list())
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> f(l0,l0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> f(c0,c0)
character(0)
> f(df0,df0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> f(FALSE,FALSE)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwAnd -> as.hexmode
> 
> ##  &.octmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("&.octmode", pos = 'package:base')
> f()
Error in as.octmode(a) : argument "a" is missing, with no default
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> f(NULL)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> f(,NULL)
Error in as.octmode(a) : argument "a" is missing, with no default
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> f(NULL,NULL)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> f(list())
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> f(l0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> f(c0)
Error in as.octmode(b) : argument "b" is missing, with no default
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> f(m0)
Error in as.octmode(b) : argument "b" is missing, with no default
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> f(df0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> f(FALSE)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> f(list(),list())
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> f(l0,l0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> f(c0,c0)
character(0)
> f(df0,df0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> f(FALSE,FALSE)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwAnd -> as.octmode
> 
> ##  (  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("(", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to '(' which requires 1
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to '(' which requires 1
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to '(' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to '(' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to '(' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to '(' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to '(' which requires 1
> 
> ##  *  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("*", pos = 'package:base')
> f()
Error in f() : operator needs one or two arguments
> f(NULL)
Error in f(NULL) : invalid argument to unary operator
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : invalid argument to unary operator
> f(l0)
Error in f(l0) : invalid unary operator
> f(c0)
Error in f(c0) : invalid argument to unary operator
> f(m0)
Error in f(m0) : invalid unary operator
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
Warning message:
In Ops.factor(left) : '*' not meaningful for factors
> f(FALSE)
Error in f(FALSE) : invalid unary operator
> f(list(),list())
Error in f(list(), list()) : non-numeric argument to binary operator
> f(l0,l0)
integer(0)
> f(c0,c0)
Error in f(c0, c0) : non-numeric argument to binary operator
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
Warning message:
In Ops.factor(left, right) : '*' not meaningful for factors
> f(FALSE,FALSE)
[1] 0
> 
> ##  *.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("*.difftime", pos = 'package:base')
> f()
Error in f() : argument "e1" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "e2" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "e1" is missing, with no default
> f(NULL,NULL)
Time difference of  
> f(list())
Error in f(list()) : argument "e2" is missing, with no default
> f(l0)
Error in f(l0) : argument "e2" is missing, with no default
> f(c0)
Error in f(c0) : argument "e2" is missing, with no default
> f(m0)
Error in f(m0) : argument "e2" is missing, with no default
> f(df0)
Error in f(df0) : argument "e2" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "e2" is missing, with no default
> f(list(),list())
Error in e2 * unclass(e1) : non-numeric argument to binary operator
Calls: f -> .difftime -> structure
> f(l0,l0)
Time difference of  
> f(c0,c0)
Error in e2 * unclass(e1) : non-numeric argument to binary operator
Calls: f -> .difftime -> structure
> f(df0,df0)
Time difference of  
Warning message:
In Ops.factor(left, right) : '*' not meaningful for factors
> f(FALSE,FALSE)
Time difference of 0 
> 
> ##  +  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("+", pos = 'package:base')
> f()
Error in f() : operator needs one or two arguments
> f(NULL)
Error in f(NULL) : invalid argument to unary operator
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : invalid argument to unary operator
> f(l0)
integer(0)
> f(c0)
Error in f(c0) : invalid argument to unary operator
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
Warning message:
In Ops.factor(left) : '+' not meaningful for factors
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : non-numeric argument to binary operator
> f(l0,l0)
integer(0)
> f(c0,c0)
Error in f(c0, c0) : non-numeric argument to binary operator
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
Warning message:
In Ops.factor(left, right) : '+' not meaningful for factors
> f(FALSE,FALSE)
[1] 0
> 
> ##  +.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("+.Date", pos = 'package:base')
> f()
Error in f() : argument "e1" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "e1" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in unclass(e1) + unclass(e2) : 
  non-numeric argument to binary operator
Calls: f -> structure
> f(l0,l0)
character(0)
> f(c0,c0)
Error in unclass(e1) + unclass(e2) : 
  non-numeric argument to binary operator
Calls: f -> structure
> f(df0,df0)
Error in unclass(e1) + unclass(e2) : 
  non-numeric argument to binary operator
Calls: f -> structure
> f(FALSE,FALSE)
[1] "1970-01-01"
> 
> ##  +.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("+.POSIXt", pos = 'package:base')
> f()
Error in f() : argument "e1" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "e1" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in unclass(e1) + unclass(e2) : 
  non-numeric argument to binary operator
Calls: f -> .POSIXct -> structure
> f(l0,l0)
character(0)
> f(c0,c0)
Error in unclass(e1) + unclass(e2) : 
  non-numeric argument to binary operator
Calls: f -> .POSIXct -> structure
> f(df0,df0)
Error in unclass(e1) + unclass(e2) : 
  non-numeric argument to binary operator
Calls: f -> .POSIXct -> structure
> f(FALSE,FALSE)
[1] "1969-12-31 19:00:00 EST"
> 
> ##  -  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("-", pos = 'package:base')
> f()
Error in f() : operator needs one or two arguments
> f(NULL)
Error in f(NULL) : invalid argument to unary operator
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : invalid argument to unary operator
> f(l0)
integer(0)
> f(c0)
Error in f(c0) : invalid argument to unary operator
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
Warning message:
In Ops.factor(left) : '-' not meaningful for factors
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : non-numeric argument to binary operator
> f(l0,l0)
integer(0)
> f(c0,c0)
Error in f(c0, c0) : non-numeric argument to binary operator
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
Warning message:
In Ops.factor(left, right) : '-' not meaningful for factors
> f(FALSE,FALSE)
[1] 0
> 
> ##  -.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("-.Date", pos = 'package:base')
> f()
Error in f() : argument "e1" is missing, with no default
> f(NULL)
Error in f(NULL) : can only subtract from "Date" objects
> f(,NULL)
Error in f(, NULL) : argument "e1" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : can only subtract from "Date" objects
> f(list())
Error in f(list()) : can only subtract from "Date" objects
> f(l0)
Error in f(l0) : can only subtract from "Date" objects
> f(c0)
Error in f(c0) : can only subtract from "Date" objects
> f(m0)
Error in f(m0) : can only subtract from "Date" objects
> f(df0)
Error in f(df0) : can only subtract from "Date" objects
> f(FALSE)
Error in f(FALSE) : can only subtract from "Date" objects
> f(list(),list())
Error in f(list(), list()) : can only subtract from "Date" objects
> f(l0,l0)
Error in f(l0, l0) : can only subtract from "Date" objects
> f(c0,c0)
Error in f(c0, c0) : can only subtract from "Date" objects
> f(df0,df0)
Error in f(df0, df0) : can only subtract from "Date" objects
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : can only subtract from "Date" objects
> 
> ##  -.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("-.POSIXt", pos = 'package:base')
> f()
Error in f() : argument "e1" is missing, with no default
> f(NULL)
Error in f(NULL) : can only subtract from "POSIXt" objects
> f(,NULL)
Error in f(, NULL) : argument "e1" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : can only subtract from "POSIXt" objects
> f(list())
Error in f(list()) : can only subtract from "POSIXt" objects
> f(l0)
Error in f(l0) : can only subtract from "POSIXt" objects
> f(c0)
Error in f(c0) : can only subtract from "POSIXt" objects
> f(m0)
Error in f(m0) : can only subtract from "POSIXt" objects
> f(df0)
Error in f(df0) : can only subtract from "POSIXt" objects
> f(FALSE)
Error in f(FALSE) : can only subtract from "POSIXt" objects
> f(list(),list())
Error in f(list(), list()) : can only subtract from "POSIXt" objects
> f(l0,l0)
Error in f(l0, l0) : can only subtract from "POSIXt" objects
> f(c0,c0)
Error in f(c0, c0) : can only subtract from "POSIXt" objects
> f(df0,df0)
Error in f(df0, df0) : can only subtract from "POSIXt" objects
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : can only subtract from "POSIXt" objects
> 
> ##  /  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("/", pos = 'package:base')
> f()
Error in f() : operator needs one or two arguments
> f(NULL)
Error in f(NULL) : invalid argument to unary operator
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : invalid argument to unary operator
> f(l0)
Error in f(l0) : invalid unary operator
> f(c0)
Error in f(c0) : invalid argument to unary operator
> f(m0)
Error in f(m0) : invalid unary operator
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
Warning message:
In Ops.factor(left) : '/' not meaningful for factors
> f(FALSE)
Error in f(FALSE) : invalid unary operator
> f(list(),list())
Error in f(list(), list()) : non-numeric argument to binary operator
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in f(c0, c0) : non-numeric argument to binary operator
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
Warning message:
In Ops.factor(left, right) : '/' not meaningful for factors
> f(FALSE,FALSE)
[1] NaN
> 
> ##  /.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("/.difftime", pos = 'package:base')
> f()
Error in f() : argument "e2" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "e2" is missing, with no default
> f(,NULL)
Error in structure(xx, units = units, class = "difftime") : 
  argument "e1" is missing, with no default
Calls: f -> .difftime -> structure
> f(NULL,NULL)
Time difference of  
> f(list())
Error in f(list()) : argument "e2" is missing, with no default
> f(l0)
Error in f(l0) : argument "e2" is missing, with no default
> f(c0)
Error in f(c0) : argument "e2" is missing, with no default
> f(m0)
Error in f(m0) : argument "e2" is missing, with no default
> f(df0)
Error in f(df0) : argument "e2" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "e2" is missing, with no default
> f(list(),list())
Error in unclass(e1)/e2 : non-numeric argument to binary operator
Calls: f -> .difftime -> structure
> f(l0,l0)
Time difference of  
> f(c0,c0)
Error in unclass(e1)/e2 : non-numeric argument to binary operator
Calls: f -> .difftime -> structure
> f(df0,df0)
Time difference of  
Warning message:
In Ops.factor(left, right) : '/' not meaningful for factors
> f(FALSE,FALSE)
Time difference of NaN 
> 
> ##  :  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get(":", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to ':' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to ':' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : argument of length 0
> f(list())
Error in f(list()) : 1 argument passed to ':' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to ':' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to ':' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to ':' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to ':' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to ':' which requires 2
> f(list(),list())
Error in f(list(), list()) : argument of length 0
> f(l0,l0)
Error in f(l0, l0) : argument of length 0
> f(c0,c0)
Error in f(c0, c0) : argument of length 0
> f(df0,df0)
Error in f(df0, df0) : NA/NaN argument
> f(FALSE,FALSE)
[1] 0
> 
> ##  ::  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("::", pos = 'package:base')
> f()
Error in getNamespace(ns) : attempt to use zero-length variable name
Calls: f -> getExportedValue -> asNamespace -> getNamespace
> f(NULL)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> getExportedValue -> asNamespace -> getNamespace
> f(,NULL)
Error in getNamespace(ns) : attempt to use zero-length variable name
Calls: f -> getExportedValue -> asNamespace -> getNamespace
> f(NULL,NULL)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> getExportedValue -> asNamespace -> getNamespace
> f(list())
Error in loadNamespace(name) : there is no package called 'list'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(l0)
Error in loadNamespace(name) : there is no package called 'l0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(c0)
Error in loadNamespace(name) : there is no package called 'c0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(m0)
Error in loadNamespace(name) : there is no package called 'm0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(df0)
Error in loadNamespace(name) : there is no package called 'df0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(FALSE)
Error in loadNamespace(name) : there is no package called 'FALSE'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(list(),list())
Error in loadNamespace(name) : there is no package called 'list'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(l0,l0)
Error in loadNamespace(name) : there is no package called 'l0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(c0,c0)
Error in loadNamespace(name) : there is no package called 'c0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(df0,df0)
Error in loadNamespace(name) : there is no package called 'df0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(FALSE,FALSE)
Error in loadNamespace(name) : there is no package called 'FALSE'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> 
> ##  :::  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get(":::", pos = 'package:base')
> f()
Error in getNamespace(ns) : attempt to use zero-length variable name
Calls: f -> get -> asNamespace -> getNamespace
> f(NULL)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> get -> asNamespace -> getNamespace
> f(,NULL)
Error in getNamespace(ns) : attempt to use zero-length variable name
Calls: f -> get -> asNamespace -> getNamespace
> f(NULL,NULL)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> get -> asNamespace -> getNamespace
> f(list())
Error in loadNamespace(name) : there is no package called 'list'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(l0)
Error in loadNamespace(name) : there is no package called 'l0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(c0)
Error in loadNamespace(name) : there is no package called 'c0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(m0)
Error in loadNamespace(name) : there is no package called 'm0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(df0)
Error in loadNamespace(name) : there is no package called 'df0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(FALSE)
Error in loadNamespace(name) : there is no package called 'FALSE'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(list(),list())
Error in loadNamespace(name) : there is no package called 'list'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(l0,l0)
Error in loadNamespace(name) : there is no package called 'l0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(c0,c0)
Error in loadNamespace(name) : there is no package called 'c0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(df0,df0)
Error in loadNamespace(name) : there is no package called 'df0'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(FALSE,FALSE)
Error in loadNamespace(name) : there is no package called 'FALSE'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> 
> ##  <  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("<", pos = 'package:base')
> f()
Error: operator needs two arguments
> f(NULL)
Error: operator needs two arguments
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
logical(0)
> f(list())
Error: operator needs two arguments
> f(l0)
Error: operator needs two arguments
> f(c0)
Error: operator needs two arguments
> f(m0)
Error: operator needs two arguments
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left) : '<' not meaningful for factors
> f(FALSE)
Error: operator needs two arguments
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<' not meaningful for factors
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  <-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("<-", pos = 'package:base')
> f()
Error: incorrect number of arguments to "<-"
> f(NULL)
Error: incorrect number of arguments to "<-"
> f(,NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid (do_set) left-hand side to assignment
> f(list())
Error: incorrect number of arguments to "<-"
> f(l0)
Error: incorrect number of arguments to "<-"
> f(c0)
Error: incorrect number of arguments to "<-"
> f(m0)
Error: incorrect number of arguments to "<-"
> f(df0)
Error: incorrect number of arguments to "<-"
> f(FALSE)
Error: incorrect number of arguments to "<-"
> f(list(),list())
Error in f(list(), list()) : invalid (NULL) left side of assignment
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid (do_set) left-hand side to assignment
> 
> ##  <<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("<<-", pos = 'package:base')
> f()
Error: incorrect number of arguments to "<<-"
> f(NULL)
Error: incorrect number of arguments to "<<-"
> f(,NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid (do_set) left-hand side to assignment
> f(list())
Error: incorrect number of arguments to "<<-"
> f(l0)
Error: incorrect number of arguments to "<<-"
> f(c0)
Error: incorrect number of arguments to "<<-"
> f(m0)
Error: incorrect number of arguments to "<<-"
> f(df0)
Error: incorrect number of arguments to "<<-"
> f(FALSE)
Error: incorrect number of arguments to "<<-"
> f(list(),list())
Error in f(list(), list()) : invalid (NULL) left side of assignment
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid (do_set) left-hand side to assignment
> 
> ##  <=  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("<=", pos = 'package:base')
> f()
Error: operator needs two arguments
> f(NULL)
Error: operator needs two arguments
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
logical(0)
> f(list())
Error: operator needs two arguments
> f(l0)
Error: operator needs two arguments
> f(c0)
Error: operator needs two arguments
> f(m0)
Error: operator needs two arguments
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left) : '<=' not meaningful for factors
> f(FALSE)
Error: operator needs two arguments
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<=' not meaningful for factors
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  =  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("=", pos = 'package:base')
> f()
Error: incorrect number of arguments to "="
> f(NULL)
Error: incorrect number of arguments to "="
> f(,NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid (do_set) left-hand side to assignment
> f(list())
Error: incorrect number of arguments to "="
> f(l0)
Error: incorrect number of arguments to "="
> f(c0)
Error: incorrect number of arguments to "="
> f(m0)
Error: incorrect number of arguments to "="
> f(df0)
Error: incorrect number of arguments to "="
> f(FALSE)
Error: incorrect number of arguments to "="
> f(list(),list())
Error in f(list(), list()) : invalid (NULL) left side of assignment
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid (do_set) left-hand side to assignment
> 
> ##  ==  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("==", pos = 'package:base')
> f()
Error: operator needs two arguments
> f(NULL)
Error: operator needs two arguments
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
logical(0)
> f(list())
Error: operator needs two arguments
> f(l0)
Error: operator needs two arguments
> f(c0)
Error: operator needs two arguments
> f(m0)
Error: operator needs two arguments
> f(df0)
Error in Ops.factor(left) : argument "e2" is missing, with no default
Calls: Ops.data.frame -> eval -> eval -> Ops.factor
> f(FALSE)
Error: operator needs two arguments
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  >  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get(">", pos = 'package:base')
> f()
Error: operator needs two arguments
> f(NULL)
Error: operator needs two arguments
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
logical(0)
> f(list())
Error: operator needs two arguments
> f(l0)
Error: operator needs two arguments
> f(c0)
Error: operator needs two arguments
> f(m0)
Error: operator needs two arguments
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left) : '>' not meaningful for factors
> f(FALSE)
Error: operator needs two arguments
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '>' not meaningful for factors
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  >=  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get(">=", pos = 'package:base')
> f()
Error: operator needs two arguments
> f(NULL)
Error: operator needs two arguments
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
logical(0)
> f(list())
Error: operator needs two arguments
> f(l0)
Error: operator needs two arguments
> f(c0)
Error: operator needs two arguments
> f(m0)
Error: operator needs two arguments
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left) : '>=' not meaningful for factors
> f(FALSE)
Error: operator needs two arguments
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '>=' not meaningful for factors
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  @  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("@", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to '@' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to '@' which requires 2
> f(,NULL)
Error: invalid type or length for slot name
> f(NULL,NULL)
Error: invalid type or length for slot name
> f(list())
Error in f(list()) : 1 argument passed to '@' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to '@' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to '@' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to '@' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to '@' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to '@' which requires 2
> f(list(),list())
Error: invalid type or length for slot name
> f(l0,l0)
Error: trying to get slot "l0" from an object of a basic class ("logical") with no slots
> f(c0,c0)
Error: trying to get slot "c0" from an object of a basic class ("character") with no slots
> f(df0,df0)
Error: trying to get slot "df0" from an object (class "data.frame") that is not an S4 object 
> f(FALSE,FALSE)
Error: invalid type or length for slot name
> 
> ##  @<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("@<-", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to '@<-' which requires 3
> f(NULL)
Error in f(NULL) : 1 argument passed to '@<-' which requires 3
> f(,NULL)
Error in f(, NULL) : 2 arguments passed to '@<-' which requires 3
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to '@<-' which requires 3
> f(list())
Error in f(list()) : 1 argument passed to '@<-' which requires 3
> f(l0)
Error in f(l0) : 1 argument passed to '@<-' which requires 3
> f(c0)
Error in f(c0) : 1 argument passed to '@<-' which requires 3
> f(m0)
Error in f(m0) : 1 argument passed to '@<-' which requires 3
> f(df0)
Error in f(df0) : 1 argument passed to '@<-' which requires 3
> f(FALSE)
Error in f(FALSE) : 1 argument passed to '@<-' which requires 3
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to '@<-' which requires 3
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to '@<-' which requires 3
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to '@<-' which requires 3
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to '@<-' which requires 3
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to '@<-' which requires 3
> 
> ##  Arg  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Arg", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'Arg' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'Arg' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : non-numeric argument to function
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to 'Arg' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'Arg' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'Arg' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'Arg' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'Arg' which requires 1
> 
> ##  Conj  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Conj", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'Conj' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'Conj' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : non-numeric argument to function
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'Conj' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'Conj' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'Conj' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'Conj' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'Conj' which requires 1
> 
> ##  Cstack_info  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Cstack_info", pos = 'package:base')
> f()
      size    current  direction eval_depth 
   8284000       7104          1          2 
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  Encoding  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Encoding", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : a character vector argument expected
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : a character vector argument expected
> f(l0)
Error in f(l0) : a character vector argument expected
> f(c0)
character(0)
> f(m0)
Error in f(m0) : a character vector argument expected
> f(df0)
Error in f(df0) : a character vector argument expected
> f(FALSE)
Error in f(FALSE) : a character vector argument expected
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  Encoding<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Encoding<-", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : a character vector argument expected
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : a character vector argument expected
> f(l0,l0)
Error in f(l0, l0) : a character vector argument expected
> f(c0,c0)
Error in f(c0, c0) : 'value' must be of positive length
> f(df0,df0)
Error in f(df0, df0) : a character vector argument expected
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : a character vector argument expected
> 
> ##  Filter  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Filter", pos = 'package:base')
> f()
Error in match.fun(FUN) : argument "f" is missing, with no default
Calls: f -> unlist -> lapply -> match.fun
> f(NULL)
Error in lapply(x, f) : argument "x" is missing, with no default
Calls: f -> unlist -> lapply
> f(,NULL)
Error in match.fun(FUN) : argument "f" is missing, with no default
Calls: f -> unlist -> lapply -> match.fun
> f(NULL,NULL)
NULL
> f(list())
Error in lapply(x, f) : argument "x" is missing, with no default
Calls: f -> unlist -> lapply
> f(l0)
Error in lapply(x, f) : argument "x" is missing, with no default
Calls: f -> unlist -> lapply
> f(c0)
Error in lapply(x, f) : argument "x" is missing, with no default
Calls: f -> unlist -> lapply
> f(m0)
Error in lapply(x, f) : argument "x" is missing, with no default
Calls: f -> unlist -> lapply
> f(df0)
Error in lapply(x, f) : argument "x" is missing, with no default
Calls: f -> unlist -> lapply
> f(FALSE)
Error in lapply(x, f) : argument "x" is missing, with no default
Calls: f -> unlist -> lapply
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in lapply(x, f) : argument "x" is missing, with no default
Calls: f -> unlist -> lapply -> FUN -> unlist -> lapply
> f(FALSE,FALSE)
Error in lapply(x, f) : argument "x" is missing, with no default
Calls: f -> unlist -> lapply -> FUN -> unlist -> lapply
> 
> ##  Find  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Find", pos = 'package:base')
> f()
Error in match.fun(f) : argument "f" is missing, with no default
Calls: f -> match.fun
> f(NULL)
Error in match.fun(f) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(,NULL)
Error in match.fun(f) : argument "f" is missing, with no default
Calls: f -> match.fun
> f(NULL,NULL)
Error in match.fun(f) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(list())
Error in match.fun(f) : 'list()' is not a function, character or symbol
Calls: f -> match.fun
> f(l0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'l0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(c0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'c0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(m0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'm0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(df0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'df0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(FALSE)
Error in match.fun(f) : 'FALSE' is not a function, character or symbol
Calls: f -> match.fun
> f(list(),list())
Error in match.fun(f) : 'list()' is not a function, character or symbol
Calls: f -> match.fun
> f(l0,l0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'l0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(c0,c0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'c0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(df0,df0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'df0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(FALSE,FALSE)
Error in match.fun(f) : 'FALSE' is not a function, character or symbol
Calls: f -> match.fun
> 
> ##  I  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("I", pos = 'package:base')
> f()
Error in unique(c("AsIs", oldClass(x))) : 
  argument "x" is missing, with no default
Calls: f -> structure -> unique
> f(NULL)
list()
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  ISOdate  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("ISOdate", pos = 'package:base')
> f()
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "year" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(NULL)
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "month" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(,NULL)
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "year" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(NULL,NULL)
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "day" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(list())
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "month" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(l0)
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "month" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(c0)
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "month" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(m0)
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "month" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(df0)
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "month" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(FALSE)
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "month" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(list(),list())
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "day" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(l0,l0)
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "day" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(c0,c0)
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "day" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(df0,df0)
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "day" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> f(FALSE,FALSE)
Error in vapply(list(year, month, day, hour, min, sec), length, 1, USE.NAMES = FALSE) : 
  argument "day" is missing, with no default
Calls: f -> ISOdatetime -> vapply
> 
> ##  ISOdatetime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("ISOdatetime", pos = 'package:base')
> f()
Error in f() : argument "min" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "min" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "min" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "min" is missing, with no default
> f(list())
Error in f(list()) : argument "min" is missing, with no default
> f(l0)
Error in f(l0) : argument "min" is missing, with no default
> f(c0)
Error in f(c0) : argument "min" is missing, with no default
> f(m0)
Error in f(m0) : argument "min" is missing, with no default
> f(df0)
Error in f(df0) : argument "min" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "min" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "min" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "min" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "min" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "min" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "min" is missing, with no default
> 
> ##  Im  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Im", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'Im' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'Im' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : non-numeric argument to function
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to 'Im' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'Im' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'Im' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'Im' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'Im' which requires 1
> 
> ##  La.svd  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("La.svd", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument to 'La.svd' must be numeric or complex
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument to 'La.svd' must be numeric or complex
> f(list())
Error in f(list()) : argument to 'La.svd' must be numeric or complex
> f(l0)
Error in f(l0) : a dimension is zero
> f(c0)
Error in f(c0) : argument to 'La.svd' must be numeric or complex
> f(m0)
Error in f(m0) : a dimension is zero
> f(df0)
Error in f(df0) : argument to 'La.svd' must be numeric or complex
> f(FALSE)
$d
[1] 0

$u
     [,1]
[1,]    1

$vt
     [,1]
[1,]    1

> f(list(),list())
Error in f(list(), list()) : 
  argument to 'La.svd' must be numeric or complex
> f(l0,l0)
Error in f(l0, l0) : a dimension is zero
> f(c0,c0)
Error in f(c0, c0) : argument to 'La.svd' must be numeric or complex
> f(df0,df0)
Error in f(df0, df0) : argument to 'La.svd' must be numeric or complex
> f(FALSE,FALSE)
$d
[1] 0

$vt
     [,1]
[1,]    1

> 
> ##  La_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("La_version", pos = 'package:base')
> f()
[1] "3.6.0"
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  Map  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Map", pos = 'package:base')
> f()
Error in match.fun(f) : argument "f" is missing, with no default
Calls: f -> match.fun
> f(NULL)
Error in match.fun(f) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(,NULL)
Error in match.fun(f) : argument "f" is missing, with no default
Calls: f -> match.fun
> f(NULL,NULL)
Error in match.fun(f) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(list())
Error in match.fun(f) : 'list()' is not a function, character or symbol
Calls: f -> match.fun
> f(l0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'l0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(c0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'c0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(m0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'm0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(df0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'df0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(FALSE)
Error in match.fun(f) : 'FALSE' is not a function, character or symbol
Calls: f -> match.fun
> f(list(),list())
Error in match.fun(f) : 'list()' is not a function, character or symbol
Calls: f -> match.fun
> f(l0,l0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'l0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(c0,c0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'c0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(df0,df0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'df0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(FALSE,FALSE)
Error in match.fun(f) : 'FALSE' is not a function, character or symbol
Calls: f -> match.fun
> 
> ##  Math.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Math.Date", pos = 'package:base')
> f()
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(NULL)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(,NULL)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(NULL,NULL)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(list())
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(l0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(c0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(m0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(df0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(FALSE)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(list(),list())
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(l0,l0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(c0,c0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(df0,df0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(FALSE,FALSE)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> 
> ##  Math.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Math.POSIXt", pos = 'package:base')
> f()
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(NULL)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(,NULL)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(NULL,NULL)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(list())
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(l0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(c0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(m0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(df0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(FALSE)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(list(),list())
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(l0,l0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(c0,c0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(df0,df0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(FALSE,FALSE)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> 
> ##  Math.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Math.data.frame", pos = 'package:base')
> f()
Error in vapply(x, function(x) is.numeric(x) || is.complex(x), NA) : 
  argument "x" is missing, with no default
Calls: f -> vapply
> f(NULL)
Error in match.fun(FUN) : object '.Generic' not found
Calls: f -> lapply -> match.fun
> f(,NULL)
Error in vapply(x, function(x) is.numeric(x) || is.complex(x), NA) : 
  argument "x" is missing, with no default
Calls: f -> vapply
> f(NULL,NULL)
Error in match.fun(FUN) : object '.Generic' not found
Calls: f -> lapply -> match.fun
> f(list())
Error in match.fun(FUN) : object '.Generic' not found
Calls: f -> lapply -> match.fun
> f(l0)
Error in match.fun(FUN) : object '.Generic' not found
Calls: f -> lapply -> match.fun
> f(c0)
Error in match.fun(FUN) : object '.Generic' not found
Calls: f -> lapply -> match.fun
> f(m0)
Error in match.fun(FUN) : object '.Generic' not found
Calls: f -> lapply -> match.fun
> f(df0)
Error in f(df0) : non-numeric variable in data frame: c0
> f(FALSE)
Error in f(FALSE) : non-numeric variable in data frame: 1
> f(list(),list())
Error in match.fun(FUN) : object '.Generic' not found
Calls: f -> lapply -> match.fun
> f(l0,l0)
Error in match.fun(FUN) : object '.Generic' not found
Calls: f -> lapply -> match.fun
> f(c0,c0)
Error in match.fun(FUN) : object '.Generic' not found
Calls: f -> lapply -> match.fun
> f(df0,df0)
Error in f(df0, df0) : non-numeric variable in data frame: c0
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : non-numeric variable in data frame: 1
> 
> ##  Math.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Math.difftime", pos = 'package:base')
> f()
Error in f() : object '.Generic' not found
> f(NULL)
Error in f(NULL) : object '.Generic' not found
> f(,NULL)
Error in f(, NULL) : object '.Generic' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Generic' not found
> f(list())
Error in f(list()) : object '.Generic' not found
> f(l0)
Error in f(l0) : object '.Generic' not found
> f(c0)
Error in f(c0) : object '.Generic' not found
> f(m0)
Error in f(m0) : object '.Generic' not found
> f(df0)
Error in f(df0) : object '.Generic' not found
> f(FALSE)
Error in f(FALSE) : object '.Generic' not found
> f(list(),list())
Error in f(list(), list()) : object '.Generic' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Generic' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Generic' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Generic' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Generic' not found
> 
> ##  Math.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Math.factor", pos = 'package:base')
> f()
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(NULL)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(,NULL)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(NULL,NULL)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(list())
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(l0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(c0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(m0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(df0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(FALSE)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(list(),list())
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(l0,l0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(c0,c0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(df0,df0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(FALSE,FALSE)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> 
> ##  Mod  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Mod", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'Mod' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'Mod' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : non-numeric argument to function
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to 'Mod' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'Mod' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'Mod' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'Mod' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'Mod' which requires 1
> 
> ##  NCOL  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("NCOL", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] 1
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] 1
> f(l0)
[1] 1
> f(c0)
[1] 1
> f(m0)
[1] 0
> f(df0)
[1] 1
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  NROW  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("NROW", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] 0
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] 0
> f(l0)
[1] 0
> f(c0)
[1] 0
> f(m0)
[1] 0
> f(df0)
[1] 0
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  Negate  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Negate", pos = 'package:base')
> f()
Error in match.fun(f) : argument "f" is missing, with no default
Calls: f -> match.fun
> f(NULL)
Error in match.fun(f) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in match.fun(f) : 'list()' is not a function, character or symbol
Calls: f -> match.fun
> f(l0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'l0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(c0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'c0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(m0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'm0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(df0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'df0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(FALSE)
Error in match.fun(f) : 'FALSE' is not a function, character or symbol
Calls: f -> match.fun
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  NextMethod  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("NextMethod", pos = 'package:base')
> f()
Error in f() : 'NextMethod' called from outside a function
> f(NULL)
Error in f(NULL) : 'NextMethod' called from outside a function
> f(,NULL)
Error in f(, NULL) : 'NextMethod' called from outside a function
> f(NULL,NULL)
Error in f(NULL, NULL) : 'NextMethod' called from outside a function
> f(list())
Error in f(list()) : 'NextMethod' called from outside a function
> f(l0)
Error in f(l0) : 'NextMethod' called from outside a function
> f(c0)
Error in f(c0) : 'NextMethod' called from outside a function
> f(m0)
Error in f(m0) : 'NextMethod' called from outside a function
> f(df0)
Error in f(df0) : 'NextMethod' called from outside a function
> f(FALSE)
Error in f(FALSE) : 'NextMethod' called from outside a function
> f(list(),list())
Error in f(list(), list()) : 'NextMethod' called from outside a function
> f(l0,l0)
Error in f(l0, l0) : 'NextMethod' called from outside a function
> f(c0,c0)
Error in f(c0, c0) : 'NextMethod' called from outside a function
> f(df0,df0)
Error in f(df0, df0) : 'NextMethod' called from outside a function
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'NextMethod' called from outside a function
> 
> ##  OlsonNames  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("OlsonNames", pos = 'package:base')
> f()
  [1] "Africa/Abidjan"                   "Africa/Accra"                    
  [3] "Africa/Addis_Ababa"               "Africa/Algiers"                  
  [5] "Africa/Asmara"                    "Africa/Asmera"                   
  [7] "Africa/Bamako"                    "Africa/Bangui"                   
  [9] "Africa/Banjul"                    "Africa/Bissau"                   
 [11] "Africa/Blantyre"                  "Africa/Brazzaville"              
 [13] "Africa/Bujumbura"                 "Africa/Cairo"                    
 [15] "Africa/Casablanca"                "Africa/Ceuta"                    
 [17] "Africa/Conakry"                   "Africa/Dakar"                    
 [19] "Africa/Dar_es_Salaam"             "Africa/Djibouti"                 
 [21] "Africa/Douala"                    "Africa/El_Aaiun"                 
 [23] "Africa/Freetown"                  "Africa/Gaborone"                 
 [25] "Africa/Harare"                    "Africa/Johannesburg"             
 [27] "Africa/Juba"                      "Africa/Kampala"                  
 [29] "Africa/Khartoum"                  "Africa/Kigali"                   
 [31] "Africa/Kinshasa"                  "Africa/Lagos"                    
 [33] "Africa/Libreville"                "Africa/Lome"                     
 [35] "Africa/Luanda"                    "Africa/Lubumbashi"               
 [37] "Africa/Lusaka"                    "Africa/Malabo"                   
 [39] "Africa/Maputo"                    "Africa/Maseru"                   
 [41] "Africa/Mbabane"                   "Africa/Mogadishu"                
 [43] "Africa/Monrovia"                  "Africa/Nairobi"                  
 [45] "Africa/Ndjamena"                  "Africa/Niamey"                   
 [47] "Africa/Nouakchott"                "Africa/Ouagadougou"              
 [49] "Africa/Porto-Novo"                "Africa/Sao_Tome"                 
 [51] "Africa/Timbuktu"                  "Africa/Tripoli"                  
 [53] "Africa/Tunis"                     "Africa/Windhoek"                 
 [55] "America/Adak"                     "America/Anchorage"               
 [57] "America/Anguilla"                 "America/Antigua"                 
 [59] "America/Araguaina"                "America/Argentina/Buenos_Aires"  
 [61] "America/Argentina/Catamarca"      "America/Argentina/ComodRivadavia"
 [63] "America/Argentina/Cordoba"        "America/Argentina/Jujuy"         
 [65] "America/Argentina/La_Rioja"       "America/Argentina/Mendoza"       
 [67] "America/Argentina/Rio_Gallegos"   "America/Argentina/Salta"         
 [69] "America/Argentina/San_Juan"       "America/Argentina/San_Luis"      
 [71] "America/Argentina/Tucuman"        "America/Argentina/Ushuaia"       
 [73] "America/Aruba"                    "America/Asuncion"                
 [75] "America/Atikokan"                 "America/Atka"                    
 [77] "America/Bahia"                    "America/Bahia_Banderas"          
 [79] "America/Barbados"                 "America/Belem"                   
 [81] "America/Belize"                   "America/Blanc-Sablon"            
 [83] "America/Boa_Vista"                "America/Bogota"                  
 [85] "America/Boise"                    "America/Buenos_Aires"            
 [87] "America/Cambridge_Bay"            "America/Campo_Grande"            
 [89] "America/Cancun"                   "America/Caracas"                 
 [91] "America/Catamarca"                "America/Cayenne"                 
 [93] "America/Cayman"                   "America/Chicago"                 
 [95] "America/Chihuahua"                "America/Coral_Harbour"           
 [97] "America/Cordoba"                  "America/Costa_Rica"              
 [99] "America/Creston"                  "America/Cuiaba"                  
[101] "America/Curacao"                  "America/Danmarkshavn"            
[103] "America/Dawson"                   "America/Dawson_Creek"            
[105] "America/Denver"                   "America/Detroit"                 
[107] "America/Dominica"                 "America/Edmonton"                
[109] "America/Eirunepe"                 "America/El_Salvador"             
[111] "America/Ensenada"                 "America/Fort_Nelson"             
[113] "America/Fort_Wayne"               "America/Fortaleza"               
[115] "America/Glace_Bay"                "America/Godthab"                 
[117] "America/Goose_Bay"                "America/Grand_Turk"              
[119] "America/Grenada"                  "America/Guadeloupe"              
[121] "America/Guatemala"                "America/Guayaquil"               
[123] "America/Guyana"                   "America/Halifax"                 
[125] "America/Havana"                   "America/Hermosillo"              
[127] "America/Indiana/Indianapolis"     "America/Indiana/Knox"            
[129] "America/Indiana/Marengo"          "America/Indiana/Petersburg"      
[131] "America/Indiana/Tell_City"        "America/Indiana/Vevay"           
[133] "America/Indiana/Vincennes"        "America/Indiana/Winamac"         
[135] "America/Indianapolis"             "America/Inuvik"                  
[137] "America/Iqaluit"                  "America/Jamaica"                 
[139] "America/Jujuy"                    "America/Juneau"                  
[141] "America/Kentucky/Louisville"      "America/Kentucky/Monticello"     
[143] "America/Knox_IN"                  "America/Kralendijk"              
[145] "America/La_Paz"                   "America/Lima"                    
[147] "America/Los_Angeles"              "America/Louisville"              
[149] "America/Lower_Princes"            "America/Maceio"                  
[151] "America/Managua"                  "America/Manaus"                  
[153] "America/Marigot"                  "America/Martinique"              
[155] "America/Matamoros"                "America/Mazatlan"                
[157] "America/Mendoza"                  "America/Menominee"               
[159] "America/Merida"                   "America/Metlakatla"              
[161] "America/Mexico_City"              "America/Miquelon"                
[163] "America/Moncton"                  "America/Monterrey"               
[165] "America/Montevideo"               "America/Montreal"                
[167] "America/Montserrat"               "America/Nassau"                  
[169] "America/New_York"                 "America/Nipigon"                 
[171] "America/Nome"                     "America/Noronha"                 
[173] "America/North_Dakota/Beulah"      "America/North_Dakota/Center"     
[175] "America/North_Dakota/New_Salem"   "America/Ojinaga"                 
[177] "America/Panama"                   "America/Pangnirtung"             
[179] "America/Paramaribo"               "America/Phoenix"                 
[181] "America/Port-au-Prince"           "America/Port_of_Spain"           
[183] "America/Porto_Acre"               "America/Porto_Velho"             
[185] "America/Puerto_Rico"              "America/Rainy_River"             
[187] "America/Rankin_Inlet"             "America/Recife"                  
[189] "America/Regina"                   "America/Resolute"                
[191] "America/Rio_Branco"               "America/Rosario"                 
[193] "America/Santa_Isabel"             "America/Santarem"                
[195] "America/Santiago"                 "America/Santo_Domingo"           
[197] "America/Sao_Paulo"                "America/Scoresbysund"            
[199] "America/Shiprock"                 "America/Sitka"                   
[201] "America/St_Barthelemy"            "America/St_Johns"                
[203] "America/St_Kitts"                 "America/St_Lucia"                
[205] "America/St_Thomas"                "America/St_Vincent"              
[207] "America/Swift_Current"            "America/Tegucigalpa"             
[209] "America/Thule"                    "America/Thunder_Bay"             
[211] "America/Tijuana"                  "America/Toronto"                 
[213] "America/Tortola"                  "America/Vancouver"               
[215] "America/Virgin"                   "America/Whitehorse"              
[217] "America/Winnipeg"                 "America/Yakutat"                 
[219] "America/Yellowknife"              "Antarctica/Casey"                
[221] "Antarctica/Davis"                 "Antarctica/DumontDUrville"       
[223] "Antarctica/Macquarie"             "Antarctica/Mawson"               
[225] "Antarctica/McMurdo"               "Antarctica/Palmer"               
[227] "Antarctica/Rothera"               "Antarctica/South_Pole"           
[229] "Antarctica/Syowa"                 "Antarctica/Troll"                
[231] "Antarctica/Vostok"                "Arctic/Longyearbyen"             
[233] "Asia/Aden"                        "Asia/Almaty"                     
[235] "Asia/Amman"                       "Asia/Anadyr"                     
[237] "Asia/Aqtau"                       "Asia/Aqtobe"                     
[239] "Asia/Ashgabat"                    "Asia/Ashkhabad"                  
[241] "Asia/Baghdad"                     "Asia/Bahrain"                    
[243] "Asia/Baku"                        "Asia/Bangkok"                    
[245] "Asia/Barnaul"                     "Asia/Beirut"                     
[247] "Asia/Bishkek"                     "Asia/Brunei"                     
[249] "Asia/Calcutta"                    "Asia/Chita"                      
[251] "Asia/Choibalsan"                  "Asia/Chongqing"                  
[253] "Asia/Chungking"                   "Asia/Colombo"                    
[255] "Asia/Dacca"                       "Asia/Damascus"                   
[257] "Asia/Dhaka"                       "Asia/Dili"                       
[259] "Asia/Dubai"                       "Asia/Dushanbe"                   
[261] "Asia/Gaza"                        "Asia/Harbin"                     
[263] "Asia/Hebron"                      "Asia/Ho_Chi_Minh"                
[265] "Asia/Hong_Kong"                   "Asia/Hovd"                       
[267] "Asia/Irkutsk"                     "Asia/Istanbul"                   
[269] "Asia/Jakarta"                     "Asia/Jayapura"                   
[271] "Asia/Jerusalem"                   "Asia/Kabul"                      
[273] "Asia/Kamchatka"                   "Asia/Karachi"                    
[275] "Asia/Kashgar"                     "Asia/Kathmandu"                  
[277] "Asia/Katmandu"                    "Asia/Khandyga"                   
[279] "Asia/Kolkata"                     "Asia/Krasnoyarsk"                
[281] "Asia/Kuala_Lumpur"                "Asia/Kuching"                    
[283] "Asia/Kuwait"                      "Asia/Macao"                      
[285] "Asia/Macau"                       "Asia/Magadan"                    
[287] "Asia/Makassar"                    "Asia/Manila"                     
[289] "Asia/Muscat"                      "Asia/Nicosia"                    
[291] "Asia/Novokuznetsk"                "Asia/Novosibirsk"                
[293] "Asia/Omsk"                        "Asia/Oral"                       
[295] "Asia/Phnom_Penh"                  "Asia/Pontianak"                  
[297] "Asia/Pyongyang"                   "Asia/Qatar"                      
[299] "Asia/Qyzylorda"                   "Asia/Rangoon"                    
[301] "Asia/Riyadh"                      "Asia/Saigon"                     
[303] "Asia/Sakhalin"                    "Asia/Samarkand"                  
[305] "Asia/Seoul"                       "Asia/Shanghai"                   
[307] "Asia/Singapore"                   "Asia/Srednekolymsk"              
[309] "Asia/Taipei"                      "Asia/Tashkent"                   
[311] "Asia/Tbilisi"                     "Asia/Tehran"                     
[313] "Asia/Tel_Aviv"                    "Asia/Thimbu"                     
[315] "Asia/Thimphu"                     "Asia/Tokyo"                      
[317] "Asia/Tomsk"                       "Asia/Ujung_Pandang"              
[319] "Asia/Ulaanbaatar"                 "Asia/Ulan_Bator"                 
[321] "Asia/Urumqi"                      "Asia/Ust-Nera"                   
[323] "Asia/Vientiane"                   "Asia/Vladivostok"                
[325] "Asia/Yakutsk"                     "Asia/Yekaterinburg"              
[327] "Asia/Yerevan"                     "Atlantic/Azores"                 
[329] "Atlantic/Bermuda"                 "Atlantic/Canary"                 
[331] "Atlantic/Cape_Verde"              "Atlantic/Faeroe"                 
[333] "Atlantic/Faroe"                   "Atlantic/Jan_Mayen"              
[335] "Atlantic/Madeira"                 "Atlantic/Reykjavik"              
[337] "Atlantic/South_Georgia"           "Atlantic/St_Helena"              
[339] "Atlantic/Stanley"                 "Australia/ACT"                   
[341] "Australia/Adelaide"               "Australia/Brisbane"              
[343] "Australia/Broken_Hill"            "Australia/Canberra"              
[345] "Australia/Currie"                 "Australia/Darwin"                
[347] "Australia/Eucla"                  "Australia/Hobart"                
[349] "Australia/LHI"                    "Australia/Lindeman"              
[351] "Australia/Lord_Howe"              "Australia/Melbourne"             
[353] "Australia/NSW"                    "Australia/North"                 
[355] "Australia/Perth"                  "Australia/Queensland"            
[357] "Australia/South"                  "Australia/Sydney"                
[359] "Australia/Tasmania"               "Australia/Victoria"              
[361] "Australia/West"                   "Australia/Yancowinna"            
[363] "Brazil/Acre"                      "Brazil/DeNoronha"                
[365] "Brazil/East"                      "Brazil/West"                     
[367] "CET"                              "CST6CDT"                         
[369] "Canada/Atlantic"                  "Canada/Central"                  
[371] "Canada/East-Saskatchewan"         "Canada/Eastern"                  
[373] "Canada/Mountain"                  "Canada/Newfoundland"             
[375] "Canada/Pacific"                   "Canada/Saskatchewan"             
[377] "Canada/Yukon"                     "Chile/Continental"               
[379] "Chile/EasterIsland"               "Cuba"                            
[381] "EET"                              "EST"                             
[383] "EST5EDT"                          "Egypt"                           
[385] "Eire"                             "Etc/GMT"                         
[387] "Etc/GMT+0"                        "Etc/GMT+1"                       
[389] "Etc/GMT+10"                       "Etc/GMT+11"                      
[391] "Etc/GMT+12"                       "Etc/GMT+2"                       
[393] "Etc/GMT+3"                        "Etc/GMT+4"                       
[395] "Etc/GMT+5"                        "Etc/GMT+6"                       
[397] "Etc/GMT+7"                        "Etc/GMT+8"                       
[399] "Etc/GMT+9"                        "Etc/GMT-0"                       
[401] "Etc/GMT-1"                        "Etc/GMT-10"                      
[403] "Etc/GMT-11"                       "Etc/GMT-12"                      
[405] "Etc/GMT-13"                       "Etc/GMT-14"                      
[407] "Etc/GMT-2"                        "Etc/GMT-3"                       
[409] "Etc/GMT-4"                        "Etc/GMT-5"                       
[411] "Etc/GMT-6"                        "Etc/GMT-7"                       
[413] "Etc/GMT-8"                        "Etc/GMT-9"                       
[415] "Etc/GMT0"                         "Etc/Greenwich"                   
[417] "Etc/UCT"                          "Etc/UTC"                         
[419] "Etc/Universal"                    "Etc/Zulu"                        
[421] "Europe/Amsterdam"                 "Europe/Andorra"                  
[423] "Europe/Astrakhan"                 "Europe/Athens"                   
[425] "Europe/Belfast"                   "Europe/Belgrade"                 
[427] "Europe/Berlin"                    "Europe/Bratislava"               
[429] "Europe/Brussels"                  "Europe/Bucharest"                
[431] "Europe/Budapest"                  "Europe/Busingen"                 
[433] "Europe/Chisinau"                  "Europe/Copenhagen"               
[435] "Europe/Dublin"                    "Europe/Gibraltar"                
[437] "Europe/Guernsey"                  "Europe/Helsinki"                 
[439] "Europe/Isle_of_Man"               "Europe/Istanbul"                 
[441] "Europe/Jersey"                    "Europe/Kaliningrad"              
[443] "Europe/Kiev"                      "Europe/Kirov"                    
[445] "Europe/Lisbon"                    "Europe/Ljubljana"                
[447] "Europe/London"                    "Europe/Luxembourg"               
[449] "Europe/Madrid"                    "Europe/Malta"                    
[451] "Europe/Mariehamn"                 "Europe/Minsk"                    
[453] "Europe/Monaco"                    "Europe/Moscow"                   
[455] "Europe/Nicosia"                   "Europe/Oslo"                     
[457] "Europe/Paris"                     "Europe/Podgorica"                
[459] "Europe/Prague"                    "Europe/Riga"                     
[461] "Europe/Rome"                      "Europe/Samara"                   
[463] "Europe/San_Marino"                "Europe/Sarajevo"                 
[465] "Europe/Simferopol"                "Europe/Skopje"                   
[467] "Europe/Sofia"                     "Europe/Stockholm"                
[469] "Europe/Tallinn"                   "Europe/Tirane"                   
[471] "Europe/Tiraspol"                  "Europe/Ulyanovsk"                
[473] "Europe/Uzhgorod"                  "Europe/Vaduz"                    
[475] "Europe/Vatican"                   "Europe/Vienna"                   
[477] "Europe/Vilnius"                   "Europe/Volgograd"                
[479] "Europe/Warsaw"                    "Europe/Zagreb"                   
[481] "Europe/Zaporozhye"                "Europe/Zurich"                   
[483] "Factory"                          "GB"                              
[485] "GB-Eire"                          "GMT"                             
[487] "GMT+0"                            "GMT-0"                           
[489] "GMT0"                             "Greenwich"                       
[491] "HST"                              "Hongkong"                        
[493] "Iceland"                          "Indian/Antananarivo"             
[495] "Indian/Chagos"                    "Indian/Christmas"                
[497] "Indian/Cocos"                     "Indian/Comoro"                   
[499] "Indian/Kerguelen"                 "Indian/Mahe"                     
[501] "Indian/Maldives"                  "Indian/Mauritius"                
[503] "Indian/Mayotte"                   "Indian/Reunion"                  
[505] "Iran"                             "Israel"                          
[507] "Jamaica"                          "Japan"                           
[509] "Kwajalein"                        "Libya"                           
[511] "MET"                              "MST"                             
[513] "MST7MDT"                          "Mexico/BajaNorte"                
[515] "Mexico/BajaSur"                   "Mexico/General"                  
[517] "NZ"                               "NZ-CHAT"                         
[519] "Navajo"                           "PRC"                             
[521] "PST8PDT"                          "Pacific/Apia"                    
[523] "Pacific/Auckland"                 "Pacific/Bougainville"            
[525] "Pacific/Chatham"                  "Pacific/Chuuk"                   
[527] "Pacific/Easter"                   "Pacific/Efate"                   
[529] "Pacific/Enderbury"                "Pacific/Fakaofo"                 
[531] "Pacific/Fiji"                     "Pacific/Funafuti"                
[533] "Pacific/Galapagos"                "Pacific/Gambier"                 
[535] "Pacific/Guadalcanal"              "Pacific/Guam"                    
[537] "Pacific/Honolulu"                 "Pacific/Johnston"                
[539] "Pacific/Kiritimati"               "Pacific/Kosrae"                  
[541] "Pacific/Kwajalein"                "Pacific/Majuro"                  
[543] "Pacific/Marquesas"                "Pacific/Midway"                  
[545] "Pacific/Nauru"                    "Pacific/Niue"                    
[547] "Pacific/Norfolk"                  "Pacific/Noumea"                  
[549] "Pacific/Pago_Pago"                "Pacific/Palau"                   
[551] "Pacific/Pitcairn"                 "Pacific/Pohnpei"                 
[553] "Pacific/Ponape"                   "Pacific/Port_Moresby"            
[555] "Pacific/Rarotonga"                "Pacific/Saipan"                  
[557] "Pacific/Samoa"                    "Pacific/Tahiti"                  
[559] "Pacific/Tarawa"                   "Pacific/Tongatapu"               
[561] "Pacific/Truk"                     "Pacific/Wake"                    
[563] "Pacific/Wallis"                   "Pacific/Yap"                     
[565] "Poland"                           "Portugal"                        
[567] "ROC"                              "ROK"                             
[569] "Singapore"                        "SystemV/AST4"                    
[571] "SystemV/AST4ADT"                  "SystemV/CST6"                    
[573] "SystemV/CST6CDT"                  "SystemV/EST5"                    
[575] "SystemV/EST5EDT"                  "SystemV/HST10"                   
[577] "SystemV/MST7"                     "SystemV/MST7MDT"                 
[579] "SystemV/PST8"                     "SystemV/PST8PDT"                 
[581] "SystemV/YST9"                     "SystemV/YST9YDT"                 
[583] "Turkey"                           "UCT"                             
[585] "US/Alaska"                        "US/Aleutian"                     
[587] "US/Arizona"                       "US/Central"                      
[589] "US/East-Indiana"                  "US/Eastern"                      
[591] "US/Hawaii"                        "US/Indiana-Starke"               
[593] "US/Michigan"                      "US/Mountain"                     
[595] "US/Pacific"                       "US/Pacific-New"                  
[597] "US/Samoa"                         "UTC"                             
[599] "Universal"                        "W-SU"                            
[601] "WET"                              "Zulu"                            
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  Ops.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Ops.Date", pos = 'package:base')
> f()
Error in f() : object '.Generic' not found
> f(NULL)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(,NULL)
Error in f(, NULL) : object '.Generic' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Generic' not found
> f(list())
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(l0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(c0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(m0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(df0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(FALSE)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(list(),list())
Error in f(list(), list()) : object '.Generic' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Generic' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Generic' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Generic' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Generic' not found
> 
> ##  Ops.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Ops.POSIXt", pos = 'package:base')
> f()
Error in f() : object '.Generic' not found
> f(NULL)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(,NULL)
Error in f(, NULL) : object '.Generic' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Generic' not found
> f(list())
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(l0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(c0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(m0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(df0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(FALSE)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(list(),list())
Error in f(list(), list()) : object '.Generic' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Generic' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Generic' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Generic' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Generic' not found
> 
> ##  Ops.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Ops.data.frame", pos = 'package:base')
> f()
Error in f() : object '.Method' not found
> f(NULL)
Error in f(NULL) : object '.Method' not found
> f(,NULL)
Error in f(, NULL) : object '.Method' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Method' not found
> f(list())
Error in f(list()) : object '.Method' not found
> f(l0)
Error in f(l0) : object '.Method' not found
> f(c0)
Error in f(c0) : object '.Method' not found
> f(m0)
Error in f(m0) : object '.Method' not found
> f(df0)
Error in f(df0) : object '.Method' not found
> f(FALSE)
Error in f(FALSE) : object '.Method' not found
> f(list(),list())
Error in f(list(), list()) : object '.Method' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Method' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Method' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Method' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Method' not found
> 
> ##  Ops.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Ops.difftime", pos = 'package:base')
> f()
Error in f() : object '.Generic' not found
> f(NULL)
Error in f(NULL) : object '.Generic' not found
> f(,NULL)
Error in f(, NULL) : object '.Generic' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Generic' not found
> f(list())
Error in f(list()) : object '.Generic' not found
> f(l0)
Error in f(l0) : object '.Generic' not found
> f(c0)
Error in f(c0) : object '.Generic' not found
> f(m0)
Error in f(m0) : object '.Generic' not found
> f(df0)
Error in f(df0) : object '.Generic' not found
> f(FALSE)
Error in f(FALSE) : object '.Generic' not found
> f(list(),list())
Error in f(list(), list()) : object '.Generic' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Generic' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Generic' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Generic' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Generic' not found
> 
> ##  Ops.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Ops.factor", pos = 'package:base')
> f()
Error in f() : object '.Generic' not found
> f(NULL)
Error in f(NULL) : object '.Generic' not found
> f(,NULL)
Error in f(, NULL) : object '.Generic' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Generic' not found
> f(list())
Error in f(list()) : object '.Generic' not found
> f(l0)
Error in f(l0) : object '.Generic' not found
> f(c0)
Error in f(c0) : object '.Generic' not found
> f(m0)
Error in f(m0) : object '.Generic' not found
> f(df0)
Error in f(df0) : object '.Generic' not found
> f(FALSE)
Error in f(FALSE) : object '.Generic' not found
> f(list(),list())
Error in f(list(), list()) : object '.Generic' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Generic' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Generic' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Generic' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Generic' not found
> 
> ##  Ops.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Ops.numeric_version", pos = 'package:base')
> f()
Error in f() : object '.Generic' not found
> f(NULL)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(,NULL)
Error in f(, NULL) : object '.Generic' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Generic' not found
> f(list())
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(l0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(c0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(m0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(df0)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(FALSE)
Error in sprintf(gettext(fmt, domain = domain), ...) : 
  object '.Generic' not found
Calls: f
> f(list(),list())
Error in f(list(), list()) : object '.Generic' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Generic' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Generic' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Generic' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Generic' not found
> 
> ##  Ops.ordered  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Ops.ordered", pos = 'package:base')
> f()
Error in f() : object '.Generic' not found
> f(NULL)
Error in f(NULL) : object '.Generic' not found
> f(,NULL)
Error in f(, NULL) : object '.Generic' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Generic' not found
> f(list())
Error in f(list()) : object '.Generic' not found
> f(l0)
Error in f(l0) : object '.Generic' not found
> f(c0)
Error in f(c0) : object '.Generic' not found
> f(m0)
Error in f(m0) : object '.Generic' not found
> f(df0)
Error in f(df0) : object '.Generic' not found
> f(FALSE)
Error in f(FALSE) : object '.Generic' not found
> f(list(),list())
Error in f(list(), list()) : object '.Generic' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Generic' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Generic' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Generic' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Generic' not found
> 
> ##  Position  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Position", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "x" is missing, with no default
> f(,NULL)
[1] NA
> f(NULL,NULL)
[1] NA
> f(list())
Error in f(list()) : argument "x" is missing, with no default
> f(l0)
Error in f(l0) : argument "x" is missing, with no default
> f(c0)
Error in f(c0) : argument "x" is missing, with no default
> f(m0)
Error in f(m0) : argument "x" is missing, with no default
> f(df0)
Error in f(df0) : argument "x" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "x" is missing, with no default
> f(list(),list())
[1] NA
> f(l0,l0)
[1] NA
> f(c0,c0)
[1] NA
> f(df0,df0)
Error in f(x[[i]]) : argument "x" is missing, with no default
Calls: f -> f
> f(FALSE,FALSE)
Error in f(x[[i]]) : argument "x" is missing, with no default
Calls: f -> f
> 
> ##  R.Version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("R.Version", pos = 'package:base')
> f()
$platform
[1] "x86_64-pc-linux-gnu"

$arch
[1] "x86_64"

$os
[1] "linux-gnu"

$system
[1] "x86_64, linux-gnu"

$status
[1] ""

$major
[1] "3"

$minor
[1] "3.0"

$year
[1] "2016"

$month
[1] "05"

$day
[1] "03"

$`svn rev`
[1] "70573"

$language
[1] "R"

$version.string
[1] "R version 3.3.0 (2016-05-03)"

$nickname
[1] "Supposedly Educational"

> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  R.home  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("R.home", pos = 'package:base')
> f()
[1] "/home/aviral/projects/r"
> f(NULL)
Error in switch(component, home = rh, bin = if (.Platform$OS.type == "windows" &&  : 
  EXPR must be a length 1 vector
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in switch(component, home = rh, bin = if (.Platform$OS.type == "windows" &&  : 
  EXPR must be a length 1 vector
Calls: f
> f(l0)
Error in switch(component, home = rh, bin = if (.Platform$OS.type == "windows" &&  : 
  EXPR must be a length 1 vector
Calls: f
> f(c0)
Error in switch(component, home = rh, bin = if (.Platform$OS.type == "windows" &&  : 
  EXPR must be a length 1 vector
Calls: f
> f(m0)
Error in switch(component, home = rh, bin = if (.Platform$OS.type == "windows" &&  : 
  EXPR must be a length 1 vector
Calls: f
> f(df0)
> f(FALSE)
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  RNGkind  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("RNGkind", pos = 'package:base')
> f()
[1] "Mersenne-Twister" "Inversion"       
> f(NULL)
[1] "Mersenne-Twister" "Inversion"       
> f(,NULL)
[1] "Mersenne-Twister" "Inversion"       
> f(NULL,NULL)
[1] "Mersenne-Twister" "Inversion"       
> f(list())
[1] "Mersenne-Twister" "Inversion"       
> f(l0)
[1] "Mersenne-Twister" "Inversion"       
> f(c0)
[1] "Mersenne-Twister" "Inversion"       
> f(m0)
[1] "Mersenne-Twister" "Inversion"       
> f(df0)
Error in f(df0) : 
  'kind' must be a character string of length 1 (RNG to be used).
> f(FALSE)
Error in f(FALSE) : 
  'kind' must be a character string of length 1 (RNG to be used).
> f(list(),list())
Error in f(list(), list()) : 
  'normal.kind' must be a character string of length 1
> f(l0,l0)
Error in f(l0, l0) : 'normal.kind' must be a character string of length 1
> f(c0,c0)
Error in f(c0, c0) : 'normal.kind' must be a character string of length 1
> f(df0,df0)
Error in f(df0, df0) : 
  'kind' must be a character string of length 1 (RNG to be used).
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'kind' must be a character string of length 1 (RNG to be used).
> 
> ##  RNGversion  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("RNGversion", pos = 'package:base')
> f()
Error in strsplit(vstr, ".", fixed = TRUE) : 
  argument "vstr" is missing, with no default
Calls: f -> strsplit
> f(NULL)
Error in strsplit(vstr, ".", fixed = TRUE) : non-character argument
Calls: f -> strsplit
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in strsplit(vstr, ".", fixed = TRUE) : non-character argument
Calls: f -> strsplit
> f(l0)
Error in strsplit(vstr, ".", fixed = TRUE) : non-character argument
Calls: f -> strsplit
> f(c0)
Error in strsplit(vstr, ".", fixed = TRUE)[[1L]] : 
  subscript out of bounds
Calls: f
> f(m0)
Error in strsplit(vstr, ".", fixed = TRUE) : non-character argument
Calls: f -> strsplit
> f(df0)
Error in strsplit(vstr, ".", fixed = TRUE) : non-character argument
Calls: f -> strsplit
> f(FALSE)
Error in strsplit(vstr, ".", fixed = TRUE) : non-character argument
Calls: f -> strsplit
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  R_system_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("R_system_version", pos = 'package:base')
> f()
Error in .make_numeric_version(x, strict, .standard_regexps()$valid_R_system_version,  : 
  argument "x" is missing, with no default
Calls: f -> .make_numeric_version
> f(NULL)
<0 elements>
> f(,NULL)
Error in .make_numeric_version(x, strict, .standard_regexps()$valid_R_system_version,  : 
  argument "x" is missing, with no default
Calls: f -> .make_numeric_version
> f(NULL,NULL)
<0 elements>
> f(list())
<0 elements>
> f(l0)
<0 elements>
> f(c0)
<0 elements>
> f(m0)
<0 elements>
> f(df0)
Error: invalid version specification 'integer(0)'
> f(FALSE)
Error: invalid version specification 'FALSE'
> f(list(),list())
<0 elements>
> f(l0,l0)
<0 elements>
> f(c0,c0)
<0 elements>
> f(df0,df0)
Error in !all(ok) && strict : invalid 'y' type in 'x && y'
Calls: f -> .make_numeric_version
> f(FALSE,FALSE)
[1] <NA>
> 
> ##  Re  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Re", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'Re' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'Re' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : non-numeric argument to function
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to 'Re' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'Re' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'Re' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'Re' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'Re' which requires 1
> 
> ##  Recall  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Recall", pos = 'package:base')
> f()
Error in f() : 'Recall' called from outside a closure
> f(NULL)
Error in f(NULL) : 'Recall' called from outside a closure
> f(,NULL)
Error in f(, NULL) : 'Recall' called from outside a closure
> f(NULL,NULL)
Error in f(NULL, NULL) : 'Recall' called from outside a closure
> f(list())
Error in f(list()) : 'Recall' called from outside a closure
> f(l0)
Error in f(l0) : 'Recall' called from outside a closure
> f(c0)
Error in f(c0) : 'Recall' called from outside a closure
> f(m0)
Error in f(m0) : 'Recall' called from outside a closure
> f(df0)
Error in f(df0) : 'Recall' called from outside a closure
> f(FALSE)
Error in f(FALSE) : 'Recall' called from outside a closure
> f(list(),list())
Error in f(list(), list()) : 'Recall' called from outside a closure
> f(l0,l0)
Error in f(l0, l0) : 'Recall' called from outside a closure
> f(c0,c0)
Error in f(c0, c0) : 'Recall' called from outside a closure
> f(df0,df0)
Error in f(df0, df0) : 'Recall' called from outside a closure
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'Recall' called from outside a closure
> 
> ##  Reduce  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Reduce", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "x" is missing, with no default
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : argument "x" is missing, with no default
> f(l0)
Error in f(l0) : argument "x" is missing, with no default
> f(c0)
Error in f(c0) : argument "x" is missing, with no default
> f(m0)
Error in f(m0) : argument "x" is missing, with no default
> f(df0)
Error in f(df0) : argument "x" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "x" is missing, with no default
> f(list(),list())
NULL
> f(l0,l0)
NULL
> f(c0,c0)
NULL
> f(df0,df0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'df0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(FALSE,FALSE)
Error in match.fun(f) : 'FALSE' is not a function, character or symbol
Calls: f -> match.fun
> 
> ##  Summary.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Summary.Date", pos = 'package:base')
> f()
Error in f() : object '.Generic' not found
> f(NULL)
Error in f(NULL) : object '.Generic' not found
> f(,NULL)
Error in f(, NULL) : object '.Generic' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Generic' not found
> f(list())
Error in f(list()) : object '.Generic' not found
> f(l0)
Error in f(l0) : object '.Generic' not found
> f(c0)
Error in f(c0) : object '.Generic' not found
> f(m0)
Error in f(m0) : object '.Generic' not found
> f(df0)
Error in f(df0) : object '.Generic' not found
> f(FALSE)
Error in f(FALSE) : object '.Generic' not found
> f(list(),list())
Error in f(list(), list()) : object '.Generic' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Generic' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Generic' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Generic' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Generic' not found
> 
> ##  Summary.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Summary.POSIXct", pos = 'package:base')
> f()
Error in f() : object '.Generic' not found
> f(NULL)
Error in f(NULL) : object '.Generic' not found
> f(,NULL)
Error in f(, NULL) : object '.Generic' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Generic' not found
> f(list())
Error in f(list()) : object '.Generic' not found
> f(l0)
Error in f(l0) : object '.Generic' not found
> f(c0)
Error in f(c0) : object '.Generic' not found
> f(m0)
Error in f(m0) : object '.Generic' not found
> f(df0)
Error in f(df0) : object '.Generic' not found
> f(FALSE)
Error in f(FALSE) : object '.Generic' not found
> f(list(),list())
Error in f(list(), list()) : object '.Generic' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Generic' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Generic' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Generic' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Generic' not found
> 
> ##  Summary.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Summary.POSIXlt", pos = 'package:base')
> f()
Error in f() : object '.Generic' not found
> f(NULL)
Error in f(NULL) : object '.Generic' not found
> f(,NULL)
Error in f(, NULL) : object '.Generic' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Generic' not found
> f(list())
Error in f(list()) : object '.Generic' not found
> f(l0)
Error in f(l0) : object '.Generic' not found
> f(c0)
Error in f(c0) : object '.Generic' not found
> f(m0)
Error in f(m0) : object '.Generic' not found
> f(df0)
Error in f(df0) : object '.Generic' not found
> f(FALSE)
Error in f(FALSE) : object '.Generic' not found
> f(list(),list())
Error in f(list(), list()) : object '.Generic' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Generic' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Generic' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Generic' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Generic' not found
> 
> ##  Summary.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Summary.data.frame", pos = 'package:base')
> f()
Error in do.call(.Generic, c(args, na.rm = na.rm)) : 
  argument "na.rm" is missing, with no default
Calls: f -> do.call
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... lapply -> FUN -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... lapply -> FUN -> as.matrix -> as.matrix.default -> array
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... lapply -> FUN -> as.matrix -> as.matrix.default -> array
> f(list())
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f -> lapply -> FUN
> f(l0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f -> lapply -> FUN
> f(c0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f -> lapply -> FUN
> f(m0)
Error in do.call(.Generic, c(args, na.rm = na.rm)) : 
  argument "na.rm" is missing, with no default
Calls: f -> do.call
> f(df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f -> lapply -> FUN
> f(FALSE)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f -> lapply -> FUN
> f(list(),list())
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f -> lapply -> FUN
> f(l0,l0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f -> lapply -> FUN
> f(c0,c0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f -> lapply -> FUN
> f(df0,df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f -> lapply -> FUN
> f(FALSE,FALSE)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f -> lapply -> FUN
> 
> ##  Summary.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Summary.difftime", pos = 'package:base')
> f()
Error in f() : object '.Generic' not found
> f(NULL)
Error in f(NULL) : object '.Generic' not found
> f(,NULL)
Error in f(, NULL) : object '.Generic' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Generic' not found
> f(list())
Error in f(list()) : object '.Generic' not found
> f(l0)
Error in f(l0) : object '.Generic' not found
> f(c0)
Error in f(c0) : object '.Generic' not found
> f(m0)
Error in f(m0) : object '.Generic' not found
> f(df0)
Error in f(df0) : object '.Generic' not found
> f(FALSE)
Error in f(FALSE) : object '.Generic' not found
> f(list(),list())
Error in f(list(), list()) : object '.Generic' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Generic' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Generic' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Generic' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Generic' not found
> 
> ##  Summary.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Summary.factor", pos = 'package:base')
> f()
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(NULL)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(,NULL)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(NULL,NULL)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(list())
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(l0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(c0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(m0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(df0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(FALSE)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(list(),list())
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(l0,l0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(c0,c0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(df0,df0)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> f(FALSE,FALSE)
Error in sQuote(.Generic) : object '.Generic' not found
Calls: f
> 
> ##  Summary.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Summary.numeric_version", pos = 'package:base')
> f()
Error in f() : object '.Generic' not found
> f(NULL)
Error in f(NULL) : object '.Generic' not found
> f(,NULL)
Error in f(, NULL) : object '.Generic' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Generic' not found
> f(list())
Error in f(list()) : object '.Generic' not found
> f(l0)
Error in f(l0) : object '.Generic' not found
> f(c0)
Error in f(c0) : object '.Generic' not found
> f(m0)
Error in f(m0) : object '.Generic' not found
> f(df0)
Error in f(df0) : object '.Generic' not found
> f(FALSE)
Error in f(FALSE) : object '.Generic' not found
> f(list(),list())
Error in f(list(), list()) : object '.Generic' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Generic' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Generic' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Generic' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Generic' not found
> 
> ##  Summary.ordered  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Summary.ordered", pos = 'package:base')
> f()
Error in f() : object '.Generic' not found
> f(NULL)
Error in f(NULL) : object '.Generic' not found
> f(,NULL)
Error in f(, NULL) : object '.Generic' not found
> f(NULL,NULL)
Error in f(NULL, NULL) : object '.Generic' not found
> f(list())
Error in f(list()) : object '.Generic' not found
> f(l0)
Error in f(l0) : object '.Generic' not found
> f(c0)
Error in f(c0) : object '.Generic' not found
> f(m0)
Error in f(m0) : object '.Generic' not found
> f(df0)
Error in f(df0) : object '.Generic' not found
> f(FALSE)
Error in f(FALSE) : object '.Generic' not found
> f(list(),list())
Error in f(list(), list()) : object '.Generic' not found
> f(l0,l0)
Error in f(l0, l0) : object '.Generic' not found
> f(c0,c0)
Error in f(c0, c0) : object '.Generic' not found
> f(df0,df0)
Error in f(df0, df0) : object '.Generic' not found
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : object '.Generic' not found
> 
> ##  Sys.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.Date", pos = 'package:base')
> f()
[1] "2016-09-04"
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  Sys.chmod  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.chmod", pos = 'package:base')
> f()
Error in f() : argument "paths" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'paths' argument
> f(,NULL)
Error in f(, NULL) : argument "paths" is missing, with no default
> f(NULL,NULL)
Error in as.octmode(mode) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode
> f(list())
Error in f(list()) : invalid 'paths' argument
> f(l0)
Error in f(l0) : invalid 'paths' argument
> f(c0)
> f(m0)
Error in f(m0) : invalid 'paths' argument
> f(df0)
Error in f(df0) : invalid 'paths' argument
> f(FALSE)
Error in f(FALSE) : invalid 'paths' argument
> f(list(),list())
Error in as.octmode(mode) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode
> f(l0,l0)
Error in as.octmode(mode) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode
> f(c0,c0)
> f(df0,df0)
Error in as.octmode(mode) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode
> f(FALSE,FALSE)
Error in as.octmode(mode) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode
> 
> ##  Sys.getenv  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.getenv", pos = 'package:base')
> f()
COLUMNS                 145
DBUS_SESSION_BUS_ADDRESS
                        unix:abstract=/tmp/dbus-3ekNb9FOya,guid=3067af966e779cbf66d681f857cc275f
DEFAULTS_PATH           /usr/share/gconf/XMonad.default.path
DERBY_HOME              /usr/lib/jvm/oracle_jdk1.8.0_102/db
DESKTOP_SESSION         XMonad
DISPLAY                 :0
EDITOR                  nano
EMACS                   t
GDMSESSION              XMonad
GDM_LANG                en_US
GPG_AGENT_INFO          /home/aviral/.gnupg/S.gpg-agent:0:1
HOME                    /home/aviral
INSIDE_EMACS            24.5.1,comint
J2REDIR                 /usr/lib/jvm/oracle_jdk1.8.0_102/jre
J2SDKDIR                /usr/lib/jvm/oracle_jdk1.8.0_102
JAVA_HOME               /usr/lib/jvm/oracle_jdk1.8.0_102
LANG                    en_US.UTF-8
LANGUAGE                en
LC_ALL                  C
LD_LIBRARY_PATH         /home/aviral/projects/r/lib:/usr/local/lib:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/lib/amd64/server
LESS                    -F -g -i -M -R -S -w -X -z-4
LESSOPEN                | /usr/bin/env lesspipe %s 2>&-
LN_S                    ln -s
LOGNAME                 aviral
MAKE                    make
MAKEFLAGS               w -- RVAL_IF_DIFF=0
MAKELEVEL               4
MAKEOVERRIDES           ${-*-command-variables-*-}
MAKE_TERMERR            /dev/pts/4
MAKE_TERMOUT            /dev/pts/4
MANDATORY_PATH          /usr/share/gconf/XMonad.mandatory.path
MANPATH                 
MATHEMATICA_HOME        /usr/local/Wolfram/Mathematica/10.4
MFLAGS                  -w
NODE_PATH               /usr/lib/nodejs:/usr/lib/node_modules:/usr/share/javascript
PAGER                   less
PATH                    /usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/jvm/oracle_jdk1.8.0_102/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/db/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/bin:/usr/local/texlive/2016/bin/x86_64-linux:/home/aviral/projects/r/bin/:/home/aviral/projects/r/bin/
PWD                     /home/aviral/projects/r/tests
RVAL_IF_DIFF            0
R_ARCH                  
R_BROWSER               /usr/bin/firefox
R_BZIPCMD               /bin/bzip2
R_DEFAULT_PACKAGES      
R_DOC_DIR               /home/aviral/projects/r/doc
R_ENVIRON               
R_ENVIRON_USER          
R_GZIPCMD               /bin/gzip
R_HOME                  /home/aviral/projects/r
R_INCLUDE_DIR           /home/aviral/projects/r/include
R_LIBS_SITE             no-such-dir
R_LIBS_USER             ~/R/x86_64-pc-linux-gnu-library/3.3
R_PAPERSIZE             letter
R_PDFVIEWER             /usr/bin/xdg-open
R_PLATFORM              x86_64-pc-linux-gnu
R_PRINTCMD              
R_PROFILE               
R_PROFILE_USER          
R_RD4PDF                times,inconsolata,hyper
R_SESSION_TMPDIR        /tmp/aviral/Rtmpfvg13H
R_SHARE_DIR             /home/aviral/projects/r/share
R_SYSTEM_ABI            linux,gcc,gxx,gfortran,?
R_TEXI2DVICMD           texi2dvi
R_UNZIPCMD              /usr/bin/unzip
R_ZIPCMD                /usr/bin/zip
SED                     /bin/sed
SHELL                   /usr/bin/zsh
SHLVL                   6
SRCDIR                  .
SSH_AGENT_PID           3199
SSH_AUTH_SOCK           /tmp/ssh-bXm9dOdroyNs/agent.3149
TAR                     /bin/tar
TERM                    dumb
TERMCAP                 
TMPDIR                  /tmp/aviral
USER                    aviral
VISUAL                  nano
XAUTHORITY              /home/aviral/.Xauthority
XDG_CONFIG_DIRS         /etc/xdg/xdg-XMonad:/etc/xdg
XDG_DATA_DIRS           /usr/share/XMonad:/usr/local/share/:/usr/share/
XDG_GREETER_DATA_DIR    /var/lib/lightdm-data/aviral
XDG_RUNTIME_DIR         /run/user/1000
XDG_SEAT                seat0
XDG_SEAT_PATH           /org/freedesktop/DisplayManager/Seat0
XDG_SESSION_DESKTOP     XMonad
XDG_SESSION_ID          c2
XDG_SESSION_PATH        /org/freedesktop/DisplayManager/Session0
XDG_SESSION_TYPE        x11
XDG_VTNR                7
> f(NULL)
COLUMNS                 145
DBUS_SESSION_BUS_ADDRESS
                        unix:abstract=/tmp/dbus-3ekNb9FOya,guid=3067af966e779cbf66d681f857cc275f
DEFAULTS_PATH           /usr/share/gconf/XMonad.default.path
DERBY_HOME              /usr/lib/jvm/oracle_jdk1.8.0_102/db
DESKTOP_SESSION         XMonad
DISPLAY                 :0
EDITOR                  nano
EMACS                   t
GDMSESSION              XMonad
GDM_LANG                en_US
GPG_AGENT_INFO          /home/aviral/.gnupg/S.gpg-agent:0:1
HOME                    /home/aviral
INSIDE_EMACS            24.5.1,comint
J2REDIR                 /usr/lib/jvm/oracle_jdk1.8.0_102/jre
J2SDKDIR                /usr/lib/jvm/oracle_jdk1.8.0_102
JAVA_HOME               /usr/lib/jvm/oracle_jdk1.8.0_102
LANG                    en_US.UTF-8
LANGUAGE                en
LC_ALL                  C
LD_LIBRARY_PATH         /home/aviral/projects/r/lib:/usr/local/lib:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/lib/amd64/server
LESS                    -F -g -i -M -R -S -w -X -z-4
LESSOPEN                | /usr/bin/env lesspipe %s 2>&-
LN_S                    ln -s
LOGNAME                 aviral
MAKE                    make
MAKEFLAGS               w -- RVAL_IF_DIFF=0
MAKELEVEL               4
MAKEOVERRIDES           ${-*-command-variables-*-}
MAKE_TERMERR            /dev/pts/4
MAKE_TERMOUT            /dev/pts/4
MANDATORY_PATH          /usr/share/gconf/XMonad.mandatory.path
MANPATH                 
MATHEMATICA_HOME        /usr/local/Wolfram/Mathematica/10.4
MFLAGS                  -w
NODE_PATH               /usr/lib/nodejs:/usr/lib/node_modules:/usr/share/javascript
PAGER                   less
PATH                    /usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/jvm/oracle_jdk1.8.0_102/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/db/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/bin:/usr/local/texlive/2016/bin/x86_64-linux:/home/aviral/projects/r/bin/:/home/aviral/projects/r/bin/
PWD                     /home/aviral/projects/r/tests
RVAL_IF_DIFF            0
R_ARCH                  
R_BROWSER               /usr/bin/firefox
R_BZIPCMD               /bin/bzip2
R_DEFAULT_PACKAGES      
R_DOC_DIR               /home/aviral/projects/r/doc
R_ENVIRON               
R_ENVIRON_USER          
R_GZIPCMD               /bin/gzip
R_HOME                  /home/aviral/projects/r
R_INCLUDE_DIR           /home/aviral/projects/r/include
R_LIBS_SITE             no-such-dir
R_LIBS_USER             ~/R/x86_64-pc-linux-gnu-library/3.3
R_PAPERSIZE             letter
R_PDFVIEWER             /usr/bin/xdg-open
R_PLATFORM              x86_64-pc-linux-gnu
R_PRINTCMD              
R_PROFILE               
R_PROFILE_USER          
R_RD4PDF                times,inconsolata,hyper
R_SESSION_TMPDIR        /tmp/aviral/Rtmpfvg13H
R_SHARE_DIR             /home/aviral/projects/r/share
R_SYSTEM_ABI            linux,gcc,gxx,gfortran,?
R_TEXI2DVICMD           texi2dvi
R_UNZIPCMD              /usr/bin/unzip
R_ZIPCMD                /usr/bin/zip
SED                     /bin/sed
SHELL                   /usr/bin/zsh
SHLVL                   6
SRCDIR                  .
SSH_AGENT_PID           3199
SSH_AUTH_SOCK           /tmp/ssh-bXm9dOdroyNs/agent.3149
TAR                     /bin/tar
TERM                    dumb
TERMCAP                 
TMPDIR                  /tmp/aviral
USER                    aviral
VISUAL                  nano
XAUTHORITY              /home/aviral/.Xauthority
XDG_CONFIG_DIRS         /etc/xdg/xdg-XMonad:/etc/xdg
XDG_DATA_DIRS           /usr/share/XMonad:/usr/local/share/:/usr/share/
XDG_GREETER_DATA_DIR    /var/lib/lightdm-data/aviral
XDG_RUNTIME_DIR         /run/user/1000
XDG_SEAT                seat0
XDG_SEAT_PATH           /org/freedesktop/DisplayManager/Seat0
XDG_SESSION_DESKTOP     XMonad
XDG_SESSION_ID          c2
XDG_SESSION_PATH        /org/freedesktop/DisplayManager/Session0
XDG_SESSION_TYPE        x11
XDG_VTNR                7
> f(,NULL)
COLUMNS                 145
DBUS_SESSION_BUS_ADDRESS
                        unix:abstract=/tmp/dbus-3ekNb9FOya,guid=3067af966e779cbf66d681f857cc275f
DEFAULTS_PATH           /usr/share/gconf/XMonad.default.path
DERBY_HOME              /usr/lib/jvm/oracle_jdk1.8.0_102/db
DESKTOP_SESSION         XMonad
DISPLAY                 :0
EDITOR                  nano
EMACS                   t
GDMSESSION              XMonad
GDM_LANG                en_US
GPG_AGENT_INFO          /home/aviral/.gnupg/S.gpg-agent:0:1
HOME                    /home/aviral
INSIDE_EMACS            24.5.1,comint
J2REDIR                 /usr/lib/jvm/oracle_jdk1.8.0_102/jre
J2SDKDIR                /usr/lib/jvm/oracle_jdk1.8.0_102
JAVA_HOME               /usr/lib/jvm/oracle_jdk1.8.0_102
LANG                    en_US.UTF-8
LANGUAGE                en
LC_ALL                  C
LD_LIBRARY_PATH         /home/aviral/projects/r/lib:/usr/local/lib:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/lib/amd64/server
LESS                    -F -g -i -M -R -S -w -X -z-4
LESSOPEN                | /usr/bin/env lesspipe %s 2>&-
LN_S                    ln -s
LOGNAME                 aviral
MAKE                    make
MAKEFLAGS               w -- RVAL_IF_DIFF=0
MAKELEVEL               4
MAKEOVERRIDES           ${-*-command-variables-*-}
MAKE_TERMERR            /dev/pts/4
MAKE_TERMOUT            /dev/pts/4
MANDATORY_PATH          /usr/share/gconf/XMonad.mandatory.path
MANPATH                 
MATHEMATICA_HOME        /usr/local/Wolfram/Mathematica/10.4
MFLAGS                  -w
NODE_PATH               /usr/lib/nodejs:/usr/lib/node_modules:/usr/share/javascript
PAGER                   less
PATH                    /usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/jvm/oracle_jdk1.8.0_102/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/db/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/bin:/usr/local/texlive/2016/bin/x86_64-linux:/home/aviral/projects/r/bin/:/home/aviral/projects/r/bin/
PWD                     /home/aviral/projects/r/tests
RVAL_IF_DIFF            0
R_ARCH                  
R_BROWSER               /usr/bin/firefox
R_BZIPCMD               /bin/bzip2
R_DEFAULT_PACKAGES      
R_DOC_DIR               /home/aviral/projects/r/doc
R_ENVIRON               
R_ENVIRON_USER          
R_GZIPCMD               /bin/gzip
R_HOME                  /home/aviral/projects/r
R_INCLUDE_DIR           /home/aviral/projects/r/include
R_LIBS_SITE             no-such-dir
R_LIBS_USER             ~/R/x86_64-pc-linux-gnu-library/3.3
R_PAPERSIZE             letter
R_PDFVIEWER             /usr/bin/xdg-open
R_PLATFORM              x86_64-pc-linux-gnu
R_PRINTCMD              
R_PROFILE               
R_PROFILE_USER          
R_RD4PDF                times,inconsolata,hyper
R_SESSION_TMPDIR        /tmp/aviral/Rtmpfvg13H
R_SHARE_DIR             /home/aviral/projects/r/share
R_SYSTEM_ABI            linux,gcc,gxx,gfortran,?
R_TEXI2DVICMD           texi2dvi
R_UNZIPCMD              /usr/bin/unzip
R_ZIPCMD                /usr/bin/zip
SED                     /bin/sed
SHELL                   /usr/bin/zsh
SHLVL                   6
SRCDIR                  .
SSH_AGENT_PID           3199
SSH_AUTH_SOCK           /tmp/ssh-bXm9dOdroyNs/agent.3149
TAR                     /bin/tar
TERM                    dumb
TERMCAP                 
TMPDIR                  /tmp/aviral
USER                    aviral
VISUAL                  nano
XAUTHORITY              /home/aviral/.Xauthority
XDG_CONFIG_DIRS         /etc/xdg/xdg-XMonad:/etc/xdg
XDG_DATA_DIRS           /usr/share/XMonad:/usr/local/share/:/usr/share/
XDG_GREETER_DATA_DIR    /var/lib/lightdm-data/aviral
XDG_RUNTIME_DIR         /run/user/1000
XDG_SEAT                seat0
XDG_SEAT_PATH           /org/freedesktop/DisplayManager/Seat0
XDG_SESSION_DESKTOP     XMonad
XDG_SESSION_ID          c2
XDG_SESSION_PATH        /org/freedesktop/DisplayManager/Session0
XDG_SESSION_TYPE        x11
XDG_VTNR                7
> f(NULL,NULL)
COLUMNS                 145
DBUS_SESSION_BUS_ADDRESS
                        unix:abstract=/tmp/dbus-3ekNb9FOya,guid=3067af966e779cbf66d681f857cc275f
DEFAULTS_PATH           /usr/share/gconf/XMonad.default.path
DERBY_HOME              /usr/lib/jvm/oracle_jdk1.8.0_102/db
DESKTOP_SESSION         XMonad
DISPLAY                 :0
EDITOR                  nano
EMACS                   t
GDMSESSION              XMonad
GDM_LANG                en_US
GPG_AGENT_INFO          /home/aviral/.gnupg/S.gpg-agent:0:1
HOME                    /home/aviral
INSIDE_EMACS            24.5.1,comint
J2REDIR                 /usr/lib/jvm/oracle_jdk1.8.0_102/jre
J2SDKDIR                /usr/lib/jvm/oracle_jdk1.8.0_102
JAVA_HOME               /usr/lib/jvm/oracle_jdk1.8.0_102
LANG                    en_US.UTF-8
LANGUAGE                en
LC_ALL                  C
LD_LIBRARY_PATH         /home/aviral/projects/r/lib:/usr/local/lib:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/lib/amd64/server
LESS                    -F -g -i -M -R -S -w -X -z-4
LESSOPEN                | /usr/bin/env lesspipe %s 2>&-
LN_S                    ln -s
LOGNAME                 aviral
MAKE                    make
MAKEFLAGS               w -- RVAL_IF_DIFF=0
MAKELEVEL               4
MAKEOVERRIDES           ${-*-command-variables-*-}
MAKE_TERMERR            /dev/pts/4
MAKE_TERMOUT            /dev/pts/4
MANDATORY_PATH          /usr/share/gconf/XMonad.mandatory.path
MANPATH                 
MATHEMATICA_HOME        /usr/local/Wolfram/Mathematica/10.4
MFLAGS                  -w
NODE_PATH               /usr/lib/nodejs:/usr/lib/node_modules:/usr/share/javascript
PAGER                   less
PATH                    /usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/jvm/oracle_jdk1.8.0_102/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/db/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/bin:/usr/local/texlive/2016/bin/x86_64-linux:/home/aviral/projects/r/bin/:/home/aviral/projects/r/bin/
PWD                     /home/aviral/projects/r/tests
RVAL_IF_DIFF            0
R_ARCH                  
R_BROWSER               /usr/bin/firefox
R_BZIPCMD               /bin/bzip2
R_DEFAULT_PACKAGES      
R_DOC_DIR               /home/aviral/projects/r/doc
R_ENVIRON               
R_ENVIRON_USER          
R_GZIPCMD               /bin/gzip
R_HOME                  /home/aviral/projects/r
R_INCLUDE_DIR           /home/aviral/projects/r/include
R_LIBS_SITE             no-such-dir
R_LIBS_USER             ~/R/x86_64-pc-linux-gnu-library/3.3
R_PAPERSIZE             letter
R_PDFVIEWER             /usr/bin/xdg-open
R_PLATFORM              x86_64-pc-linux-gnu
R_PRINTCMD              
R_PROFILE               
R_PROFILE_USER          
R_RD4PDF                times,inconsolata,hyper
R_SESSION_TMPDIR        /tmp/aviral/Rtmpfvg13H
R_SHARE_DIR             /home/aviral/projects/r/share
R_SYSTEM_ABI            linux,gcc,gxx,gfortran,?
R_TEXI2DVICMD           texi2dvi
R_UNZIPCMD              /usr/bin/unzip
R_ZIPCMD                /usr/bin/zip
SED                     /bin/sed
SHELL                   /usr/bin/zsh
SHLVL                   6
SRCDIR                  .
SSH_AGENT_PID           3199
SSH_AUTH_SOCK           /tmp/ssh-bXm9dOdroyNs/agent.3149
TAR                     /bin/tar
TERM                    dumb
TERMCAP                 
TMPDIR                  /tmp/aviral
USER                    aviral
VISUAL                  nano
XAUTHORITY              /home/aviral/.Xauthority
XDG_CONFIG_DIRS         /etc/xdg/xdg-XMonad:/etc/xdg
XDG_DATA_DIRS           /usr/share/XMonad:/usr/local/share/:/usr/share/
XDG_GREETER_DATA_DIR    /var/lib/lightdm-data/aviral
XDG_RUNTIME_DIR         /run/user/1000
XDG_SEAT                seat0
XDG_SEAT_PATH           /org/freedesktop/DisplayManager/Seat0
XDG_SESSION_DESKTOP     XMonad
XDG_SESSION_ID          c2
XDG_SESSION_PATH        /org/freedesktop/DisplayManager/Session0
XDG_SESSION_TYPE        x11
XDG_VTNR                7
> f(list())
 [1] "R_ENVIRON="                                                                                                                                                                                                                                                                                                            
 [2] "SED=/bin/sed"                                                                                                                                                                                                                                                                                                          
 [3] "XDG_VTNR=7"                                                                                                                                                                                                                                                                                                            
 [4] "MANPATH="                                                                                                                                                                                                                                                                                                              
 [5] "SSH_AGENT_PID=3199"                                                                                                                                                                                                                                                                                                    
 [6] "XDG_SESSION_ID=c2"                                                                                                                                                                                                                                                                                                     
 [7] "R_INCLUDE_DIR=/home/aviral/projects/r/include"                                                                                                                                                                                                                                                                         
 [8] "XDG_GREETER_DATA_DIR=/var/lib/lightdm-data/aviral"                                                                                                                                                                                                                                                                     
 [9] "R_DEFAULT_PACKAGES="                                                                                                                                                                                                                                                                                                   
[10] "GPG_AGENT_INFO=/home/aviral/.gnupg/S.gpg-agent:0:1"                                                                                                                                                                                                                                                                    
[11] "SHELL=/usr/bin/zsh"                                                                                                                                                                                                                                                                                                    
[12] "TERM=dumb"                                                                                                                                                                                                                                                                                                             
[13] "MAKEFLAGS=w -- RVAL_IF_DIFF=0"                                                                                                                                                                                                                                                                                         
[14] "TMPDIR=/tmp/aviral"                                                                                                                                                                                                                                                                                                    
[15] "DERBY_HOME=/usr/lib/jvm/oracle_jdk1.8.0_102/db"                                                                                                                                                                                                                                                                        
[16] "LC_ALL=C"                                                                                                                                                                                                                                                                                                              
[17] "EMACS=t"                                                                                                                                                                                                                                                                                                               
[18] "MAKEOVERRIDES=${-*-command-variables-*-}"                                                                                                                                                                                                                                                                              
[19] "USER=aviral"                                                                                                                                                                                                                                                                                                           
[20] "LD_LIBRARY_PATH=/home/aviral/projects/r/lib:/usr/local/lib:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/lib/amd64/server"                                                                                                                                                                                                      
[21] "XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session0"                                                                                                                                                                                                                                                             
[22] "XDG_SEAT_PATH=/org/freedesktop/DisplayManager/Seat0"                                                                                                                                                                                                                                                                   
[23] "MAKE_TERMOUT=/dev/pts/4"                                                                                                                                                                                                                                                                                               
[24] "SSH_AUTH_SOCK=/tmp/ssh-bXm9dOdroyNs/agent.3149"                                                                                                                                                                                                                                                                        
[25] "TERMCAP="                                                                                                                                                                                                                                                                                                              
[26] "DEFAULTS_PATH=/usr/share/gconf/XMonad.default.path"                                                                                                                                                                                                                                                                    
[27] "MAKELEVEL=4"                                                                                                                                                                                                                                                                                                           
[28] "COLUMNS=145"                                                                                                                                                                                                                                                                                                           
[29] "PAGER=less"                                                                                                                                                                                                                                                                                                            
[30] "MFLAGS=-w"                                                                                                                                                                                                                                                                                                             
[31] "XDG_CONFIG_DIRS=/etc/xdg/xdg-XMonad:/etc/xdg"                                                                                                                                                                                                                                                                          
[32] "DESKTOP_SESSION=XMonad"                                                                                                                                                                                                                                                                                                
[33] "PATH=/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/jvm/oracle_jdk1.8.0_102/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/db/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/bin:/usr/local/texlive/2016/bin/x86_64-linux:/home/aviral/projects/r/bin/:/home/aviral/projects/r/bin/"
[34] "R_ENVIRON_USER="                                                                                                                                                                                                                                                                                                       
[35] "XDG_SESSION_TYPE=x11"                                                                                                                                                                                                                                                                                                  
[36] "PWD=/home/aviral/projects/r/tests"                                                                                                                                                                                                                                                                                     
[37] "R_SHARE_DIR=/home/aviral/projects/r/share"                                                                                                                                                                                                                                                                             
[38] "JAVA_HOME=/usr/lib/jvm/oracle_jdk1.8.0_102"                                                                                                                                                                                                                                                                            
[39] "EDITOR=nano"                                                                                                                                                                                                                                                                                                           
[40] "LANG=en_US.UTF-8"                                                                                                                                                                                                                                                                                                      
[41] "GDM_LANG=en_US"                                                                                                                                                                                                                                                                                                        
[42] "MANDATORY_PATH=/usr/share/gconf/XMonad.mandatory.path"                                                                                                                                                                                                                                                                 
[43] "R_LIBS_SITE=no-such-dir"                                                                                                                                                                                                                                                                                               
[44] "NODE_PATH=/usr/lib/nodejs:/usr/lib/node_modules:/usr/share/javascript"                                                                                                                                                                                                                                                 
[45] "R_PROFILE_USER="                                                                                                                                                                                                                                                                                                       
[46] "GDMSESSION=XMonad"                                                                                                                                                                                                                                                                                                     
[47] "RVAL_IF_DIFF=0"                                                                                                                                                                                                                                                                                                        
[48] "R_ARCH="                                                                                                                                                                                                                                                                                                               
[49] "HOME=/home/aviral"                                                                                                                                                                                                                                                                                                     
[50] "XDG_SEAT=seat0"                                                                                                                                                                                                                                                                                                        
[51] "SHLVL=6"                                                                                                                                                                                                                                                                                                               
[52] "LANGUAGE=en"                                                                                                                                                                                                                                                                                                           
[53] "SRCDIR=."                                                                                                                                                                                                                                                                                                              
[54] "MATHEMATICA_HOME=/usr/local/Wolfram/Mathematica/10.4"                                                                                                                                                                                                                                                                  
[55] "XDG_SESSION_DESKTOP=XMonad"                                                                                                                                                                                                                                                                                            
[56] "LOGNAME=aviral"                                                                                                                                                                                                                                                                                                        
[57] "LESS=-F -g -i -M -R -S -w -X -z-4"                                                                                                                                                                                                                                                                                     
[58] "VISUAL=nano"                                                                                                                                                                                                                                                                                                           
[59] "MAKE_TERMERR=/dev/pts/4"                                                                                                                                                                                                                                                                                               
[60] "XDG_DATA_DIRS=/usr/share/XMonad:/usr/local/share/:/usr/share/"                                                                                                                                                                                                                                                         
[61] "DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-3ekNb9FOya,guid=3067af966e779cbf66d681f857cc275f"                                                                                                                                                                                                                     
[62] "J2SDKDIR=/usr/lib/jvm/oracle_jdk1.8.0_102"                                                                                                                                                                                                                                                                             
[63] "LESSOPEN=| /usr/bin/env lesspipe %s 2>&-"                                                                                                                                                                                                                                                                              
[64] "R_HOME=/home/aviral/projects/r"                                                                                                                                                                                                                                                                                        
[65] "XDG_RUNTIME_DIR=/run/user/1000"                                                                                                                                                                                                                                                                                        
[66] "DISPLAY=:0"                                                                                                                                                                                                                                                                                                            
[67] "R_PROFILE="                                                                                                                                                                                                                                                                                                            
[68] "J2REDIR=/usr/lib/jvm/oracle_jdk1.8.0_102/jre"                                                                                                                                                                                                                                                                          
[69] "INSIDE_EMACS=24.5.1,comint"                                                                                                                                                                                                                                                                                            
[70] "R_DOC_DIR=/home/aviral/projects/r/doc"                                                                                                                                                                                                                                                                                 
[71] "XAUTHORITY=/home/aviral/.Xauthority"                                                                                                                                                                                                                                                                                   
[72] "R_PLATFORM=x86_64-pc-linux-gnu"                                                                                                                                                                                                                                                                                        
[73] "R_PAPERSIZE=letter"                                                                                                                                                                                                                                                                                                    
[74] "R_PRINTCMD="                                                                                                                                                                                                                                                                                                           
[75] "R_RD4PDF=times,inconsolata,hyper"                                                                                                                                                                                                                                                                                      
[76] "R_TEXI2DVICMD=texi2dvi"                                                                                                                                                                                                                                                                                                
[77] "R_GZIPCMD=/bin/gzip"                                                                                                                                                                                                                                                                                                   
[78] "R_UNZIPCMD=/usr/bin/unzip"                                                                                                                                                                                                                                                                                             
[79] "R_ZIPCMD=/usr/bin/zip"                                                                                                                                                                                                                                                                                                 
[80] "R_BZIPCMD=/bin/bzip2"                                                                                                                                                                                                                                                                                                  
[81] "R_BROWSER=/usr/bin/firefox"                                                                                                                                                                                                                                                                                            
[82] "R_PDFVIEWER=/usr/bin/xdg-open"                                                                                                                                                                                                                                                                                         
[83] "LN_S=ln -s"                                                                                                                                                                                                                                                                                                            
[84] "MAKE=make"                                                                                                                                                                                                                                                                                                             
[85] "TAR=/bin/tar"                                                                                                                                                                                                                                                                                                          
[86] "R_SYSTEM_ABI=linux,gcc,gxx,gfortran,?"                                                                                                                                                                                                                                                                                 
[87] "R_LIBS_USER=~/R/x86_64-pc-linux-gnu-library/3.3"                                                                                                                                                                                                                                                                       
[88] "R_SESSION_TMPDIR=/tmp/aviral/Rtmpfvg13H"                                                                                                                                                                                                                                                                               
> f(l0)
 [1] "R_ENVIRON="                                                                                                                                                                                                                                                                                                            
 [2] "SED=/bin/sed"                                                                                                                                                                                                                                                                                                          
 [3] "XDG_VTNR=7"                                                                                                                                                                                                                                                                                                            
 [4] "MANPATH="                                                                                                                                                                                                                                                                                                              
 [5] "SSH_AGENT_PID=3199"                                                                                                                                                                                                                                                                                                    
 [6] "XDG_SESSION_ID=c2"                                                                                                                                                                                                                                                                                                     
 [7] "R_INCLUDE_DIR=/home/aviral/projects/r/include"                                                                                                                                                                                                                                                                         
 [8] "XDG_GREETER_DATA_DIR=/var/lib/lightdm-data/aviral"                                                                                                                                                                                                                                                                     
 [9] "R_DEFAULT_PACKAGES="                                                                                                                                                                                                                                                                                                   
[10] "GPG_AGENT_INFO=/home/aviral/.gnupg/S.gpg-agent:0:1"                                                                                                                                                                                                                                                                    
[11] "SHELL=/usr/bin/zsh"                                                                                                                                                                                                                                                                                                    
[12] "TERM=dumb"                                                                                                                                                                                                                                                                                                             
[13] "MAKEFLAGS=w -- RVAL_IF_DIFF=0"                                                                                                                                                                                                                                                                                         
[14] "TMPDIR=/tmp/aviral"                                                                                                                                                                                                                                                                                                    
[15] "DERBY_HOME=/usr/lib/jvm/oracle_jdk1.8.0_102/db"                                                                                                                                                                                                                                                                        
[16] "LC_ALL=C"                                                                                                                                                                                                                                                                                                              
[17] "EMACS=t"                                                                                                                                                                                                                                                                                                               
[18] "MAKEOVERRIDES=${-*-command-variables-*-}"                                                                                                                                                                                                                                                                              
[19] "USER=aviral"                                                                                                                                                                                                                                                                                                           
[20] "LD_LIBRARY_PATH=/home/aviral/projects/r/lib:/usr/local/lib:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/lib/amd64/server"                                                                                                                                                                                                      
[21] "XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session0"                                                                                                                                                                                                                                                             
[22] "XDG_SEAT_PATH=/org/freedesktop/DisplayManager/Seat0"                                                                                                                                                                                                                                                                   
[23] "MAKE_TERMOUT=/dev/pts/4"                                                                                                                                                                                                                                                                                               
[24] "SSH_AUTH_SOCK=/tmp/ssh-bXm9dOdroyNs/agent.3149"                                                                                                                                                                                                                                                                        
[25] "TERMCAP="                                                                                                                                                                                                                                                                                                              
[26] "DEFAULTS_PATH=/usr/share/gconf/XMonad.default.path"                                                                                                                                                                                                                                                                    
[27] "MAKELEVEL=4"                                                                                                                                                                                                                                                                                                           
[28] "COLUMNS=145"                                                                                                                                                                                                                                                                                                           
[29] "PAGER=less"                                                                                                                                                                                                                                                                                                            
[30] "MFLAGS=-w"                                                                                                                                                                                                                                                                                                             
[31] "XDG_CONFIG_DIRS=/etc/xdg/xdg-XMonad:/etc/xdg"                                                                                                                                                                                                                                                                          
[32] "DESKTOP_SESSION=XMonad"                                                                                                                                                                                                                                                                                                
[33] "PATH=/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/jvm/oracle_jdk1.8.0_102/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/db/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/bin:/usr/local/texlive/2016/bin/x86_64-linux:/home/aviral/projects/r/bin/:/home/aviral/projects/r/bin/"
[34] "R_ENVIRON_USER="                                                                                                                                                                                                                                                                                                       
[35] "XDG_SESSION_TYPE=x11"                                                                                                                                                                                                                                                                                                  
[36] "PWD=/home/aviral/projects/r/tests"                                                                                                                                                                                                                                                                                     
[37] "R_SHARE_DIR=/home/aviral/projects/r/share"                                                                                                                                                                                                                                                                             
[38] "JAVA_HOME=/usr/lib/jvm/oracle_jdk1.8.0_102"                                                                                                                                                                                                                                                                            
[39] "EDITOR=nano"                                                                                                                                                                                                                                                                                                           
[40] "LANG=en_US.UTF-8"                                                                                                                                                                                                                                                                                                      
[41] "GDM_LANG=en_US"                                                                                                                                                                                                                                                                                                        
[42] "MANDATORY_PATH=/usr/share/gconf/XMonad.mandatory.path"                                                                                                                                                                                                                                                                 
[43] "R_LIBS_SITE=no-such-dir"                                                                                                                                                                                                                                                                                               
[44] "NODE_PATH=/usr/lib/nodejs:/usr/lib/node_modules:/usr/share/javascript"                                                                                                                                                                                                                                                 
[45] "R_PROFILE_USER="                                                                                                                                                                                                                                                                                                       
[46] "GDMSESSION=XMonad"                                                                                                                                                                                                                                                                                                     
[47] "RVAL_IF_DIFF=0"                                                                                                                                                                                                                                                                                                        
[48] "R_ARCH="                                                                                                                                                                                                                                                                                                               
[49] "HOME=/home/aviral"                                                                                                                                                                                                                                                                                                     
[50] "XDG_SEAT=seat0"                                                                                                                                                                                                                                                                                                        
[51] "SHLVL=6"                                                                                                                                                                                                                                                                                                               
[52] "LANGUAGE=en"                                                                                                                                                                                                                                                                                                           
[53] "SRCDIR=."                                                                                                                                                                                                                                                                                                              
[54] "MATHEMATICA_HOME=/usr/local/Wolfram/Mathematica/10.4"                                                                                                                                                                                                                                                                  
[55] "XDG_SESSION_DESKTOP=XMonad"                                                                                                                                                                                                                                                                                            
[56] "LOGNAME=aviral"                                                                                                                                                                                                                                                                                                        
[57] "LESS=-F -g -i -M -R -S -w -X -z-4"                                                                                                                                                                                                                                                                                     
[58] "VISUAL=nano"                                                                                                                                                                                                                                                                                                           
[59] "MAKE_TERMERR=/dev/pts/4"                                                                                                                                                                                                                                                                                               
[60] "XDG_DATA_DIRS=/usr/share/XMonad:/usr/local/share/:/usr/share/"                                                                                                                                                                                                                                                         
[61] "DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-3ekNb9FOya,guid=3067af966e779cbf66d681f857cc275f"                                                                                                                                                                                                                     
[62] "J2SDKDIR=/usr/lib/jvm/oracle_jdk1.8.0_102"                                                                                                                                                                                                                                                                             
[63] "LESSOPEN=| /usr/bin/env lesspipe %s 2>&-"                                                                                                                                                                                                                                                                              
[64] "R_HOME=/home/aviral/projects/r"                                                                                                                                                                                                                                                                                        
[65] "XDG_RUNTIME_DIR=/run/user/1000"                                                                                                                                                                                                                                                                                        
[66] "DISPLAY=:0"                                                                                                                                                                                                                                                                                                            
[67] "R_PROFILE="                                                                                                                                                                                                                                                                                                            
[68] "J2REDIR=/usr/lib/jvm/oracle_jdk1.8.0_102/jre"                                                                                                                                                                                                                                                                          
[69] "INSIDE_EMACS=24.5.1,comint"                                                                                                                                                                                                                                                                                            
[70] "R_DOC_DIR=/home/aviral/projects/r/doc"                                                                                                                                                                                                                                                                                 
[71] "XAUTHORITY=/home/aviral/.Xauthority"                                                                                                                                                                                                                                                                                   
[72] "R_PLATFORM=x86_64-pc-linux-gnu"                                                                                                                                                                                                                                                                                        
[73] "R_PAPERSIZE=letter"                                                                                                                                                                                                                                                                                                    
[74] "R_PRINTCMD="                                                                                                                                                                                                                                                                                                           
[75] "R_RD4PDF=times,inconsolata,hyper"                                                                                                                                                                                                                                                                                      
[76] "R_TEXI2DVICMD=texi2dvi"                                                                                                                                                                                                                                                                                                
[77] "R_GZIPCMD=/bin/gzip"                                                                                                                                                                                                                                                                                                   
[78] "R_UNZIPCMD=/usr/bin/unzip"                                                                                                                                                                                                                                                                                             
[79] "R_ZIPCMD=/usr/bin/zip"                                                                                                                                                                                                                                                                                                 
[80] "R_BZIPCMD=/bin/bzip2"                                                                                                                                                                                                                                                                                                  
[81] "R_BROWSER=/usr/bin/firefox"                                                                                                                                                                                                                                                                                            
[82] "R_PDFVIEWER=/usr/bin/xdg-open"                                                                                                                                                                                                                                                                                         
[83] "LN_S=ln -s"                                                                                                                                                                                                                                                                                                            
[84] "MAKE=make"                                                                                                                                                                                                                                                                                                             
[85] "TAR=/bin/tar"                                                                                                                                                                                                                                                                                                          
[86] "R_SYSTEM_ABI=linux,gcc,gxx,gfortran,?"                                                                                                                                                                                                                                                                                 
[87] "R_LIBS_USER=~/R/x86_64-pc-linux-gnu-library/3.3"                                                                                                                                                                                                                                                                       
[88] "R_SESSION_TMPDIR=/tmp/aviral/Rtmpfvg13H"                                                                                                                                                                                                                                                                               
> f(c0)
 [1] "R_ENVIRON="                                                                                                                                                                                                                                                                                                            
 [2] "SED=/bin/sed"                                                                                                                                                                                                                                                                                                          
 [3] "XDG_VTNR=7"                                                                                                                                                                                                                                                                                                            
 [4] "MANPATH="                                                                                                                                                                                                                                                                                                              
 [5] "SSH_AGENT_PID=3199"                                                                                                                                                                                                                                                                                                    
 [6] "XDG_SESSION_ID=c2"                                                                                                                                                                                                                                                                                                     
 [7] "R_INCLUDE_DIR=/home/aviral/projects/r/include"                                                                                                                                                                                                                                                                         
 [8] "XDG_GREETER_DATA_DIR=/var/lib/lightdm-data/aviral"                                                                                                                                                                                                                                                                     
 [9] "R_DEFAULT_PACKAGES="                                                                                                                                                                                                                                                                                                   
[10] "GPG_AGENT_INFO=/home/aviral/.gnupg/S.gpg-agent:0:1"                                                                                                                                                                                                                                                                    
[11] "SHELL=/usr/bin/zsh"                                                                                                                                                                                                                                                                                                    
[12] "TERM=dumb"                                                                                                                                                                                                                                                                                                             
[13] "MAKEFLAGS=w -- RVAL_IF_DIFF=0"                                                                                                                                                                                                                                                                                         
[14] "TMPDIR=/tmp/aviral"                                                                                                                                                                                                                                                                                                    
[15] "DERBY_HOME=/usr/lib/jvm/oracle_jdk1.8.0_102/db"                                                                                                                                                                                                                                                                        
[16] "LC_ALL=C"                                                                                                                                                                                                                                                                                                              
[17] "EMACS=t"                                                                                                                                                                                                                                                                                                               
[18] "MAKEOVERRIDES=${-*-command-variables-*-}"                                                                                                                                                                                                                                                                              
[19] "USER=aviral"                                                                                                                                                                                                                                                                                                           
[20] "LD_LIBRARY_PATH=/home/aviral/projects/r/lib:/usr/local/lib:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/lib/amd64/server"                                                                                                                                                                                                      
[21] "XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session0"                                                                                                                                                                                                                                                             
[22] "XDG_SEAT_PATH=/org/freedesktop/DisplayManager/Seat0"                                                                                                                                                                                                                                                                   
[23] "MAKE_TERMOUT=/dev/pts/4"                                                                                                                                                                                                                                                                                               
[24] "SSH_AUTH_SOCK=/tmp/ssh-bXm9dOdroyNs/agent.3149"                                                                                                                                                                                                                                                                        
[25] "TERMCAP="                                                                                                                                                                                                                                                                                                              
[26] "DEFAULTS_PATH=/usr/share/gconf/XMonad.default.path"                                                                                                                                                                                                                                                                    
[27] "MAKELEVEL=4"                                                                                                                                                                                                                                                                                                           
[28] "COLUMNS=145"                                                                                                                                                                                                                                                                                                           
[29] "PAGER=less"                                                                                                                                                                                                                                                                                                            
[30] "MFLAGS=-w"                                                                                                                                                                                                                                                                                                             
[31] "XDG_CONFIG_DIRS=/etc/xdg/xdg-XMonad:/etc/xdg"                                                                                                                                                                                                                                                                          
[32] "DESKTOP_SESSION=XMonad"                                                                                                                                                                                                                                                                                                
[33] "PATH=/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/jvm/oracle_jdk1.8.0_102/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/db/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/bin:/usr/local/texlive/2016/bin/x86_64-linux:/home/aviral/projects/r/bin/:/home/aviral/projects/r/bin/"
[34] "R_ENVIRON_USER="                                                                                                                                                                                                                                                                                                       
[35] "XDG_SESSION_TYPE=x11"                                                                                                                                                                                                                                                                                                  
[36] "PWD=/home/aviral/projects/r/tests"                                                                                                                                                                                                                                                                                     
[37] "R_SHARE_DIR=/home/aviral/projects/r/share"                                                                                                                                                                                                                                                                             
[38] "JAVA_HOME=/usr/lib/jvm/oracle_jdk1.8.0_102"                                                                                                                                                                                                                                                                            
[39] "EDITOR=nano"                                                                                                                                                                                                                                                                                                           
[40] "LANG=en_US.UTF-8"                                                                                                                                                                                                                                                                                                      
[41] "GDM_LANG=en_US"                                                                                                                                                                                                                                                                                                        
[42] "MANDATORY_PATH=/usr/share/gconf/XMonad.mandatory.path"                                                                                                                                                                                                                                                                 
[43] "R_LIBS_SITE=no-such-dir"                                                                                                                                                                                                                                                                                               
[44] "NODE_PATH=/usr/lib/nodejs:/usr/lib/node_modules:/usr/share/javascript"                                                                                                                                                                                                                                                 
[45] "R_PROFILE_USER="                                                                                                                                                                                                                                                                                                       
[46] "GDMSESSION=XMonad"                                                                                                                                                                                                                                                                                                     
[47] "RVAL_IF_DIFF=0"                                                                                                                                                                                                                                                                                                        
[48] "R_ARCH="                                                                                                                                                                                                                                                                                                               
[49] "HOME=/home/aviral"                                                                                                                                                                                                                                                                                                     
[50] "XDG_SEAT=seat0"                                                                                                                                                                                                                                                                                                        
[51] "SHLVL=6"                                                                                                                                                                                                                                                                                                               
[52] "LANGUAGE=en"                                                                                                                                                                                                                                                                                                           
[53] "SRCDIR=."                                                                                                                                                                                                                                                                                                              
[54] "MATHEMATICA_HOME=/usr/local/Wolfram/Mathematica/10.4"                                                                                                                                                                                                                                                                  
[55] "XDG_SESSION_DESKTOP=XMonad"                                                                                                                                                                                                                                                                                            
[56] "LOGNAME=aviral"                                                                                                                                                                                                                                                                                                        
[57] "LESS=-F -g -i -M -R -S -w -X -z-4"                                                                                                                                                                                                                                                                                     
[58] "VISUAL=nano"                                                                                                                                                                                                                                                                                                           
[59] "MAKE_TERMERR=/dev/pts/4"                                                                                                                                                                                                                                                                                               
[60] "XDG_DATA_DIRS=/usr/share/XMonad:/usr/local/share/:/usr/share/"                                                                                                                                                                                                                                                         
[61] "DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-3ekNb9FOya,guid=3067af966e779cbf66d681f857cc275f"                                                                                                                                                                                                                     
[62] "J2SDKDIR=/usr/lib/jvm/oracle_jdk1.8.0_102"                                                                                                                                                                                                                                                                             
[63] "LESSOPEN=| /usr/bin/env lesspipe %s 2>&-"                                                                                                                                                                                                                                                                              
[64] "R_HOME=/home/aviral/projects/r"                                                                                                                                                                                                                                                                                        
[65] "XDG_RUNTIME_DIR=/run/user/1000"                                                                                                                                                                                                                                                                                        
[66] "DISPLAY=:0"                                                                                                                                                                                                                                                                                                            
[67] "R_PROFILE="                                                                                                                                                                                                                                                                                                            
[68] "J2REDIR=/usr/lib/jvm/oracle_jdk1.8.0_102/jre"                                                                                                                                                                                                                                                                          
[69] "INSIDE_EMACS=24.5.1,comint"                                                                                                                                                                                                                                                                                            
[70] "R_DOC_DIR=/home/aviral/projects/r/doc"                                                                                                                                                                                                                                                                                 
[71] "XAUTHORITY=/home/aviral/.Xauthority"                                                                                                                                                                                                                                                                                   
[72] "R_PLATFORM=x86_64-pc-linux-gnu"                                                                                                                                                                                                                                                                                        
[73] "R_PAPERSIZE=letter"                                                                                                                                                                                                                                                                                                    
[74] "R_PRINTCMD="                                                                                                                                                                                                                                                                                                           
[75] "R_RD4PDF=times,inconsolata,hyper"                                                                                                                                                                                                                                                                                      
[76] "R_TEXI2DVICMD=texi2dvi"                                                                                                                                                                                                                                                                                                
[77] "R_GZIPCMD=/bin/gzip"                                                                                                                                                                                                                                                                                                   
[78] "R_UNZIPCMD=/usr/bin/unzip"                                                                                                                                                                                                                                                                                             
[79] "R_ZIPCMD=/usr/bin/zip"                                                                                                                                                                                                                                                                                                 
[80] "R_BZIPCMD=/bin/bzip2"                                                                                                                                                                                                                                                                                                  
[81] "R_BROWSER=/usr/bin/firefox"                                                                                                                                                                                                                                                                                            
[82] "R_PDFVIEWER=/usr/bin/xdg-open"                                                                                                                                                                                                                                                                                         
[83] "LN_S=ln -s"                                                                                                                                                                                                                                                                                                            
[84] "MAKE=make"                                                                                                                                                                                                                                                                                                             
[85] "TAR=/bin/tar"                                                                                                                                                                                                                                                                                                          
[86] "R_SYSTEM_ABI=linux,gcc,gxx,gfortran,?"                                                                                                                                                                                                                                                                                 
[87] "R_LIBS_USER=~/R/x86_64-pc-linux-gnu-library/3.3"                                                                                                                                                                                                                                                                       
[88] "R_SESSION_TMPDIR=/tmp/aviral/Rtmpfvg13H"                                                                                                                                                                                                                                                                               
> f(m0)
 [1] "R_ENVIRON="                                                                                                                                                                                                                                                                                                            
 [2] "SED=/bin/sed"                                                                                                                                                                                                                                                                                                          
 [3] "XDG_VTNR=7"                                                                                                                                                                                                                                                                                                            
 [4] "MANPATH="                                                                                                                                                                                                                                                                                                              
 [5] "SSH_AGENT_PID=3199"                                                                                                                                                                                                                                                                                                    
 [6] "XDG_SESSION_ID=c2"                                                                                                                                                                                                                                                                                                     
 [7] "R_INCLUDE_DIR=/home/aviral/projects/r/include"                                                                                                                                                                                                                                                                         
 [8] "XDG_GREETER_DATA_DIR=/var/lib/lightdm-data/aviral"                                                                                                                                                                                                                                                                     
 [9] "R_DEFAULT_PACKAGES="                                                                                                                                                                                                                                                                                                   
[10] "GPG_AGENT_INFO=/home/aviral/.gnupg/S.gpg-agent:0:1"                                                                                                                                                                                                                                                                    
[11] "SHELL=/usr/bin/zsh"                                                                                                                                                                                                                                                                                                    
[12] "TERM=dumb"                                                                                                                                                                                                                                                                                                             
[13] "MAKEFLAGS=w -- RVAL_IF_DIFF=0"                                                                                                                                                                                                                                                                                         
[14] "TMPDIR=/tmp/aviral"                                                                                                                                                                                                                                                                                                    
[15] "DERBY_HOME=/usr/lib/jvm/oracle_jdk1.8.0_102/db"                                                                                                                                                                                                                                                                        
[16] "LC_ALL=C"                                                                                                                                                                                                                                                                                                              
[17] "EMACS=t"                                                                                                                                                                                                                                                                                                               
[18] "MAKEOVERRIDES=${-*-command-variables-*-}"                                                                                                                                                                                                                                                                              
[19] "USER=aviral"                                                                                                                                                                                                                                                                                                           
[20] "LD_LIBRARY_PATH=/home/aviral/projects/r/lib:/usr/local/lib:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/lib/amd64/server"                                                                                                                                                                                                      
[21] "XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session0"                                                                                                                                                                                                                                                             
[22] "XDG_SEAT_PATH=/org/freedesktop/DisplayManager/Seat0"                                                                                                                                                                                                                                                                   
[23] "MAKE_TERMOUT=/dev/pts/4"                                                                                                                                                                                                                                                                                               
[24] "SSH_AUTH_SOCK=/tmp/ssh-bXm9dOdroyNs/agent.3149"                                                                                                                                                                                                                                                                        
[25] "TERMCAP="                                                                                                                                                                                                                                                                                                              
[26] "DEFAULTS_PATH=/usr/share/gconf/XMonad.default.path"                                                                                                                                                                                                                                                                    
[27] "MAKELEVEL=4"                                                                                                                                                                                                                                                                                                           
[28] "COLUMNS=145"                                                                                                                                                                                                                                                                                                           
[29] "PAGER=less"                                                                                                                                                                                                                                                                                                            
[30] "MFLAGS=-w"                                                                                                                                                                                                                                                                                                             
[31] "XDG_CONFIG_DIRS=/etc/xdg/xdg-XMonad:/etc/xdg"                                                                                                                                                                                                                                                                          
[32] "DESKTOP_SESSION=XMonad"                                                                                                                                                                                                                                                                                                
[33] "PATH=/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/jvm/oracle_jdk1.8.0_102/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/db/bin:/usr/lib/jvm/oracle_jdk1.8.0_102/jre/bin:/usr/local/texlive/2016/bin/x86_64-linux:/home/aviral/projects/r/bin/:/home/aviral/projects/r/bin/"
[34] "R_ENVIRON_USER="                                                                                                                                                                                                                                                                                                       
[35] "XDG_SESSION_TYPE=x11"                                                                                                                                                                                                                                                                                                  
[36] "PWD=/home/aviral/projects/r/tests"                                                                                                                                                                                                                                                                                     
[37] "R_SHARE_DIR=/home/aviral/projects/r/share"                                                                                                                                                                                                                                                                             
[38] "JAVA_HOME=/usr/lib/jvm/oracle_jdk1.8.0_102"                                                                                                                                                                                                                                                                            
[39] "EDITOR=nano"                                                                                                                                                                                                                                                                                                           
[40] "LANG=en_US.UTF-8"                                                                                                                                                                                                                                                                                                      
[41] "GDM_LANG=en_US"                                                                                                                                                                                                                                                                                                        
[42] "MANDATORY_PATH=/usr/share/gconf/XMonad.mandatory.path"                                                                                                                                                                                                                                                                 
[43] "R_LIBS_SITE=no-such-dir"                                                                                                                                                                                                                                                                                               
[44] "NODE_PATH=/usr/lib/nodejs:/usr/lib/node_modules:/usr/share/javascript"                                                                                                                                                                                                                                                 
[45] "R_PROFILE_USER="                                                                                                                                                                                                                                                                                                       
[46] "GDMSESSION=XMonad"                                                                                                                                                                                                                                                                                                     
[47] "RVAL_IF_DIFF=0"                                                                                                                                                                                                                                                                                                        
[48] "R_ARCH="                                                                                                                                                                                                                                                                                                               
[49] "HOME=/home/aviral"                                                                                                                                                                                                                                                                                                     
[50] "XDG_SEAT=seat0"                                                                                                                                                                                                                                                                                                        
[51] "SHLVL=6"                                                                                                                                                                                                                                                                                                               
[52] "LANGUAGE=en"                                                                                                                                                                                                                                                                                                           
[53] "SRCDIR=."                                                                                                                                                                                                                                                                                                              
[54] "MATHEMATICA_HOME=/usr/local/Wolfram/Mathematica/10.4"                                                                                                                                                                                                                                                                  
[55] "XDG_SESSION_DESKTOP=XMonad"                                                                                                                                                                                                                                                                                            
[56] "LOGNAME=aviral"                                                                                                                                                                                                                                                                                                        
[57] "LESS=-F -g -i -M -R -S -w -X -z-4"                                                                                                                                                                                                                                                                                     
[58] "VISUAL=nano"                                                                                                                                                                                                                                                                                                           
[59] "MAKE_TERMERR=/dev/pts/4"                                                                                                                                                                                                                                                                                               
[60] "XDG_DATA_DIRS=/usr/share/XMonad:/usr/local/share/:/usr/share/"                                                                                                                                                                                                                                                         
[61] "DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-3ekNb9FOya,guid=3067af966e779cbf66d681f857cc275f"                                                                                                                                                                                                                     
[62] "J2SDKDIR=/usr/lib/jvm/oracle_jdk1.8.0_102"                                                                                                                                                                                                                                                                             
[63] "LESSOPEN=| /usr/bin/env lesspipe %s 2>&-"                                                                                                                                                                                                                                                                              
[64] "R_HOME=/home/aviral/projects/r"                                                                                                                                                                                                                                                                                        
[65] "XDG_RUNTIME_DIR=/run/user/1000"                                                                                                                                                                                                                                                                                        
[66] "DISPLAY=:0"                                                                                                                                                                                                                                                                                                            
[67] "R_PROFILE="                                                                                                                                                                                                                                                                                                            
[68] "J2REDIR=/usr/lib/jvm/oracle_jdk1.8.0_102/jre"                                                                                                                                                                                                                                                                          
[69] "INSIDE_EMACS=24.5.1,comint"                                                                                                                                                                                                                                                                                            
[70] "R_DOC_DIR=/home/aviral/projects/r/doc"                                                                                                                                                                                                                                                                                 
[71] "XAUTHORITY=/home/aviral/.Xauthority"                                                                                                                                                                                                                                                                                   
[72] "R_PLATFORM=x86_64-pc-linux-gnu"                                                                                                                                                                                                                                                                                        
[73] "R_PAPERSIZE=letter"                                                                                                                                                                                                                                                                                                    
[74] "R_PRINTCMD="                                                                                                                                                                                                                                                                                                           
[75] "R_RD4PDF=times,inconsolata,hyper"                                                                                                                                                                                                                                                                                      
[76] "R_TEXI2DVICMD=texi2dvi"                                                                                                                                                                                                                                                                                                
[77] "R_GZIPCMD=/bin/gzip"                                                                                                                                                                                                                                                                                                   
[78] "R_UNZIPCMD=/usr/bin/unzip"                                                                                                                                                                                                                                                                                             
[79] "R_ZIPCMD=/usr/bin/zip"                                                                                                                                                                                                                                                                                                 
[80] "R_BZIPCMD=/bin/bzip2"                                                                                                                                                                                                                                                                                                  
[81] "R_BROWSER=/usr/bin/firefox"                                                                                                                                                                                                                                                                                            
[82] "R_PDFVIEWER=/usr/bin/xdg-open"                                                                                                                                                                                                                                                                                         
[83] "LN_S=ln -s"                                                                                                                                                                                                                                                                                                            
[84] "MAKE=make"                                                                                                                                                                                                                                                                                                             
[85] "TAR=/bin/tar"                                                                                                                                                                                                                                                                                                          
[86] "R_SYSTEM_ABI=linux,gcc,gxx,gfortran,?"                                                                                                                                                                                                                                                                                 
[87] "R_LIBS_USER=~/R/x86_64-pc-linux-gnu-library/3.3"                                                                                                                                                                                                                                                                       
[88] "R_SESSION_TMPDIR=/tmp/aviral/Rtmpfvg13H"                                                                                                                                                                                                                                                                               
> f(df0)
[1] ""
> f(FALSE)
[1] ""
> f(list(),list())
Error in f(list(), list()) : wrong type for argument
> f(l0,l0)
Error in f(l0, l0) : wrong type for argument
> f(c0,c0)
Error in f(c0, c0) : wrong type for argument
> f(df0,df0)
[1] "integer(0)"
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  Sys.getlocale  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.getlocale", pos = 'package:base')
> f()
[1] "C"
> f(NULL)
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(l0)
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(c0)
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(m0)
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(df0)
Error in f(df0) : invalid 'category' argument
> f(FALSE)
Error in f(FALSE) : invalid 'category' argument
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  Sys.getpid  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.getpid", pos = 'package:base')
> f()
[1] 20970
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  Sys.glob  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.glob", pos = 'package:base')
> f()
Error in path.expand(paths) : 
  argument "paths" is missing, with no default
Calls: f -> path.expand
> f(NULL)
Error in path.expand(paths) : invalid 'path' argument
Calls: f -> path.expand
> f(,NULL)
Error in path.expand(paths) : 
  argument "paths" is missing, with no default
Calls: f -> path.expand
> f(NULL,NULL)
Error in path.expand(paths) : invalid 'path' argument
Calls: f -> path.expand
> f(list())
Error in path.expand(paths) : invalid 'path' argument
Calls: f -> path.expand
> f(l0)
Error in path.expand(paths) : invalid 'path' argument
Calls: f -> path.expand
> f(c0)
character(0)
> f(m0)
Error in path.expand(paths) : invalid 'path' argument
Calls: f -> path.expand
> f(df0)
Error in path.expand(paths) : invalid 'path' argument
Calls: f -> path.expand
> f(FALSE)
Error in path.expand(paths) : invalid 'path' argument
Calls: f -> path.expand
> f(list(),list())
Error in path.expand(paths) : invalid 'path' argument
Calls: f -> path.expand
> f(l0,l0)
Error in path.expand(paths) : invalid 'path' argument
Calls: f -> path.expand
> f(c0,c0)
character(0)
> f(df0,df0)
Error in path.expand(paths) : invalid 'path' argument
Calls: f -> path.expand
> f(FALSE,FALSE)
Error in path.expand(paths) : invalid 'path' argument
Calls: f -> path.expand
> 
> ##  Sys.info  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.info", pos = 'package:base')
> f()
                                      sysname 
                                      "Linux" 
                                      release 
                           "4.4.0-36-generic" 
                                      version 
"#55-Ubuntu SMP Thu Aug 11 18:01:55 UTC 2016" 
                                     nodename 
                                     "lambda" 
                                      machine 
                                     "x86_64" 
                                        login 
                                    "unknown" 
                                         user 
                                     "aviral" 
                               effective_user 
                                     "aviral" 
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  Sys.localeconv  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.localeconv", pos = 'package:base')
> f()
    decimal_point     thousands_sep          grouping   int_curr_symbol 
              "."                ""                ""                "" 
  currency_symbol mon_decimal_point mon_thousands_sep      mon_grouping 
               ""                ""                ""                "" 
    positive_sign     negative_sign   int_frac_digits       frac_digits 
               ""                ""             "127"             "127" 
    p_cs_precedes    p_sep_by_space     n_cs_precedes    n_sep_by_space 
            "127"             "127"             "127"             "127" 
      p_sign_posn       n_sign_posn 
            "127"             "127" 
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  Sys.readlink  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.readlink", pos = 'package:base')
> f()
Error in f() : argument "paths" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'paths' argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'paths' argument
> f(l0)
Error in f(l0) : invalid 'paths' argument
> f(c0)
character(0)
> f(m0)
Error in f(m0) : invalid 'paths' argument
> f(df0)
Error in f(df0) : invalid 'paths' argument
> f(FALSE)
Error in f(FALSE) : invalid 'paths' argument
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  Sys.setFileTime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.setFileTime", pos = 'package:base')
> f()
Error in f() : argument "path" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'path' argument
> f(,NULL)
Error in f(, NULL) : argument "path" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'path' argument
> f(list())
Error in f(list()) : invalid 'path' argument
> f(l0)
Error in f(l0) : invalid 'path' argument
> f(c0)
Error in f(c0) : invalid 'path' argument
> f(m0)
Error in f(m0) : invalid 'path' argument
> f(df0)
Error in f(df0) : invalid 'path' argument
> f(FALSE)
Error in f(FALSE) : invalid 'path' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'path' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'path' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'path' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'path' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'path' argument
> 
> ##  Sys.setenv  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.setenv", pos = 'package:base')
> f()
Error in f() : all arguments must be named
> f(NULL)
Error in f(NULL) : all arguments must be named
> f(,NULL)
Error in f(, NULL) : all arguments must be named
> f(NULL,NULL)
Error in f(NULL, NULL) : all arguments must be named
> f(list())
Error in f(list()) : all arguments must be named
> f(l0)
Error in f(l0) : all arguments must be named
> f(c0)
Error in f(c0) : all arguments must be named
> f(m0)
Error in f(m0) : all arguments must be named
> f(df0)
Error in f(df0) : all arguments must be named
> f(FALSE)
Error in f(FALSE) : all arguments must be named
> f(list(),list())
Error in f(list(), list()) : all arguments must be named
> f(l0,l0)
Error in f(l0, l0) : all arguments must be named
> f(c0,c0)
Error in f(c0, c0) : all arguments must be named
> f(df0,df0)
Error in f(df0, df0) : all arguments must be named
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : all arguments must be named
> 
> ##  Sys.setlocale  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.setlocale", pos = 'package:base')
> f()
[1] "C"
> f(NULL)
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(,NULL)
Error in f(, NULL) : invalid 'locale' argument
> f(NULL,NULL)
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(list())
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(l0)
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(c0)
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(m0)
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(df0)
Error in f(df0) : invalid 'category' argument
> f(FALSE)
Error in f(FALSE) : invalid 'category' argument
> f(list(),list())
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (is.na(category)) stop("invalid 'category' argument") : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in f(df0, df0) : invalid 'category' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'category' argument
> 
> ##  Sys.sleep  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.sleep", pos = 'package:base')
> f()
Error in f() : argument "time" is missing, with no default
> f(NULL)
Error in Sys.sleep(time) : invalid 'time' value
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in Sys.sleep(time) : invalid 'time' value
Calls: f
> f(l0)
Error in Sys.sleep(time) : invalid 'time' value
Calls: f
> f(c0)
Error in Sys.sleep(time) : invalid 'time' value
Calls: f
> f(m0)
Error in Sys.sleep(time) : invalid 'time' value
Calls: f
> f(df0)
Error in Sys.sleep(time) : invalid 'time' value
Calls: f
> f(FALSE)
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  Sys.time  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.time", pos = 'package:base')
> f()
[1] "2016-09-04 18:08:00 EDT"
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  Sys.timezone  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.timezone", pos = 'package:base')
> f()
[1] "posixrules"
> f(NULL)
Error in !location : invalid argument type
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in if (!location || nzchar(tz)) return(Sys.getenv("TZ", unset = NA_character_)) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0)
Error in if (!location || nzchar(tz)) return(Sys.getenv("TZ", unset = NA_character_)) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0)
Error in if (!location || nzchar(tz)) return(Sys.getenv("TZ", unset = NA_character_)) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(m0)
Error in if (!location || nzchar(tz)) return(Sys.getenv("TZ", unset = NA_character_)) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left) : '!' not meaningful for factors
> f(FALSE)
[1] NA
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  Sys.umask  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.umask", pos = 'package:base')
> f()
[1] "2"
> f(NULL)
Error in if (is.na(mode)) NA_integer_ else as.octmode(mode) : 
  argument is of length zero
Calls: f
In addition: Warning message:
In is.na(mode) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in if (is.na(mode)) NA_integer_ else as.octmode(mode) : 
  argument is of length zero
Calls: f
> f(l0)
Error in if (is.na(mode)) NA_integer_ else as.octmode(mode) : 
  argument is of length zero
Calls: f
> f(c0)
Error in if (is.na(mode)) NA_integer_ else as.octmode(mode) : 
  argument is of length zero
Calls: f
> f(m0)
Error in if (is.na(mode)) NA_integer_ else as.octmode(mode) : 
  argument is of length zero
Calls: f
> f(df0)
Error in if (is.na(mode)) NA_integer_ else as.octmode(mode) : 
  argument is of length zero
Calls: f
> f(FALSE)
Error in as.octmode(mode) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  Sys.unsetenv  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.unsetenv", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
> f(FALSE)
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  Sys.which  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Sys.which", pos = 'package:base')
> f()
Error in character(length(names)) : 
  argument "names" is missing, with no default
Calls: f -> character
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
named character(0)
> f(l0)
named character(0)
> f(c0)
named character(0)
> f(m0)
named character(0)
> f(df0)
Error in if (is.na(names[i])) { : argument is of length zero
Calls: f
> f(FALSE)
FALSE 
   "" 
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  UseMethod  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("UseMethod", pos = 'package:base')
> f()
Error in f() : there must be a 'generic' argument
> f(NULL)
Error in f(NULL) : 'generic' argument must be a character string
> f(,NULL)
Error in f(, NULL) : there must be a 'generic' argument
> f(NULL,NULL)
Error in f(NULL, NULL) : 'generic' argument must be a character string
> f(list())
Error in f(list()) : 'generic' argument must be a character string
> f(l0)
Error in f(l0) : 'generic' argument must be a character string
> f(c0)
Error in f(c0) : 'generic' argument must be a character string
> f(m0)
Error in f(m0) : 'generic' argument must be a character string
> f(df0)
Error in f(df0) : 'generic' argument must be a character string
> f(FALSE)
Error in f(FALSE) : 'generic' argument must be a character string
> f(list(),list())
Error in f(list(), list()) : 
  'generic' argument must be a character string
> f(l0,l0)
Error in f(l0, l0) : 'generic' argument must be a character string
> f(c0,c0)
Error in f(c0, c0) : 'generic' argument must be a character string
> f(df0,df0)
Error in f(df0, df0) : 'generic' argument must be a character string
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'generic' argument must be a character string
> 
> ##  Vectorize  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Vectorize", pos = 'package:base')
> f()
Error in formals(FUN) : argument "FUN" is missing, with no default
Calls: f -> as.list -> formals
> f(NULL)
NULL
> f(,NULL)
Error in formals(FUN) : argument "FUN" is missing, with no default
Calls: f -> as.list -> formals
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
Error in get(fun, mode = "function", envir = parent.frame()) : 
  invalid first argument
Calls: f -> as.list -> formals -> get
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
Error in get(fun, mode = "function", envir = parent.frame()) : 
  invalid first argument
Calls: f -> as.list -> formals -> get
> f(df0,df0)
Error in f(df0, df0) : 
  must specify names of formal arguments for 'vectorize'
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  must specify names of formal arguments for 'vectorize'
> 
> ##  [  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : invalid subscript type 'list'
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in `[.default`(df0, df0) : invalid subscript type 'list'
Calls: f -> [.data.frame -> NextMethod
> f(FALSE,FALSE)
logical(0)
> 
> ##  [.AsIs  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.AsIs", pos = 'package:base')
> f()
Error in NextMethod("[") : object not specified
Calls: f -> I -> structure -> unique -> NextMethod
> f(NULL)
Error in NextMethod("[") : object not specified
Calls: f -> I -> structure -> unique -> NextMethod
> f(,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> I -> structure -> unique -> NextMethod
> f(NULL,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> I -> structure -> unique -> NextMethod
> f(list())
Error in NextMethod("[") : object not specified
Calls: f -> I -> structure -> unique -> NextMethod
> f(l0)
Error in NextMethod("[") : object not specified
Calls: f -> I -> structure -> unique -> NextMethod
> f(c0)
Error in NextMethod("[") : object not specified
Calls: f -> I -> structure -> unique -> NextMethod
> f(m0)
Error in NextMethod("[") : object not specified
Calls: f -> I -> structure -> unique -> NextMethod
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> I -> structure -> unique -> NextMethod
> f(list(),list())
Error in NextMethod("[") : object not specified
Calls: f -> I -> structure -> unique -> NextMethod
> f(l0,l0)
Error in NextMethod("[") : object not specified
Calls: f -> I -> structure -> unique -> NextMethod
> f(c0,c0)
Error in NextMethod("[") : object not specified
Calls: f -> I -> structure -> unique -> NextMethod
> f(df0,df0)
Error in NextMethod("[") : wrong value for .Method
Calls: f ... structure -> unique -> NextMethod -> [.data.frame -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> I -> structure -> unique -> NextMethod
> 
> ##  [.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.Date", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in NextMethod("[") : wrong value for .Method
Calls: f -> NextMethod -> [.data.frame -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> 
> ##  [.Dlist  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.Dlist", pos = 'package:base')
> f()
Error in structure(NextMethod("["), class = class(x)) : 
  argument "x" is missing, with no default
Calls: f -> structure
> f(NULL)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(,NULL)
Error in structure(NextMethod("["), class = class(x)) : 
  argument "x" is missing, with no default
Calls: f -> structure
> f(NULL,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(list())
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(l0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(c0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(m0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(list(),list())
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(l0,l0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(c0,c0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(df0,df0)
Error in NextMethod("[") : wrong value for .Method
Calls: f ... structure -> NextMethod -> [.data.frame -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> 
> ##  [.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.POSIXct", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in NextMethod("[") : wrong value for .Method
Calls: f -> NextMethod -> [.data.frame -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> 
> ##  [.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.POSIXlt", pos = 'package:base')
> f()
Error in lapply(X = x, FUN = "[", ..., drop = drop) : 
  argument "x" is missing, with no default
Calls: f -> lapply
> f(NULL)
list()
> f(,NULL)
Error in lapply(X = x, FUN = "[", ..., drop = drop) : 
  argument "x" is missing, with no default
Calls: f -> lapply
> f(NULL,NULL)
list()
> f(list())
list()
> f(l0)
list()
> f(c0)
list()
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[[1]]
[1] FALSE

> f(list(),list())
list()
> f(l0,l0)
list()
> f(c0,c0)
list()
> f(df0,df0)
Error in `[.default`(X[[i]], ...) : invalid subscript type 'list'
Calls: f -> lapply -> FUN -> [.factor -> NextMethod
> f(FALSE,FALSE)
[[1]]
logical(0)

> 
> ##  [.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in NextMethod("[") : wrong value for .Method
Calls: f -> NextMethod -> [.data.frame -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> 
> ##  [.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.difftime", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in NextMethod("[") : wrong value for .Method
Calls: f -> NextMethod -> [.data.frame -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> 
> ##  [.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.factor", pos = 'package:base')
> f()
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(NULL,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in NextMethod("[") : wrong value for .Method
Calls: f -> NextMethod -> [.data.frame -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> 
> ##  [.hexmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.hexmode", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in NextMethod("[") : wrong value for .Method
Calls: f -> NextMethod -> [.data.frame -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> 
> ##  [.listof  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.listof", pos = 'package:base')
> f()
Error in structure(NextMethod("["), class = class(x)) : 
  argument "x" is missing, with no default
Calls: f -> structure
> f(NULL)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(,NULL)
Error in structure(NextMethod("["), class = class(x)) : 
  argument "x" is missing, with no default
Calls: f -> structure
> f(NULL,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(list())
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(l0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(c0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(m0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(list(),list())
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(l0,l0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(c0,c0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(df0,df0)
Error in NextMethod("[") : wrong value for .Method
Calls: f ... structure -> NextMethod -> [.data.frame -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> 
> ##  [.noquote  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.noquote", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in unclass(x)[...] : invalid subscript type 'list'
Calls: f
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in unclass(x)[...] : invalid subscript type 'list'
Calls: f
> f(FALSE,FALSE)
logical(0)
> 
> ##  [.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.numeric_version", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : attempt to set an attribute on NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : attempt to set an attribute on NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in unclass(x)[i] : invalid subscript type 'list'
Calls: f
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in unclass(x)[i] : invalid subscript type 'list'
Calls: f
> f(FALSE,FALSE)
logical(0)
> 
> ##  [.octmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.octmode", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in NextMethod("[") : wrong value for .Method
Calls: f -> NextMethod -> [.data.frame -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> NextMethod
> 
> ##  [.simple.list  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.simple.list", pos = 'package:base')
> f()
Error in structure(NextMethod("["), class = class(x)) : 
  argument "x" is missing, with no default
Calls: f -> structure
> f(NULL)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(,NULL)
Error in structure(NextMethod("["), class = class(x)) : 
  argument "x" is missing, with no default
Calls: f -> structure
> f(NULL,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(list())
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(l0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(c0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(m0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(list(),list())
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(l0,l0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(c0,c0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(df0,df0)
Error in NextMethod("[") : wrong value for .Method
Calls: f ... structure -> NextMethod -> [.data.frame -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> 
> ##  [.table  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.table", pos = 'package:base')
> f()
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(NULL,NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(df0)
Error in NextMethod() : generic function not specified
Calls: f -> NextMethod
> f(FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in NextMethod() : generic function not specified
Calls: f -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> 
> ##  [.warnings  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[.warnings", pos = 'package:base')
> f()
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(NULL)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(NULL,NULL)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(list())
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(l0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(c0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(m0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(df0)
Warning message:
c0
> f(FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(list(),list())
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(l0,l0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(c0,c0)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> f(df0,df0)
Error in NextMethod("[") : wrong value for .Method
Calls: f ... structure -> NextMethod -> [.data.frame -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod("[") : object not specified
Calls: f -> structure -> NextMethod
> 
> ##  [<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[<-", pos = 'package:base')
> f()
Error: SubAssignArgs: invalid number of arguments
> f(NULL)
Error: SubAssignArgs: invalid number of arguments
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
Error: SubAssignArgs: invalid number of arguments
> f(l0)
Error: SubAssignArgs: invalid number of arguments
> f(c0)
Error: SubAssignArgs: invalid number of arguments
> f(m0)
Error: SubAssignArgs: invalid number of arguments
> f(df0)
Error in `[<-.data.frame`(df0) : need 0, 1, or 2 subscripts
Calls: f -> [<-.data.frame
> f(FALSE)
Error: SubAssignArgs: invalid number of arguments
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in `[<-.data.frame`(df0, df0) : need 0, 1, or 2 subscripts
Calls: f -> [<-.data.frame
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  [<-.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[<-.Date", pos = 'package:base')
> f()
Error in f() : argument "value" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "value" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "value" is missing, with no default
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "value" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "value" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "value" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "value" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "value" is missing, with no default
> 
> ##  [<-.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[<-.POSIXct", pos = 'package:base')
> f()
Error in f() : argument "value" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "value" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "value" is missing, with no default
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "value" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "value" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "value" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "value" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "value" is missing, with no default
> 
> ##  [<-.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[<-.POSIXlt", pos = 'package:base')
> f()
Error in f() : argument "value" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "value" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "value" is missing, with no default
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "value" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "value" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "value" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "value" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "value" is missing, with no default
> 
> ##  [<-.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[<-.data.frame", pos = 'package:base')
> f()
Error in f() : need 0, 1, or 2 subscripts
> f(NULL)
Error in f(NULL) : need 0, 1, or 2 subscripts
> f(,NULL)
Error in f(, NULL) : need 0, 1, or 2 subscripts
> f(NULL,NULL)
Error in f(NULL, NULL) : need 0, 1, or 2 subscripts
> f(list())
Error in f(list()) : need 0, 1, or 2 subscripts
> f(l0)
Error in f(l0) : need 0, 1, or 2 subscripts
> f(c0)
Error in f(c0) : need 0, 1, or 2 subscripts
> f(m0)
Error in f(m0) : need 0, 1, or 2 subscripts
> f(df0)
Error in f(df0) : need 0, 1, or 2 subscripts
> f(FALSE)
Error in f(FALSE) : need 0, 1, or 2 subscripts
> f(list(),list())
Error in f(list(), list()) : need 0, 1, or 2 subscripts
> f(l0,l0)
Error in f(l0, l0) : need 0, 1, or 2 subscripts
> f(c0,c0)
Error in f(c0, c0) : need 0, 1, or 2 subscripts
> f(df0,df0)
Error in f(df0, df0) : need 0, 1, or 2 subscripts
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : need 0, 1, or 2 subscripts
> 
> ##  [<-.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[<-.factor", pos = 'package:base')
> f()
Error in levels(x) : argument "x" is missing, with no default
Calls: f -> levels
> f(NULL)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(,NULL)
Error in levels(x) : argument "x" is missing, with no default
Calls: f -> levels
> f(NULL,NULL)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(list())
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(l0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(c0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(m0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(df0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(FALSE)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(list(),list())
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(l0,l0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(c0,c0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(df0,df0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(FALSE,FALSE)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> 
> ##  [<-.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[<-.numeric_version", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in is.numeric_version(x) : 
  argument "value" is missing, with no default
Calls: f -> as.numeric_version -> is.numeric_version
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in is.numeric_version(x) : 
  argument "value" is missing, with no default
Calls: f -> as.numeric_version -> is.numeric_version
> f(list())
Error in is.numeric_version(x) : 
  argument "value" is missing, with no default
Calls: f -> as.numeric_version -> is.numeric_version
> f(l0)
Error in is.numeric_version(x) : 
  argument "value" is missing, with no default
Calls: f -> as.numeric_version -> is.numeric_version
> f(c0)
Error in is.numeric_version(x) : 
  argument "value" is missing, with no default
Calls: f -> as.numeric_version -> is.numeric_version
> f(m0)
Error in is.numeric_version(x) : 
  argument "value" is missing, with no default
Calls: f -> as.numeric_version -> is.numeric_version
> f(df0)
Error in is.numeric_version(x) : 
  argument "value" is missing, with no default
Calls: f -> as.numeric_version -> is.numeric_version
> f(FALSE)
Error in is.numeric_version(x) : 
  argument "value" is missing, with no default
Calls: f -> as.numeric_version -> is.numeric_version
> f(list(),list())
Error in is.numeric_version(x) : 
  argument "value" is missing, with no default
Calls: f -> as.numeric_version -> is.numeric_version
> f(l0,l0)
Error in is.numeric_version(x) : 
  argument "value" is missing, with no default
Calls: f -> as.numeric_version -> is.numeric_version
> f(c0,c0)
Error in is.numeric_version(x) : 
  argument "value" is missing, with no default
Calls: f -> as.numeric_version -> is.numeric_version
> f(df0,df0)
Error in is.numeric_version(x) : 
  argument "value" is missing, with no default
Calls: f -> as.numeric_version -> is.numeric_version
> f(FALSE,FALSE)
Error in is.numeric_version(x) : 
  argument "value" is missing, with no default
Calls: f -> as.numeric_version -> is.numeric_version
> 
> ##  [[  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[[", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : no index specified
> f(l0)
Error in f(l0) : no index specified
> f(c0)
Error in f(c0) : no index specified
> f(m0)
Error in f(m0) : no index specified
> f(df0)
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "i" is missing, with no default
Calls: f -> [[.data.frame -> <Anonymous>
> f(FALSE)
Error in f(FALSE) : no index specified
> f(list(),list())
Error in f(list(), list()) : 
  attempt to select less than one element in get1index
> f(l0,l0)
Error in f(l0, l0) : attempt to select less than one element in get1index
> f(c0,c0)
Error in f(c0, c0) : attempt to select less than one element in get1index
> f(df0,df0)
Error in .subset2(x, i, exact = exact) : invalid subscript type 'list'
Calls: f -> [[.data.frame -> <Anonymous>
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  attempt to select less than one element in integerOneIndex
> 
> ##  [[.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[[.Date", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(df0)
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "i" is missing, with no default
Calls: f -> NextMethod -> [[.data.frame -> <Anonymous>
> f(FALSE)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in .subset2(x, i, exact = exact) : invalid subscript type 'list'
Calls: f -> NextMethod -> [[.data.frame -> <Anonymous>
> f(FALSE,FALSE)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> 
> ##  [[.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[[.POSIXct", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(df0)
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "i" is missing, with no default
Calls: f -> NextMethod -> [[.data.frame -> <Anonymous>
> f(FALSE)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in .subset2(x, i, exact = exact) : invalid subscript type 'list'
Calls: f -> NextMethod -> [[.data.frame -> <Anonymous>
> f(FALSE,FALSE)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> 
> ##  [[.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[[.data.frame", pos = 'package:base')
> f()
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "i" is missing, with no default
Calls: f -> <Anonymous>
> f(NULL)
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "i" is missing, with no default
Calls: f -> <Anonymous>
> f(,NULL)
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "x" is missing, with no default
Calls: f -> <Anonymous>
> f(NULL,NULL)
NULL
> f(list())
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "i" is missing, with no default
Calls: f -> <Anonymous>
> f(l0)
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "i" is missing, with no default
Calls: f -> <Anonymous>
> f(c0)
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "i" is missing, with no default
Calls: f -> <Anonymous>
> f(m0)
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "i" is missing, with no default
Calls: f -> <Anonymous>
> f(df0)
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "i" is missing, with no default
Calls: f -> <Anonymous>
> f(FALSE)
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "i" is missing, with no default
Calls: f -> <Anonymous>
> f(list(),list())
Error in .subset2(x, i, exact = exact) : 
  attempt to select less than one element in get1index
Calls: f -> <Anonymous>
> f(l0,l0)
Error in .subset2(x, i, exact = exact) : 
  attempt to select less than one element in get1index
Calls: f -> <Anonymous>
> f(c0,c0)
Error in .subset2(x, i, exact = exact) : 
  attempt to select less than one element in get1index
Calls: f -> <Anonymous>
> f(df0,df0)
Error in .subset2(x, i, exact = exact) : invalid subscript type 'list'
Calls: f -> <Anonymous>
> f(FALSE,FALSE)
Error in .subset2(x, i, exact = exact) : 
  attempt to select less than one element in integerOneIndex
Calls: f -> <Anonymous>
> 
> ##  [[.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[[.factor", pos = 'package:base')
> f()
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(NULL)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(NULL,NULL)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(df0)
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "i" is missing, with no default
Calls: f -> NextMethod -> [[.data.frame -> <Anonymous>
> f(FALSE)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in .subset2(x, i, exact = exact) : invalid subscript type 'list'
Calls: f -> NextMethod -> [[.data.frame -> <Anonymous>
> f(FALSE,FALSE)
Error in NextMethod("[[") : object not specified
Calls: f -> NextMethod
> 
> ##  [[.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[[.numeric_version", pos = 'package:base')
> f()
Error in structure(list(unclass(x)[[..., exact = exact]]), class = oldClass(x)) : 
  argument "x" is missing, with no default
Calls: f -> structure
> f(NULL)
[[1]]
NULL

> f(,NULL)
Error in structure(list(unclass(x)[[..., exact = exact]]), class = oldClass(x)) : 
  argument "x" is missing, with no default
Calls: f -> structure
> f(NULL,NULL)
[[1]]
NULL

> f(list())
Error in unclass(x)[[..., exact = exact]] : no index specified
Calls: f -> structure
> f(l0)
Error in unclass(x)[[..., exact = exact]] : no index specified
Calls: f -> structure
> f(c0)
Error in unclass(x)[[..., exact = exact]] : no index specified
Calls: f -> structure
> f(m0)
Error in unclass(x)[[..., exact = exact]] : no index specified
Calls: f -> structure
> f(df0)
Error in unclass(x)[[..., exact = exact]] : no index specified
Calls: f -> structure
> f(FALSE)
Error in unclass(x)[[..., exact = exact]] : no index specified
Calls: f -> structure
> f(list(),list())
Error in unclass(x)[[..., exact = exact]] : 
  attempt to select less than one element in get1index
Calls: f -> structure
> f(l0,l0)
Error in unclass(x)[[..., exact = exact]] : 
  attempt to select less than one element in get1index
Calls: f -> structure
> f(c0,c0)
Error in unclass(x)[[..., exact = exact]] : 
  attempt to select less than one element in get1index
Calls: f -> structure
> f(df0,df0)
Error in unclass(x)[[..., exact = exact]] : invalid subscript type 'list'
Calls: f -> structure
> f(FALSE,FALSE)
Error in unclass(x)[[..., exact = exact]] : 
  attempt to select less than one element in integerOneIndex
Calls: f -> structure
> 
> ##  [[<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[[<-", pos = 'package:base')
> f()
Error: SubAssignArgs: invalid number of arguments
> f(NULL)
Error: SubAssignArgs: invalid number of arguments
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
Error: SubAssignArgs: invalid number of arguments
> f(l0)
Error: SubAssignArgs: invalid number of arguments
> f(c0)
Error: SubAssignArgs: invalid number of arguments
> f(m0)
Error: SubAssignArgs: invalid number of arguments
> f(df0)
Error in `[[<-.data.frame`(df0) : 
  argument "value" is missing, with no default
Calls: f -> [[<-.data.frame
> f(FALSE)
Error: SubAssignArgs: invalid number of arguments
> f(list(),list())
Error: [[ ]] with missing subscript
> f(l0,l0)
Error: replacement has length zero
> f(c0,c0)
Error: replacement has length zero
> f(df0,df0)
Error in `[[<-.data.frame`(df0, df0) : 
  argument "value" is missing, with no default
Calls: f -> [[<-.data.frame
> f(FALSE,FALSE)
Error: [[ ]] with missing subscript
> 
> ##  [[<-.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[[<-.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "value" is missing, with no default
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "value" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "value" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "value" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "value" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "value" is missing, with no default
> 
> ##  [[<-.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[[<-.factor", pos = 'package:base')
> f()
Error in levels(x) : argument "x" is missing, with no default
Calls: f -> levels
> f(NULL)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(,NULL)
Error in levels(x) : argument "x" is missing, with no default
Calls: f -> levels
> f(NULL,NULL)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(list())
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(l0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(c0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(m0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(df0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(FALSE)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(list(),list())
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(l0,l0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(c0,c0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(df0,df0)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> f(FALSE,FALSE)
Error in is.factor(value) : argument "value" is missing, with no default
Calls: f -> is.factor
> 
> ##  [[<-.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("[[<-.numeric_version", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'nthcdr' needs a list to CDR down
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "value" is missing, with no default
> f(list())
Error in f(list()) : 'nthcdr' needs a list to CDR down
> f(l0)
Error in f(l0) : 'nthcdr' needs a list to CDR down
> f(c0)
Error in f(c0) : 'nthcdr' needs a list to CDR down
> f(m0)
Error in f(m0) : 'nthcdr' needs a list to CDR down
> f(df0)
Error in f(df0) : 'nthcdr' needs a list to CDR down
> f(FALSE)
Error in f(FALSE) : 'nthcdr' needs a list to CDR down
> f(list(),list())
Error in f(list(), list()) : argument "value" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "value" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "value" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "value" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "value" is missing, with no default
> 
> ##  ^  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("^", pos = 'package:base')
> f()
Error in f() : operator needs one or two arguments
> f(NULL)
Error in f(NULL) : invalid argument to unary operator
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
numeric(0)
> f(list())
Error in f(list()) : invalid argument to unary operator
> f(l0)
Error in f(l0) : invalid unary operator
> f(c0)
Error in f(c0) : invalid argument to unary operator
> f(m0)
Error in f(m0) : invalid unary operator
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left) : '^' not meaningful for factors
> f(FALSE)
Error in f(FALSE) : invalid unary operator
> f(list(),list())
Error in f(list(), list()) : non-numeric argument to binary operator
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in f(c0, c0) : non-numeric argument to binary operator
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '^' not meaningful for factors
> f(FALSE,FALSE)
[1] 1
> 
> ##  abbreviate  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("abbreviate", pos = 'package:base')
> f()
Error in sub(" +$", "", as.character(names.arg)) : 
  argument "names.arg" is missing, with no default
Calls: f -> sub -> sub
> f(NULL)
named character(0)
> f(,NULL)
Error in if (minlength <= 0L) { : argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (minlength <= 0L) { : argument is of length zero
Calls: f
> f(list())
named character(0)
> f(l0)
named character(0)
> f(c0)
named character(0)
> f(m0)
named character(0)
> f(df0)
integer(0) 
    "i(0)" 
> f(FALSE)
 FALSE 
"FALS" 
> f(list(),list())
Error in if (minlength <= 0L) { : argument is of length zero
Calls: f
> f(l0,l0)
Error in if (minlength <= 0L) { : argument is of length zero
Calls: f
> f(c0,c0)
Error in if (minlength <= 0L) { : argument is of length zero
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<=' not meaningful for factors
> f(FALSE,FALSE)
FALSE 
   "" 
> 
> ##  abs  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("abs", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'abs' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'abs' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
integer(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to 'abs' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'abs' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'abs' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'abs' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'abs' which requires 1
> 
> ##  acos  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("acos", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'acos' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'acos' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 1.570796
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'acos' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'acos' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'acos' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'acos' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'acos' which requires 1
> 
> ##  acosh  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("acosh", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'acosh' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'acosh' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] NaN
Warning message:
In f(FALSE) : NaNs produced
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'acosh' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'acosh' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'acosh' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'acosh' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'acosh' which requires 1
> 
> ##  addNA  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("addNA", pos = 'package:base')
> f()
Error in is.factor(x) : argument "x" is missing, with no default
Calls: f -> is.factor
> f(NULL)
factor(0)
Levels: <NA>
> f(,NULL)
Error in is.factor(x) : argument "x" is missing, with no default
Calls: f -> is.factor
> f(NULL,NULL)
Error in ifany & !anyNA(x) : 
  operations are possible only for numeric, logical or complex types
Calls: f
> f(list())
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(l0)
factor(0)
Levels: <NA>
> f(c0)
factor(0)
Levels: <NA>
> f(m0)
factor(0)
Levels: <NA>
> f(df0)
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(FALSE)
[1] FALSE
Levels: FALSE <NA>
> f(list(),list())
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(l0,l0)
Error in if (ifany & !anyNA(x)) return(x) : argument is of length zero
Calls: f
> f(c0,c0)
Error in ifany & !anyNA(x) : 
  operations are possible only for numeric, logical or complex types
Calls: f
> f(df0,df0)
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(FALSE,FALSE)
[1] FALSE
Levels: FALSE <NA>
> 
> ##  addTaskCallback  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("addTaskCallback", pos = 'package:base')
> f()
Error in f() : argument "f" is missing, with no default
> f(NULL)
Error in f(NULL) : handler must be a function
> f(,NULL)
Error in f(, NULL) : argument "f" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : handler must be a function
> f(list())
Error in f(list()) : handler must be a function
> f(l0)
Error in f(l0) : handler must be a function
> f(c0)
Error in f(c0) : handler must be a function
> f(m0)
Error in f(m0) : handler must be a function
> f(df0)
Error in f(df0) : handler must be a function
> f(FALSE)
Error in f(FALSE) : handler must be a function
> f(list(),list())
Error in f(list(), list()) : handler must be a function
> f(l0,l0)
Error in f(l0, l0) : handler must be a function
> f(c0,c0)
Error in f(c0, c0) : handler must be a function
> f(df0,df0)
Error in f(df0, df0) : handler must be a function
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : handler must be a function
> 
> ##  agrep  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("agrep", pos = 'package:base')
> f()
Error in f() : argument "pattern" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "x" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "pattern" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'pattern' argument
> f(list())
Error in f(list()) : argument "x" is missing, with no default
> f(l0)
Error in f(l0) : argument "x" is missing, with no default
> f(c0)
Error in f(c0) : argument "x" is missing, with no default
> f(m0)
Error in f(m0) : argument "x" is missing, with no default
> f(df0)
Error in f(df0) : argument "x" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "x" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'pattern' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'pattern' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'pattern' argument
> f(df0,df0)
[1] 1
> f(FALSE,FALSE)
[1] 1
> 
> ##  agrepl  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("agrepl", pos = 'package:base')
> f()
Error in f() : argument "pattern" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "x" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "pattern" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'pattern' argument
> f(list())
Error in f(list()) : argument "x" is missing, with no default
> f(l0)
Error in f(l0) : argument "x" is missing, with no default
> f(c0)
Error in f(c0) : argument "x" is missing, with no default
> f(m0)
Error in f(m0) : argument "x" is missing, with no default
> f(df0)
Error in f(df0) : argument "x" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "x" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'pattern' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'pattern' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'pattern' argument
> f(df0,df0)
[1] TRUE
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  alist  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("alist", pos = 'package:base')
> f()
list()
> f(NULL)
[[1]]
NULL

> f(,NULL)
[[1]]


[[2]]
NULL

> f(NULL,NULL)
[[1]]
NULL

[[2]]
NULL

> f(list())
[[1]]
list()

> f(l0)
[[1]]
l0

> f(c0)
[[1]]
c0

> f(m0)
[[1]]
m0

> f(df0)
[[1]]
df0

> f(FALSE)
[[1]]
[1] FALSE

> f(list(),list())
[[1]]
list()

[[2]]
list()

> f(l0,l0)
[[1]]
l0

[[2]]
l0

> f(c0,c0)
[[1]]
c0

[[2]]
c0

> f(df0,df0)
[[1]]
df0

[[2]]
df0

> f(FALSE,FALSE)
[[1]]
[1] FALSE

[[2]]
[1] FALSE

> 
> ##  all  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all", pos = 'package:base')
> f()
[1] TRUE
> f(NULL)
[1] TRUE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
[1] TRUE
> f(list())
[1] TRUE
> f(l0)
[1] TRUE
> f(c0)
[1] TRUE
> f(m0)
[1] TRUE
> f(df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE)
[1] FALSE
> f(list(),list())
[1] TRUE
> f(l0,l0)
[1] TRUE
> f(c0,c0)
[1] TRUE
> f(df0,df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  all.equal  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.equal", pos = 'package:base')
> f()
Error in all.equal.default() : 
  argument "target" is missing, with no default
Calls: f -> all.equal.default
> f(NULL)
Error in all.equal.default(NULL) : 
  argument "current" is missing, with no default
Calls: f -> all.equal.default
> f(,NULL)
Error in all.equal.default(, NULL) : 
  argument "target" is missing, with no default
Calls: f -> all.equal.default
> f(NULL,NULL)
[1] TRUE
> f(list())
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> all.equal.list -> attr.all.equal -> mode
> f(l0)
Error in all.equal.default(l0) : 
  argument "current" is missing, with no default
Calls: f -> all.equal.default
> f(c0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> all.equal.character -> attr.all.equal -> mode
> f(m0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> all.equal.numeric -> attr.all.equal -> mode
> f(df0)
Error in all.equal.default(df0) : 
  argument "current" is missing, with no default
Calls: f -> all.equal.default
> f(FALSE)
Error in all.equal.default(FALSE) : 
  argument "current" is missing, with no default
Calls: f -> all.equal.default
> f(list(),list())
[1] TRUE
> f(l0,l0)
[1] TRUE
> f(c0,c0)
[1] TRUE
> f(df0,df0)
[1] TRUE
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  all.equal.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.equal.POSIXt", pos = 'package:base')
> f()
Error in as.POSIXct(target) : 
  argument "target" is missing, with no default
Calls: f -> as.POSIXct
> f(NULL)
Error in as.POSIXct.default(target) : 
  do not know how to convert 'target' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct(target) : 
  argument "target" is missing, with no default
Calls: f -> as.POSIXct
> f(NULL,NULL)
Error in as.POSIXct.default(target) : 
  do not know how to convert 'target' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(target) : 
  do not know how to convert 'target' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(l0)
Error in as.POSIXct(current) : 
  argument "current" is missing, with no default
Calls: f -> as.POSIXct
> f(c0)
Error in as.POSIXct(current) : 
  argument "current" is missing, with no default
Calls: f -> as.POSIXct
> f(m0)
Error in as.POSIXct.numeric(target) : 'origin' must be supplied
Calls: f -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(target) : 
  do not know how to convert 'target' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(target) : 
  do not know how to convert 'target' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(target) : 
  do not know how to convert 'target' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(l0,l0)
[1] TRUE
> f(c0,c0)
[1] TRUE
> f(df0,df0)
Error in as.POSIXct.default(target) : 
  do not know how to convert 'target' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(target) : 
  do not know how to convert 'target' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> 
> ##  all.equal.character  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.equal.character", pos = 'package:base')
> f()
Error in mode(target) : argument "target" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(NULL)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(,NULL)
Error in mode(target) : argument "target" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(NULL,NULL)
[1] TRUE
Warning messages:
1: In is.na(target) :
  is.na() applied to non-(list or vector) of type 'NULL'
2: In is.na(current) :
  is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(l0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(c0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(m0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(df0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(FALSE)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(list(),list())
[1] TRUE
> f(l0,l0)
[1] TRUE
> f(c0,c0)
[1] TRUE
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  all.equal.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.equal.default", pos = 'package:base')
> f()
Error in f() : argument "target" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "current" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "target" is missing, with no default
> f(NULL,NULL)
[1] TRUE
> f(list())
Error in f(list()) : argument "current" is missing, with no default
> f(l0)
Error in f(l0) : argument "current" is missing, with no default
> f(c0)
Error in f(c0) : argument "current" is missing, with no default
> f(m0)
Error in f(m0) : argument "current" is missing, with no default
> f(df0)
Error in f(df0) : argument "current" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "current" is missing, with no default
> f(list(),list())
[1] TRUE
> f(l0,l0)
[1] TRUE
> f(c0,c0)
[1] TRUE
> f(df0,df0)
[1] TRUE
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  all.equal.envRefClass  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.equal.envRefClass", pos = 'package:base')
> f()
Error in methods::is(target, "envRefClass") : 
  argument "target" is missing, with no default
Calls: f -> <Anonymous>
> f(NULL)
[1] "'target' is not an envRefClass"
> f(,NULL)
Error in methods::is(target, "envRefClass") : 
  argument "target" is missing, with no default
Calls: f -> <Anonymous>
> f(NULL,NULL)
[1] "'target' is not an envRefClass"
> f(list())
[1] "'target' is not an envRefClass"
> f(l0)
[1] "'target' is not an envRefClass"
> f(c0)
[1] "'target' is not an envRefClass"
> f(m0)
[1] "'target' is not an envRefClass"
> f(df0)
[1] "'target' is not an envRefClass"
> f(FALSE)
[1] "'target' is not an envRefClass"
> f(list(),list())
[1] "'target' is not an envRefClass"
> f(l0,l0)
[1] "'target' is not an envRefClass"
> f(c0,c0)
[1] "'target' is not an envRefClass"
> f(df0,df0)
[1] "'target' is not an envRefClass"
> f(FALSE,FALSE)
[1] "'target' is not an envRefClass"
> 
> ##  all.equal.environment  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.equal.environment", pos = 'package:base')
> f()
Error in f() : argument "target" is missing, with no default
> f(NULL)
[1] "'target' is not an environment"
> f(,NULL)
Error in f(, NULL) : argument "target" is missing, with no default
> f(NULL,NULL)
[1] "'target' is not an environment"
> f(list())
[1] "'target' is not an environment"
> f(l0)
[1] "'target' is not an environment"
> f(c0)
[1] "'target' is not an environment"
> f(m0)
[1] "'target' is not an environment"
> f(df0)
[1] "'target' is not an environment"
> f(FALSE)
[1] "'target' is not an environment"
> f(list(),list())
[1] "'target' is not an environment"
> f(l0,l0)
[1] "'target' is not an environment"
> f(c0,c0)
[1] "'target' is not an environment"
> f(df0,df0)
[1] "'target' is not an environment"
> f(FALSE,FALSE)
[1] "'target' is not an environment"
> 
> ##  all.equal.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.equal.factor", pos = 'package:base')
> f()
Error in f() : argument "target" is missing, with no default
> f(NULL)
[1] "'target' is not a factor"
> f(,NULL)
Error in f(, NULL) : argument "target" is missing, with no default
> f(NULL,NULL)
[1] "'target' is not a factor"
> f(list())
[1] "'target' is not a factor"
> f(l0)
[1] "'target' is not a factor"
> f(c0)
[1] "'target' is not a factor"
> f(m0)
[1] "'target' is not a factor"
> f(df0)
[1] "'target' is not a factor"
> f(FALSE)
[1] "'target' is not a factor"
> f(list(),list())
[1] "'target' is not a factor"
> f(l0,l0)
[1] "'target' is not a factor"
> f(c0,c0)
[1] "'target' is not a factor"
> f(df0,df0)
[1] "'target' is not a factor"
> f(FALSE,FALSE)
[1] "'target' is not a factor"
> 
> ##  all.equal.formula  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.equal.formula", pos = 'package:base')
> f()
Error in f() : argument "target" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "current" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "target" is missing, with no default
> f(NULL,NULL)
[1] TRUE
> f(list())
Error in f(list()) : argument "current" is missing, with no default
> f(l0)
Error in f(l0) : argument "current" is missing, with no default
> f(c0)
Error in f(c0) : argument "current" is missing, with no default
> f(m0)
Error in f(m0) : argument "current" is missing, with no default
> f(df0)
Error in f(df0) : argument "current" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "current" is missing, with no default
> f(list(),list())
[1] TRUE
> f(l0,l0)
[1] TRUE
> f(c0,c0)
[1] TRUE
> f(df0,df0)
[1] TRUE
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  all.equal.language  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.equal.language", pos = 'package:base')
> f()
Error in mode(target) : argument "target" is missing, with no default
Calls: f -> mode
> f(NULL)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(,NULL)
Error in mode(target) : argument "target" is missing, with no default
Calls: f -> mode
> f(NULL,NULL)
[1] TRUE
> f(list())
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(l0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(c0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(m0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(df0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(FALSE)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(list(),list())
[1] TRUE
> f(l0,l0)
[1] TRUE
> f(c0,c0)
[1] TRUE
> f(df0,df0)
[1] TRUE
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  all.equal.list  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.equal.list", pos = 'package:base')
> f()
Error in mode(target) : argument "target" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(NULL)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(,NULL)
Error in mode(target) : argument "target" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(NULL,NULL)
[1] "target is not list-like"
> f(list())
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(l0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(c0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(m0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(df0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(FALSE)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(list(),list())
[1] TRUE
> f(l0,l0)
[1] TRUE
> f(c0,c0)
[1] TRUE
> f(df0,df0)
[1] TRUE
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  all.equal.numeric  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.equal.numeric", pos = 'package:base')
> f()
Error in mode(target) : argument "target" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(NULL)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(,NULL)
Error in mode(target) : argument "target" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(NULL,NULL)
[1] TRUE
Warning messages:
1: In is.na(target) :
  is.na() applied to non-(list or vector) of type 'NULL'
2: In is.na(current) :
  is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(l0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(c0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(m0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(df0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(FALSE)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(list(),list())
[1] TRUE
> f(l0,l0)
[1] TRUE
> f(c0,c0)
[1] TRUE
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  all.equal.raw  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.equal.raw", pos = 'package:base')
> f()
Error in mode(target) : argument "target" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(NULL)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(,NULL)
Error in mode(target) : argument "target" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(NULL,NULL)
[1] TRUE
Warning messages:
1: In is.na(target) :
  is.na() applied to non-(list or vector) of type 'NULL'
2: In is.na(current) :
  is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(l0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(c0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(m0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(df0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(FALSE)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> attr.all.equal -> mode
> f(list(),list())
[1] TRUE
> f(l0,l0)
[1] TRUE
> f(c0,c0)
[1] TRUE
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  all.names  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.names", pos = 'package:base')
> f()
Error in f() : argument "expr" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument "expr" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
character(0)
> f(FALSE)
character(0)
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
character(0)
> f(FALSE,FALSE)
character(0)
> 
> ##  all.vars  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("all.vars", pos = 'package:base')
> f()
Error in f() : argument "expr" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument "expr" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
character(0)
> f(FALSE)
character(0)
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
character(0)
> f(FALSE,FALSE)
character(0)
> 
> ##  annotation  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("annotation", pos = 'package:base')
> f()
[1] ""
> f(NULL)
[1] "no annotation"
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] ""
> f(l0)
[1] ""
> f(c0)
[1] ""
> f(m0)
[1] ""
> f(df0)
[1] ""
> f(FALSE)
[1] "no annotation"
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  any  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("any", pos = 'package:base')
> f()
[1] FALSE
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
[1] FALSE
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE)
[1] FALSE
> f(list(),list())
[1] FALSE
> f(l0,l0)
[1] FALSE
> f(c0,c0)
[1] FALSE
> f(df0,df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  anyDuplicated  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("anyDuplicated", pos = 'package:base')
> f()
Error in anyDuplicated.default() : 
  argument "x" is missing, with no default
Calls: f -> anyDuplicated.default
> f(NULL)
[1] 0
> f(,NULL)
Error in anyDuplicated.default(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> anyDuplicated.default
> f(NULL,NULL)
[1] 0
> f(list())
[1] 0
> f(l0)
[1] 0
> f(c0)
[1] 0
> f(m0)
[1] 0
> f(df0)
[1] 0
> f(FALSE)
[1] 0
> f(list(),list())
[1] 0
> f(l0,l0)
[1] 0
> f(c0,c0)
[1] 0
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
[1] 0
> 
> ##  anyDuplicated.array  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("anyDuplicated.array", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : character(0)
> f(,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(NULL,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(list())
Error in f(list()) : character(0)
> f(l0)
Error in f(l0) : character(0)
> f(c0)
Error in f(c0) : character(0)
> f(m0)
[1] 0
> f(df0)
[1] 0
> f(FALSE)
Error in f(FALSE) : character(0)
> f(list(),list())
Error: argument 'incomparables != FALSE' is not used (yet)
> f(l0,l0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(c0,c0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : character(0)
> 
> ##  anyDuplicated.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("anyDuplicated.data.frame", pos = 'package:base')
> f()
Error in do.call("paste", c(x, sep = "\r")) : 
  argument "x" is missing, with no default
Calls: f -> anyDuplicated -> do.call
> f(NULL)
Error in do.call("paste", c(x, sep = "\r")) : 
  second argument must be a list
Calls: f -> anyDuplicated -> do.call
> f(,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(NULL,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(list())
[1] 0
> f(l0)
Error in do.call("paste", c(x, sep = "\r")) : 
  second argument must be a list
Calls: f -> anyDuplicated -> do.call
> f(c0)
Error in do.call("paste", c(x, sep = "\r")) : 
  second argument must be a list
Calls: f -> anyDuplicated -> do.call
> f(m0)
Error in do.call("paste", c(x, sep = "\r")) : 
  second argument must be a list
Calls: f -> anyDuplicated -> do.call
> f(df0)
[1] 0
> f(FALSE)
Error in do.call("paste", c(x, sep = "\r")) : 
  second argument must be a list
Calls: f -> anyDuplicated -> do.call
> f(list(),list())
Error: argument 'incomparables != FALSE' is not used (yet)
> f(l0,l0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(c0,c0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
Error in do.call("paste", c(x, sep = "\r")) : 
  second argument must be a list
Calls: f -> anyDuplicated -> do.call
> 
> ##  anyDuplicated.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("anyDuplicated.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] 0
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] 0
> f(list())
[1] 0
> f(l0)
[1] 0
> f(c0)
[1] 0
> f(m0)
[1] 0
> f(df0)
[1] 0
> f(FALSE)
[1] 0
> f(list(),list())
[1] 0
> f(l0,l0)
[1] 0
> f(c0,c0)
[1] 0
> f(df0,df0)
[1] 0
> f(FALSE,FALSE)
[1] 0
> 
> ##  anyDuplicated.matrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("anyDuplicated.matrix", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : character(0)
> f(,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(NULL,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(list())
Error in f(list()) : character(0)
> f(l0)
Error in f(l0) : character(0)
> f(c0)
Error in f(c0) : character(0)
> f(m0)
[1] 0
> f(df0)
[1] 0
> f(FALSE)
Error in f(FALSE) : character(0)
> f(list(),list())
Error: argument 'incomparables != FALSE' is not used (yet)
> f(l0,l0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(c0,c0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : character(0)
> 
> ##  anyNA  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("anyNA", pos = 'package:base')
> f()
Error in f() : anyNA takes 1 or 2 arguments
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
[1] FALSE
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
[1] FALSE
> f(l0,l0)
[1] FALSE
> f(c0,c0)
[1] FALSE
> f(df0,df0)
[1] FALSE
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  anyNA.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("anyNA.POSIXlt", pos = 'package:base')
> f()
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXct
> f(NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXct
> f(NULL,NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
Error in as.POSIXct.numeric(x) : 'origin' must be supplied
Calls: f -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(l0,l0)
[1] FALSE
> f(c0,c0)
[1] FALSE
> f(df0,df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> 
> ##  anyNA.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("anyNA.numeric_version", pos = 'package:base')
> f()
Error in is.numeric_version(x) : argument "x" is missing, with no default
Calls: f -> .encode_numeric_version -> is.numeric_version
> f(NULL)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(,NULL)
Error in is.numeric_version(x) : argument "x" is missing, with no default
Calls: f -> .encode_numeric_version -> is.numeric_version
> f(NULL,NULL)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(list())
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(l0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(c0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(m0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(df0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(FALSE)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(list(),list())
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(l0,l0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(c0,c0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(df0,df0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(FALSE,FALSE)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> 
> ##  aperm  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("aperm", pos = 'package:base')
> f()
Error in aperm.default() : argument "a" is missing, with no default
Calls: f -> aperm.default
> f(NULL)
Error in aperm.default(NULL) : invalid first argument, must be an array
Calls: f -> aperm.default
> f(,NULL)
Error in aperm.default(, NULL) : argument "a" is missing, with no default
Calls: f -> aperm.default
> f(NULL,NULL)
Error in aperm.default(NULL, NULL) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(list())
Error in aperm.default(list()) : invalid first argument, must be an array
Calls: f -> aperm.default
> f(l0)
Error in aperm.default(l0) : invalid first argument, must be an array
Calls: f -> aperm.default
> f(c0)
Error in aperm.default(c0) : invalid first argument, must be an array
Calls: f -> aperm.default
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in aperm.default(df0) : invalid first argument, must be an array
Calls: f -> aperm.default
> f(FALSE)
Error in aperm.default(FALSE) : invalid first argument, must be an array
Calls: f -> aperm.default
> f(list(),list())
Error in aperm.default(list(), list()) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(l0,l0)
Error in aperm.default(l0, l0) : invalid first argument, must be an array
Calls: f -> aperm.default
> f(c0,c0)
Error in aperm.default(c0, c0) : invalid first argument, must be an array
Calls: f -> aperm.default
> f(df0,df0)
Error in aperm.default(df0, df0) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(FALSE,FALSE)
Error in aperm.default(FALSE, FALSE) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> 
> ##  aperm.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("aperm.default", pos = 'package:base')
> f()
Error in f() : argument "a" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid first argument, must be an array
> f(,NULL)
Error in f(, NULL) : argument "a" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid first argument, must be an array
> f(list())
Error in f(list()) : invalid first argument, must be an array
> f(l0)
Error in f(l0) : invalid first argument, must be an array
> f(c0)
Error in f(c0) : invalid first argument, must be an array
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : invalid first argument, must be an array
> f(FALSE)
Error in f(FALSE) : invalid first argument, must be an array
> f(list(),list())
Error in f(list(), list()) : invalid first argument, must be an array
> f(l0,l0)
Error in f(l0, l0) : invalid first argument, must be an array
> f(c0,c0)
Error in f(c0, c0) : invalid first argument, must be an array
> f(df0,df0)
Error in f(df0, df0) : invalid first argument, must be an array
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid first argument, must be an array
> 
> ##  aperm.table  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("aperm.table", pos = 'package:base')
> f()
Error in aperm.default(a, perm, resize = resize) : 
  argument "a" is missing, with no default
Calls: f -> aperm.default
> f(NULL)
Error in aperm.default(a, perm, resize = resize) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(,NULL)
Error in aperm.default(a, perm, resize = resize) : 
  argument "a" is missing, with no default
Calls: f -> aperm.default
> f(NULL,NULL)
Error in aperm.default(a, perm, resize = resize) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(list())
Error in aperm.default(a, perm, resize = resize) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(l0)
Error in aperm.default(a, perm, resize = resize) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(c0)
Error in aperm.default(a, perm, resize = resize) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in aperm.default(a, perm, resize = resize) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(FALSE)
Error in aperm.default(a, perm, resize = resize) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(list(),list())
Error in aperm.default(a, perm, resize = resize) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(l0,l0)
Error in aperm.default(a, perm, resize = resize) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(c0,c0)
Error in aperm.default(a, perm, resize = resize) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(df0,df0)
Error in aperm.default(a, perm, resize = resize) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> f(FALSE,FALSE)
Error in aperm.default(a, perm, resize = resize) : 
  invalid first argument, must be an array
Calls: f -> aperm.default
> 
> ##  append  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("append", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "values" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : argument "values" is missing, with no default
> f(l0)
Error in f(l0) : argument "values" is missing, with no default
> f(c0)
Error in f(c0) : argument "values" is missing, with no default
> f(m0)
Error in f(m0) : argument "values" is missing, with no default
> f(df0)
Error in f(df0) : argument "values" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "values" is missing, with no default
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
$c0
factor(0)
Levels: 

$c0
factor(0)
Levels: 

> f(FALSE,FALSE)
[1] FALSE FALSE
> 
> ##  apply  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("apply", pos = 'package:base')
> f()
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(NULL)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(,NULL)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(NULL,NULL)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(list())
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(l0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(c0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(m0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(df0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(FALSE)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(list(),list())
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(l0,l0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(c0,c0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(df0,df0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(FALSE,FALSE)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> 
> ##  args  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("args", pos = 'package:base')
> f()
Error in f() : argument "name" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  array  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("array", pos = 'package:base')
> f()
[1] NA
> f(NULL)
Error in f(NULL) : 'data' must be of a vector type, was 'NULL'
> f(,NULL)
Error in f(, NULL) : 'dims' cannot be of length 0
> f(NULL,NULL)
Error in f(NULL, NULL) : 'data' must be of a vector type, was 'NULL'
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
NULL
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 'dims' cannot be of length 0
> f(l0,l0)
Error in f(l0, l0) : 'dims' cannot be of length 0
> f(c0,c0)
Error in f(c0, c0) : 'dims' cannot be of length 0
> f(df0,df0)
Error in if (length(data) != vl) { : 
  missing value where TRUE/FALSE needed
Calls: f
> f(FALSE,FALSE)
logical(0)
> 
> ##  arrayInd  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("arrayInd", pos = 'package:base')
> f()
Error in f() : argument "ind" is missing, with no default
> f(NULL)
Error in f(NULL) : argument ".dim" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "ind" is missing, with no default
> f(NULL,NULL)
<0 x 0 matrix>
> f(list())
Error in f(list()) : argument ".dim" is missing, with no default
> f(l0)
Error in f(l0) : argument ".dim" is missing, with no default
> f(c0)
Error in f(c0) : argument ".dim" is missing, with no default
> f(m0)
Error in f(m0) : argument ".dim" is missing, with no default
> f(df0)
Error in f(df0) : argument ".dim" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument ".dim" is missing, with no default
> f(list(),list())
Error in ind - 1L : non-numeric argument to binary operator
Calls: f
> f(l0,l0)
<0 x 0 matrix>
> f(c0,c0)
Error in ind - 1L : non-numeric argument to binary operator
Calls: f
> f(df0,df0)
Error in Ops.data.frame(wh1, .dim[1L]) : 
  '%%' only defined for equally-sized data frames
Calls: f -> Ops.data.frame
In addition: Warning message:
In Ops.factor(left, right) : '-' not meaningful for factors
> f(FALSE,FALSE)
     [,1]
[1,]   NA
> 
> ##  as.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.Date", pos = 'package:base')
> f()
Error in as.Date.default() : argument "x" is missing, with no default
Calls: f -> as.Date.default
> f(NULL)
Error in as.Date.default(NULL) : 
  do not know how to convert 'NULL' to class "Date"
Calls: f -> as.Date.default
> f(,NULL)
Error in as.Date.default(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> as.Date.default
> f(NULL,NULL)
Error in as.Date.default(NULL, NULL) : 
  do not know how to convert 'NULL' to class "Date"
Calls: f -> as.Date.default
> f(list())
Error in as.Date.default(list()) : 
  do not know how to convert 'list()' to class "Date"
Calls: f -> as.Date.default
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
Error in as.Date.numeric(m0) : 'origin' must be supplied
Calls: f -> as.Date.numeric
> f(df0)
Error in as.Date.default(df0) : 
  do not know how to convert 'df0' to class "Date"
Calls: f -> as.Date.default
> f(FALSE)
Error in as.Date.default(FALSE) : 
  do not know how to convert 'FALSE' to class "Date"
Calls: f -> as.Date.default
> f(list(),list())
Error in as.Date.default(list(), list()) : 
  do not know how to convert 'list()' to class "Date"
Calls: f -> as.Date.default
> f(l0,l0)
character(0)
> f(c0,c0)
Error in strptime(x, format, tz = "GMT") : invalid 'x' argument
Calls: f -> as.Date.character -> strptime
> f(df0,df0)
Error in as.Date.default(df0, df0) : 
  do not know how to convert 'df0' to class "Date"
Calls: f -> as.Date.default
> f(FALSE,FALSE)
Error in as.Date.default(FALSE, FALSE) : 
  do not know how to convert 'FALSE' to class "Date"
Calls: f -> as.Date.default
> 
> ##  as.Date.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.Date.POSIXct", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in if (tz == "UTC") { : argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (tz == "UTC") { : argument is of length zero
Calls: f
> f(list())
Error in unclass(x)/86400 : non-numeric argument to binary operator
Calls: f
> f(l0)
character(0)
> f(c0)
Error in unclass(x)/86400 : non-numeric argument to binary operator
Calls: f
> f(m0)
character(0)
> f(df0)
Error in unclass(x)/86400 : non-numeric argument to binary operator
Calls: f
> f(FALSE)
[1] "1970-01-01"
> f(list(),list())
Error in if (tz == "UTC") { : argument is of length zero
Calls: f
> f(l0,l0)
Error in if (tz == "UTC") { : argument is of length zero
Calls: f
> f(c0,c0)
Error in if (tz == "UTC") { : argument is of length zero
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
Error in as.POSIXlt.default(x, tz = tz) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.Date -> as.POSIXlt -> as.POSIXlt.default
> 
> ##  as.Date.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.Date.POSIXlt", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'x' argument
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'x' argument
> f(list())
Error in f(list()) : invalid 'x' argument
> f(l0)
Error in f(l0) : invalid 'x' argument
> f(c0)
Error in f(c0) : invalid 'x' argument
> f(m0)
Error in f(m0) : invalid 'x' argument
> f(df0)
Error in f(df0) : invalid 'x' argument
> f(FALSE)
Error in f(FALSE) : invalid 'x' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'x' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'x' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'x' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'x' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'x' argument
> 
> ##  as.Date.character  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.Date.character", pos = 'package:base')
> f()
Error in charToDate(x) : argument "x" is missing, with no default
Calls: f -> charToDate
> f(NULL)
Error in if (is.na(xx)) { : argument is of length zero
Calls: f -> charToDate
In addition: Warning message:
In is.na(xx) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in strptime(x, format, tz = "GMT") : 
  argument "x" is missing, with no default
Calls: f -> strptime
> f(NULL,NULL)
Error in strptime(x, format, tz = "GMT") : invalid 'x' argument
Calls: f -> strptime
> f(list())
Error in charToDate(x) : 
  character string is not in a standard unambiguous format
Calls: f -> charToDate
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
Error in if (is.na(xx)) { : argument is of length zero
Calls: f -> charToDate
> f(FALSE)
Error in charToDate(x) : 
  character string is not in a standard unambiguous format
Calls: f -> charToDate
> f(list(),list())
Error in strptime(x, format, tz = "GMT") : invalid 'x' argument
Calls: f -> strptime
> f(l0,l0)
Error in strptime(x, format, tz = "GMT") : invalid 'x' argument
Calls: f -> strptime
> f(c0,c0)
Error in strptime(x, format, tz = "GMT") : invalid 'x' argument
Calls: f -> strptime
> f(df0,df0)
Error in strptime(x, format, tz = "GMT") : invalid 'x' argument
Calls: f -> strptime
> f(FALSE,FALSE)
Error in strptime(x, format, tz = "GMT") : invalid 'x' argument
Calls: f -> strptime
> 
> ##  as.Date.date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.Date.date", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'NULL' is not a "date" object
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'NULL' is not a "date" object
> f(list())
Error in f(list()) : 'list()' is not a "date" object
> f(l0)
Error in f(l0) : 'l0' is not a "date" object
> f(c0)
Error in f(c0) : 'c0' is not a "date" object
> f(m0)
Error in f(m0) : 'm0' is not a "date" object
> f(df0)
Error in f(df0) : 'df0' is not a "date" object
> f(FALSE)
Error in f(FALSE) : 'FALSE' is not a "date" object
> f(list(),list())
Error in f(list(), list()) : 'list()' is not a "date" object
> f(l0,l0)
Error in f(l0, l0) : 'l0' is not a "date" object
> f(c0,c0)
Error in f(c0, c0) : 'c0' is not a "date" object
> f(df0,df0)
Error in f(df0, df0) : 'df0' is not a "date" object
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'FALSE' is not a "date" object
> 
> ##  as.Date.dates  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.Date.dates", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'NULL' is not a "dates" object
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'NULL' is not a "dates" object
> f(list())
Error in f(list()) : 'list()' is not a "dates" object
> f(l0)
Error in f(l0) : 'l0' is not a "dates" object
> f(c0)
Error in f(c0) : 'c0' is not a "dates" object
> f(m0)
Error in f(m0) : 'm0' is not a "dates" object
> f(df0)
Error in f(df0) : 'df0' is not a "dates" object
> f(FALSE)
Error in f(FALSE) : 'FALSE' is not a "dates" object
> f(list(),list())
Error in f(list(), list()) : 'list()' is not a "dates" object
> f(l0,l0)
Error in f(l0, l0) : 'l0' is not a "dates" object
> f(c0,c0)
Error in f(c0, c0) : 'c0' is not a "dates" object
> f(df0,df0)
Error in f(df0, df0) : 'df0' is not a "dates" object
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'FALSE' is not a "dates" object
> 
> ##  as.Date.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.Date.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : do not know how to convert 'NULL' to class "Date"
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  do not know how to convert 'NULL' to class "Date"
> f(list())
Error in f(list()) : do not know how to convert 'list()' to class "Date"
> f(l0)
character(0)
> f(c0)
Error in f(c0) : do not know how to convert 'c0' to class "Date"
> f(m0)
Error in f(m0) : do not know how to convert 'm0' to class "Date"
> f(df0)
Error in f(df0) : do not know how to convert 'df0' to class "Date"
> f(FALSE)
Error in f(FALSE) : do not know how to convert 'FALSE' to class "Date"
> f(list(),list())
Error in f(list(), list()) : 
  do not know how to convert 'list()' to class "Date"
> f(l0,l0)
character(0)
> f(c0,c0)
Error in f(c0, c0) : do not know how to convert 'c0' to class "Date"
> f(df0,df0)
Error in f(df0, df0) : do not know how to convert 'df0' to class "Date"
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  do not know how to convert 'FALSE' to class "Date"
> 
> ##  as.Date.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.Date.factor", pos = 'package:base')
> f()
Error in as.Date(as.character(x), ...) : 
  argument "x" is missing, with no default
Calls: f -> as.Date
> f(NULL)
character(0)
> f(,NULL)
Error in as.Date(as.character(x), ...) : 
  argument "x" is missing, with no default
Calls: f -> as.Date
> f(NULL,NULL)
Error in strptime(x, format, tz = "GMT") : invalid 'x' argument
Calls: f -> as.Date -> as.Date.character -> strptime
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
Error in charToDate(x) : 
  character string is not in a standard unambiguous format
Calls: f -> as.Date -> as.Date.character -> charToDate
> f(FALSE)
Error in charToDate(x) : 
  character string is not in a standard unambiguous format
Calls: f -> as.Date -> as.Date.character -> charToDate
> f(list(),list())
Error in strptime(x, format, tz = "GMT") : invalid 'x' argument
Calls: f -> as.Date -> as.Date.character -> strptime
> f(l0,l0)
Error in strptime(x, format, tz = "GMT") : invalid 'x' argument
Calls: f -> as.Date -> as.Date.character -> strptime
> f(c0,c0)
Error in strptime(x, format, tz = "GMT") : invalid 'x' argument
Calls: f -> as.Date -> as.Date.character -> strptime
> f(df0,df0)
Error in strptime(x, format, tz = "GMT") : invalid 'x' argument
Calls: f -> as.Date -> as.Date.character -> strptime
> f(FALSE,FALSE)
Error in strptime(x, format, tz = "GMT") : invalid 'x' argument
Calls: f -> as.Date -> as.Date.character -> strptime
> 
> ##  as.Date.numeric  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.Date.numeric", pos = 'package:base')
> f()
Error in f() : 'origin' must be supplied
> f(NULL)
Error in f(NULL) : 'origin' must be supplied
> f(,NULL)
Error in as.Date.default(origin, ...) : 
  do not know how to convert 'origin' to class "Date"
Calls: f -> as.Date -> as.Date.default
> f(NULL,NULL)
Error in as.Date.default(origin, ...) : 
  do not know how to convert 'origin' to class "Date"
Calls: f -> as.Date -> as.Date.default
> f(list())
Error in f(list()) : 'origin' must be supplied
> f(l0)
Error in f(l0) : 'origin' must be supplied
> f(c0)
Error in f(c0) : 'origin' must be supplied
> f(m0)
Error in f(m0) : 'origin' must be supplied
> f(df0)
Error in f(df0) : 'origin' must be supplied
> f(FALSE)
Error in f(FALSE) : 'origin' must be supplied
> f(list(),list())
Error in as.Date.default(origin, ...) : 
  do not know how to convert 'origin' to class "Date"
Calls: f -> as.Date -> as.Date.default
> f(l0,l0)
character(0)
> f(c0,c0)
Error in unclass(e1) + unclass(e2) : 
  non-numeric argument to binary operator
Calls: f -> +.Date -> structure
> f(df0,df0)
Error in as.Date.default(origin, ...) : 
  do not know how to convert 'origin' to class "Date"
Calls: f -> as.Date -> as.Date.default
> f(FALSE,FALSE)
Error in as.Date.default(origin, ...) : 
  do not know how to convert 'origin' to class "Date"
Calls: f -> as.Date -> as.Date.default
> 
> ##  as.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXct", pos = 'package:base')
> f()
Error in as.POSIXct.default() : argument "x" is missing, with no default
Calls: f -> as.POSIXct.default
> f(NULL)
Error in as.POSIXct.default(NULL) : 
  do not know how to convert 'NULL' to class "POSIXct"
Calls: f -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct.default(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> as.POSIXct.default
> f(NULL,NULL)
Error in as.POSIXct.default(NULL, NULL) : 
  do not know how to convert 'NULL' to class "POSIXct"
Calls: f -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(list()) : 
  do not know how to convert 'list()' to class "POSIXct"
Calls: f -> as.POSIXct.default
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
Error in as.POSIXct.numeric(m0) : 'origin' must be supplied
Calls: f -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(df0) : 
  do not know how to convert 'df0' to class "POSIXct"
Calls: f -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(FALSE) : 
  do not know how to convert 'FALSE' to class "POSIXct"
Calls: f -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(list(), list()) : 
  do not know how to convert 'list()' to class "POSIXct"
Calls: f -> as.POSIXct.default
> f(l0,l0)
character(0)
> f(c0,c0)
Error in if (nzchar(tz)) attr(res, "tzone") <- tz : 
  argument is of length zero
Calls: f ... as.POSIXct.default -> as.POSIXct -> as.POSIXlt -> as.POSIXlt.character
> f(df0,df0)
Error in as.POSIXct.default(df0, df0) : 
  do not know how to convert 'df0' to class "POSIXct"
Calls: f -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(FALSE, FALSE) : 
  do not know how to convert 'FALSE' to class "POSIXct"
Calls: f -> as.POSIXct.default
> 
> ##  as.POSIXct.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXct.Date", pos = 'package:base')
> f()
Error in structure(xx, class = c("POSIXct", "POSIXt"), tzone = tz) : 
  argument "x" is missing, with no default
Calls: f -> .POSIXct -> structure
> f(NULL)
character(0)
> f(,NULL)
Error in structure(xx, class = c("POSIXct", "POSIXt"), tzone = tz) : 
  argument "x" is missing, with no default
Calls: f -> .POSIXct -> structure
> f(NULL,NULL)
character(0)
> f(list())
Error in unclass(x) * 86400 : non-numeric argument to binary operator
Calls: f -> .POSIXct -> structure
> f(l0)
character(0)
> f(c0)
Error in unclass(x) * 86400 : non-numeric argument to binary operator
Calls: f -> .POSIXct -> structure
> f(m0)
character(0)
> f(df0)
Error in unclass(x) * 86400 : non-numeric argument to binary operator
Calls: f -> .POSIXct -> structure
> f(FALSE)
[1] "1969-12-31 19:00:00 EST"
> f(list(),list())
Error in unclass(x) * 86400 : non-numeric argument to binary operator
Calls: f -> .POSIXct -> structure
> f(l0,l0)
character(0)
> f(c0,c0)
Error in unclass(x) * 86400 : non-numeric argument to binary operator
Calls: f -> .POSIXct -> structure
> f(df0,df0)
Error in unclass(x) * 86400 : non-numeric argument to binary operator
Calls: f -> .POSIXct -> structure
> f(FALSE,FALSE)
[1] "1969-12-31 19:00:00 EST"
> 
> ##  as.POSIXct.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXct.POSIXlt", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'x' argument
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'x' argument
> f(list())
Error in f(list()) : invalid 'x' argument
> f(l0)
Error in f(l0) : invalid 'x' argument
> f(c0)
Error in f(c0) : invalid 'x' argument
> f(m0)
Error in f(m0) : invalid 'x' argument
> f(df0)
Error in f(df0) : invalid 'x' argument
> f(FALSE)
Error in f(FALSE) : invalid 'x' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'x' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'x' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'x' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'x' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'x' argument
> 
> ##  as.POSIXct.date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXct.date", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'NULL' is not a "date" object
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'NULL' is not a "date" object
> f(list())
Error in f(list()) : 'list()' is not a "date" object
> f(l0)
Error in f(l0) : 'l0' is not a "date" object
> f(c0)
Error in f(c0) : 'c0' is not a "date" object
> f(m0)
Error in f(m0) : 'm0' is not a "date" object
> f(df0)
Error in f(df0) : 'df0' is not a "date" object
> f(FALSE)
Error in f(FALSE) : 'FALSE' is not a "date" object
> f(list(),list())
Error in f(list(), list()) : 'list()' is not a "date" object
> f(l0,l0)
Error in f(l0, l0) : 'l0' is not a "date" object
> f(c0,c0)
Error in f(c0, c0) : 'c0' is not a "date" object
> f(df0,df0)
Error in f(df0, df0) : 'df0' is not a "date" object
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'FALSE' is not a "date" object
> 
> ##  as.POSIXct.dates  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXct.dates", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'NULL' is not a "dates" object
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'NULL' is not a "dates" object
> f(list())
Error in f(list()) : 'list()' is not a "dates" object
> f(l0)
Error in f(l0) : 'l0' is not a "dates" object
> f(c0)
Error in f(c0) : 'c0' is not a "dates" object
> f(m0)
Error in f(m0) : 'm0' is not a "dates" object
> f(df0)
Error in f(df0) : 'df0' is not a "dates" object
> f(FALSE)
Error in f(FALSE) : 'FALSE' is not a "dates" object
> f(list(),list())
Error in f(list(), list()) : 'list()' is not a "dates" object
> f(l0,l0)
Error in f(l0, l0) : 'l0' is not a "dates" object
> f(c0,c0)
Error in f(c0, c0) : 'c0' is not a "dates" object
> f(df0,df0)
Error in f(df0, df0) : 'df0' is not a "dates" object
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'FALSE' is not a "dates" object
> 
> ##  as.POSIXct.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXct.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : do not know how to convert 'NULL' to class "POSIXct"
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  do not know how to convert 'NULL' to class "POSIXct"
> f(list())
Error in f(list()) : 
  do not know how to convert 'list()' to class "POSIXct"
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
Error in f(m0) : do not know how to convert 'm0' to class "POSIXct"
> f(df0)
Error in f(df0) : do not know how to convert 'df0' to class "POSIXct"
> f(FALSE)
Error in f(FALSE) : do not know how to convert 'FALSE' to class "POSIXct"
> f(list(),list())
Error in f(list(), list()) : 
  do not know how to convert 'list()' to class "POSIXct"
> f(l0,l0)
character(0)
> f(c0,c0)
Error in if (nzchar(tz)) attr(res, "tzone") <- tz : 
  argument is of length zero
Calls: f -> as.POSIXct -> as.POSIXlt -> as.POSIXlt.character
> f(df0,df0)
Error in f(df0, df0) : 
  do not know how to convert 'df0' to class "POSIXct"
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  do not know how to convert 'FALSE' to class "POSIXct"
> 
> ##  as.POSIXct.numeric  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXct.numeric", pos = 'package:base')
> f()
Error in f() : 'origin' must be supplied
> f(NULL)
Error in f(NULL) : 'origin' must be supplied
> f(,NULL)
Error in f(, NULL) : 'origin' must be supplied
> f(NULL,NULL)
Error in f(NULL, NULL) : 'origin' must be supplied
> f(list())
Error in f(list()) : 'origin' must be supplied
> f(l0)
Error in f(l0) : 'origin' must be supplied
> f(c0)
Error in f(c0) : 'origin' must be supplied
> f(m0)
Error in f(m0) : 'origin' must be supplied
> f(df0)
Error in f(df0) : 'origin' must be supplied
> f(FALSE)
Error in f(FALSE) : 'origin' must be supplied
> f(list(),list())
Error in f(list(), list()) : 'origin' must be supplied
> f(l0,l0)
Error in f(l0, l0) : 'origin' must be supplied
> f(c0,c0)
Error in f(c0, c0) : 'origin' must be supplied
> f(df0,df0)
Error in f(df0, df0) : 'origin' must be supplied
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'origin' must be supplied
> 
> ##  as.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXlt", pos = 'package:base')
> f()
Error in as.POSIXlt.default() : argument "x" is missing, with no default
Calls: f -> as.POSIXlt.default
> f(NULL)
Error in as.POSIXlt.default(NULL) : 
  do not know how to convert 'NULL' to class "POSIXlt"
Calls: f -> as.POSIXlt.default
> f(,NULL)
Error in as.POSIXlt.default(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> as.POSIXlt.default
> f(NULL,NULL)
Error in as.POSIXlt.default(NULL, NULL) : 
  do not know how to convert 'NULL' to class "POSIXlt"
Calls: f -> as.POSIXlt.default
> f(list())
Error in as.POSIXlt.default(list()) : 
  do not know how to convert 'list()' to class "POSIXlt"
Calls: f -> as.POSIXlt.default
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
Error in as.POSIXlt.numeric(m0) : 'origin' must be supplied
Calls: f -> as.POSIXlt.numeric
> f(df0)
Error in as.POSIXlt.default(df0) : 
  do not know how to convert 'df0' to class "POSIXlt"
Calls: f -> as.POSIXlt.default
> f(FALSE)
Error in as.POSIXlt.default(FALSE) : 
  do not know how to convert 'FALSE' to class "POSIXlt"
Calls: f -> as.POSIXlt.default
> f(list(),list())
Error in as.POSIXlt.default(list(), list()) : 
  do not know how to convert 'list()' to class "POSIXlt"
Calls: f -> as.POSIXlt.default
> f(l0,l0)
Error in as.POSIXlt.POSIXct(as.POSIXct.default(x), tz = tz) : 
  invalid 'tz' value
Calls: f ... as.POSIXlt.default -> as.POSIXlt -> as.POSIXlt.POSIXct
> f(c0,c0)
Error in if (nzchar(tz)) attr(res, "tzone") <- tz : 
  argument is of length zero
Calls: f -> as.POSIXlt.character
> f(df0,df0)
Error in as.POSIXlt.default(df0, df0) : 
  do not know how to convert 'df0' to class "POSIXlt"
Calls: f -> as.POSIXlt.default
> f(FALSE,FALSE)
Error in as.POSIXlt.default(FALSE, FALSE) : 
  do not know how to convert 'FALSE' to class "POSIXlt"
Calls: f -> as.POSIXlt.default
> 
> ##  as.POSIXlt.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXlt.Date", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
c0 
NA 
> f(FALSE)
[1] "1970-01-01 UTC"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
c0 
NA 
> f(FALSE,FALSE)
[1] "1970-01-01 UTC"
> 
> ##  as.POSIXlt.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXlt.POSIXct", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'tz' value
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
c0 
NA 
> f(FALSE)
[1] "1969-12-31 19:00:00 EST"
> f(list(),list())
Error in f(list(), list()) : invalid 'tz' value
> f(l0,l0)
Error in f(l0, l0) : invalid 'tz' value
> f(c0,c0)
Error in f(c0, c0) : invalid 'tz' value
> f(df0,df0)
Error in f(df0, df0) : invalid 'tz' value
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'tz' value
> 
> ##  as.POSIXlt.character  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXlt.character", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in if (nzchar(tz)) attr(res, "tzone") <- tz : 
  argument is of length zero
Calls: f
In addition: Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
Error in f(df0) : 
  character string is not in a standard unambiguous format
> f(FALSE)
Error in f(FALSE) : 
  character string is not in a standard unambiguous format
> f(list(),list())
Error in if (nzchar(tz)) attr(res, "tzone") <- tz : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (nzchar(tz)) attr(res, "tzone") <- tz : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (nzchar(tz)) attr(res, "tzone") <- tz : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in strptime(xx, f <- "%Y-%m-%d %H:%M:%OS", tz = tz) : 
  invalid 'tz' value
Calls: f -> strptime
> f(FALSE,FALSE)
Error in strptime(xx, f <- "%Y-%m-%d %H:%M:%OS", tz = tz) : 
  invalid 'tz' value
Calls: f -> strptime
> 
> ##  as.POSIXlt.date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXlt.date", pos = 'package:base')
> f()
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXlt -> as.POSIXct
> f(NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXlt -> as.POSIXct
> f(NULL,NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
Error in as.POSIXct.numeric(x) : 'origin' must be supplied
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(l0,l0)
Error in as.POSIXlt.POSIXct(as.POSIXct(x), ...) : invalid 'tz' value
Calls: f -> as.POSIXlt -> as.POSIXlt.POSIXct
> f(c0,c0)
Error in as.POSIXlt.POSIXct(as.POSIXct(x), ...) : invalid 'tz' value
Calls: f -> as.POSIXlt -> as.POSIXlt.POSIXct
> f(df0,df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> 
> ##  as.POSIXlt.dates  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXlt.dates", pos = 'package:base')
> f()
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXlt -> as.POSIXct
> f(NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXlt -> as.POSIXct
> f(NULL,NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
Error in as.POSIXct.numeric(x) : 'origin' must be supplied
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(l0,l0)
Error in as.POSIXlt.POSIXct(as.POSIXct(x), ...) : invalid 'tz' value
Calls: f -> as.POSIXlt -> as.POSIXlt.POSIXct
> f(c0,c0)
Error in as.POSIXlt.POSIXct(as.POSIXct(x), ...) : invalid 'tz' value
Calls: f -> as.POSIXlt -> as.POSIXlt.POSIXct
> f(df0,df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> 
> ##  as.POSIXlt.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXlt.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : do not know how to convert 'NULL' to class "POSIXlt"
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  do not know how to convert 'NULL' to class "POSIXlt"
> f(list())
Error in f(list()) : 
  do not know how to convert 'list()' to class "POSIXlt"
> f(l0)
character(0)
> f(c0)
Error in f(c0) : do not know how to convert 'c0' to class "POSIXlt"
> f(m0)
Error in f(m0) : do not know how to convert 'm0' to class "POSIXlt"
> f(df0)
Error in f(df0) : do not know how to convert 'df0' to class "POSIXlt"
> f(FALSE)
Error in f(FALSE) : do not know how to convert 'FALSE' to class "POSIXlt"
> f(list(),list())
Error in f(list(), list()) : 
  do not know how to convert 'list()' to class "POSIXlt"
> f(l0,l0)
Error in as.POSIXlt.POSIXct(as.POSIXct.default(x), tz = tz) : 
  invalid 'tz' value
Calls: f -> as.POSIXlt -> as.POSIXlt.POSIXct
> f(c0,c0)
Error in f(c0, c0) : do not know how to convert 'c0' to class "POSIXlt"
> f(df0,df0)
Error in f(df0, df0) : 
  do not know how to convert 'df0' to class "POSIXlt"
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  do not know how to convert 'FALSE' to class "POSIXlt"
> 
> ##  as.POSIXlt.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXlt.factor", pos = 'package:base')
> f()
Error in as.POSIXlt(as.character(x), ...) : 
  argument "x" is missing, with no default
Calls: f -> as.POSIXlt
> f(NULL)
character(0)
> f(,NULL)
Error in as.POSIXlt(as.character(x), ...) : 
  argument "x" is missing, with no default
Calls: f -> as.POSIXlt
> f(NULL,NULL)
Error in if (nzchar(tz)) attr(res, "tzone") <- tz : 
  argument is of length zero
Calls: f -> as.POSIXlt -> as.POSIXlt.character
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
Error in as.POSIXlt.character(as.character(x), ...) : 
  character string is not in a standard unambiguous format
Calls: f -> as.POSIXlt -> as.POSIXlt.character
> f(FALSE)
Error in as.POSIXlt.character(as.character(x), ...) : 
  character string is not in a standard unambiguous format
Calls: f -> as.POSIXlt -> as.POSIXlt.character
> f(list(),list())
Error in if (nzchar(tz)) attr(res, "tzone") <- tz : 
  argument is of length zero
Calls: f -> as.POSIXlt -> as.POSIXlt.character
> f(l0,l0)
Error in if (nzchar(tz)) attr(res, "tzone") <- tz : 
  argument is of length zero
Calls: f -> as.POSIXlt -> as.POSIXlt.character
> f(c0,c0)
Error in if (nzchar(tz)) attr(res, "tzone") <- tz : 
  argument is of length zero
Calls: f -> as.POSIXlt -> as.POSIXlt.character
> f(df0,df0)
Error in strptime(xx, f <- "%Y-%m-%d %H:%M:%OS", tz = tz) : 
  invalid 'tz' value
Calls: f -> as.POSIXlt -> as.POSIXlt.character -> strptime
> f(FALSE,FALSE)
Error in strptime(xx, f <- "%Y-%m-%d %H:%M:%OS", tz = tz) : 
  invalid 'tz' value
Calls: f -> as.POSIXlt -> as.POSIXlt.character -> strptime
> 
> ##  as.POSIXlt.numeric  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.POSIXlt.numeric", pos = 'package:base')
> f()
Error in f() : 'origin' must be supplied
> f(NULL)
Error in f(NULL) : 'origin' must be supplied
> f(,NULL)
Error in f(, NULL) : 'origin' must be supplied
> f(NULL,NULL)
Error in f(NULL, NULL) : 'origin' must be supplied
> f(list())
Error in f(list()) : 'origin' must be supplied
> f(l0)
Error in f(l0) : 'origin' must be supplied
> f(c0)
Error in f(c0) : 'origin' must be supplied
> f(m0)
Error in f(m0) : 'origin' must be supplied
> f(df0)
Error in f(df0) : 'origin' must be supplied
> f(FALSE)
Error in f(FALSE) : 'origin' must be supplied
> f(list(),list())
Error in f(list(), list()) : 'origin' must be supplied
> f(l0,l0)
Error in f(l0, l0) : 'origin' must be supplied
> f(c0,c0)
Error in f(c0, c0) : 'origin' must be supplied
> f(df0,df0)
Error in f(df0, df0) : 'origin' must be supplied
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'origin' must be supplied
> 
> ##  as.array  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.array", pos = 'package:base')
> f()
Error in as.array.default() : argument "x" is missing, with no default
Calls: f -> as.array.default
> f(NULL)
Error in as.array.default(NULL) : attempt to set an attribute on NULL
Calls: f -> as.array.default
> f(,NULL)
Error in as.array.default(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> as.array.default
> f(NULL,NULL)
Error in as.array.default(NULL, NULL) : 
  attempt to set an attribute on NULL
Calls: f -> as.array.default
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in `dimnames<-.data.frame`(`*tmp*`, value = list(n)) : 
  invalid 'dimnames' given for data frame
Calls: f ... as.array.default -> dimnames<- -> dimnames<-.data.frame
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in `dimnames<-.data.frame`(`*tmp*`, value = list(n)) : 
  invalid 'dimnames' given for data frame
Calls: f ... as.array.default -> dimnames<- -> dimnames<-.data.frame
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  as.array.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.array.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : attempt to set an attribute on NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : attempt to set an attribute on NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in `dimnames<-.data.frame`(`*tmp*`, value = list(n)) : 
  invalid 'dimnames' given for data frame
Calls: f -> dimnames<- -> dimnames<-.data.frame
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in `dimnames<-.data.frame`(`*tmp*`, value = list(n)) : 
  invalid 'dimnames' given for data frame
Calls: f -> dimnames<- -> dimnames<-.data.frame
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  as.call  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.call", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'as.call' which requires 1
> f(NULL)
Error in f(NULL) : invalid argument list
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'as.call' which requires 1
> f(list())
Error in f(list()) : invalid length 0 argument
> f(l0)
Error in f(l0) : invalid argument list
> f(c0)
Error in f(c0) : invalid argument list
> f(m0)
Error in f(m0) : invalid argument list
> f(df0)
integer(0)()
> f(FALSE)
Error in f(FALSE) : invalid argument list
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'as.call' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'as.call' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'as.call' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'as.call' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'as.call' which requires 1
> 
> ##  as.character  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.character", pos = 'package:base')
> f()
character(0)
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[1] "integer(0)"
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  as.character.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.character.Date", pos = 'package:base')
> f()
Error in format(x, ...) : argument "x" is missing, with no default
Calls: f -> format
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in format(x, ...) : argument "x" is missing, with no default
Calls: f -> format
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(c0,c0)
Error in format.default(x, ...) : invalid 'trim' argument
Calls: f -> format -> format.default
> f(df0,df0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f ... format -> format.factor -> format -> format.default
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  as.character.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.character.POSIXt", pos = 'package:base')
> f()
Error in format(x, ...) : argument "x" is missing, with no default
Calls: f -> format
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in format(x, ...) : argument "x" is missing, with no default
Calls: f -> format
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(c0,c0)
Error in format.default(x, ...) : invalid 'trim' argument
Calls: f -> format -> format.default
> f(df0,df0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f ... format -> format.factor -> format -> format.default
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  as.character.condition  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.character.condition", pos = 'package:base')
> f()
Error in conditionMessage(x) : argument "x" is missing, with no default
Calls: f -> conditionMessage
> f(NULL)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "NULL"
Calls: f -> conditionMessage
> f(,NULL)
Error in conditionMessage(x) : argument "x" is missing, with no default
Calls: f -> conditionMessage
> f(NULL,NULL)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "NULL"
Calls: f -> conditionMessage
> f(list())
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "list"
Calls: f -> conditionMessage
> f(l0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f -> conditionMessage
> f(c0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "character"
Calls: f -> conditionMessage
> f(m0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f -> conditionMessage
> f(df0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "data.frame"
Calls: f -> conditionMessage
> f(FALSE)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f -> conditionMessage
> f(list(),list())
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "list"
Calls: f -> conditionMessage
> f(l0,l0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f -> conditionMessage
> f(c0,c0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "character"
Calls: f -> conditionMessage
> f(df0,df0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "data.frame"
Calls: f -> conditionMessage
> f(FALSE,FALSE)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f -> conditionMessage
> 
> ##  as.character.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.character.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[1] "integer(0)"
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  as.character.error  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.character.error", pos = 'package:base')
> f()
Error in conditionMessage(x) : argument "x" is missing, with no default
Calls: f -> conditionMessage
> f(NULL)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "NULL"
Calls: f -> conditionMessage
> f(,NULL)
Error in conditionMessage(x) : argument "x" is missing, with no default
Calls: f -> conditionMessage
> f(NULL,NULL)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "NULL"
Calls: f -> conditionMessage
> f(list())
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "list"
Calls: f -> conditionMessage
> f(l0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f -> conditionMessage
> f(c0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "character"
Calls: f -> conditionMessage
> f(m0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f -> conditionMessage
> f(df0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "data.frame"
Calls: f -> conditionMessage
> f(FALSE)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f -> conditionMessage
> f(list(),list())
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "list"
Calls: f -> conditionMessage
> f(l0,l0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f -> conditionMessage
> f(c0,c0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "character"
Calls: f -> conditionMessage
> f(df0,df0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "data.frame"
Calls: f -> conditionMessage
> f(FALSE,FALSE)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f -> conditionMessage
> 
> ##  as.character.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.character.factor", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : attempting to coerce non-factor
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : attempting to coerce non-factor
> f(list())
Error in f(list()) : attempting to coerce non-factor
> f(l0)
Error in f(l0) : attempting to coerce non-factor
> f(c0)
Error in f(c0) : attempting to coerce non-factor
> f(m0)
Error in f(m0) : attempting to coerce non-factor
> f(df0)
Error in f(df0) : attempting to coerce non-factor
> f(FALSE)
Error in f(FALSE) : attempting to coerce non-factor
> f(list(),list())
Error in f(list(), list()) : attempting to coerce non-factor
> f(l0,l0)
Error in f(l0, l0) : attempting to coerce non-factor
> f(c0,c0)
Error in f(c0, c0) : attempting to coerce non-factor
> f(df0,df0)
Error in f(df0, df0) : attempting to coerce non-factor
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : attempting to coerce non-factor
> 
> ##  as.character.hexmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.character.hexmode", pos = 'package:base')
> f()
Error in format.hexmode(x, ...) : 
  argument "x" is missing, with no default
Calls: f -> format.hexmode
> f(NULL)
character(0)
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in format.hexmode(x, ...) : 
  argument "x" is missing, with no default
Calls: f -> format.hexmode
> f(NULL,NULL)
character(0)
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in format.hexmode(x, ...) : 
  dims [product 0] do not match the length of object [1]
Calls: f -> format.hexmode
> f(FALSE)
[1] "0"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in format.hexmode(x, ...) : 
  dims [product 0] do not match the length of object [1]
Calls: f -> format.hexmode
> f(FALSE,FALSE)
Error in sprintf(fmt, y) : 
  invalid format '%0FA'; use format %d, %i, %o, %x or %X for integer objects
Calls: f -> format.hexmode -> sprintf
> 
> ##  as.character.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.character.numeric_version", pos = 'package:base')
> f()
Error in format(x) : argument "x" is missing, with no default
Calls: f -> format
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in format(x) : argument "x" is missing, with no default
Calls: f -> format
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "character(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[1] "character(0)"
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  as.character.octmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.character.octmode", pos = 'package:base')
> f()
Error in format.octmode(x, ...) : 
  argument "x" is missing, with no default
Calls: f -> format.octmode
> f(NULL)
character(0)
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in format.octmode(x, ...) : 
  argument "x" is missing, with no default
Calls: f -> format.octmode
> f(NULL,NULL)
character(0)
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in format.octmode(x, ...) : 
  dims [product 0] do not match the length of object [1]
Calls: f -> format.octmode
> f(FALSE)
[1] "0"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in format.octmode(x, ...) : 
  dims [product 0] do not match the length of object [1]
Calls: f -> format.octmode
> f(FALSE,FALSE)
Error in sprintf(fmt, y) : 
  invalid format '%0FA'; use format %d, %i, %o, %x or %X for integer objects
Calls: f -> format.octmode -> sprintf
> 
> ##  as.character.srcref  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.character.srcref", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] "<srcref: file \"\" chars : to :>"
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in if (useSource) { : argument is of length zero
Calls: f
> f(list())
[1] "<srcref: file \"\" chars NULL:NULL to NULL:NULL>"
> f(l0)
[1] "<srcref: file \"\" chars NA:NA to NA:NA>"
> f(c0)
[1] "<srcref: file \"\" chars NA:NA to NA:NA>"
> f(m0)
[1] "<srcref: file \"\" chars NA:NA to NA:NA>"
> f(df0)
Error in `[.data.frame`(x, 5L) : undefined columns selected
Calls: f -> paste -> [ -> [.data.frame
> f(FALSE)
[1] "<srcref: file \"\" chars FALSE:NA to NA:NA>"
> f(list(),list())
Error in if (useSource) { : argument is of length zero
Calls: f
> f(l0,l0)
Error in if (useSource) { : argument is of length zero
Calls: f
> f(c0,c0)
Error in if (useSource) { : argument is of length zero
Calls: f
> f(df0,df0)
Error in if (useSource) { : argument is not interpretable as logical
Calls: f
> f(FALSE,FALSE)
[1] "<srcref: file \"\" chars FALSE:NA to NA:NA>"
> 
> ##  as.complex  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.complex", pos = 'package:base')
> f()
complex(0)
> f(NULL)
complex(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
complex(0)
> f(list())
complex(0)
> f(l0)
complex(0)
> f(c0)
complex(0)
> f(m0)
complex(0)
> f(df0)
[1] NA
> f(FALSE)
[1] 0+0i
> f(list(),list())
complex(0)
> f(l0,l0)
complex(0)
> f(c0,c0)
complex(0)
> f(df0,df0)
[1] NA
> f(FALSE,FALSE)
[1] 0+0i
> 
> ##  as.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
data frame with 0 columns and 0 rows
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
data frame with 0 columns and 0 rows
> f(list())
data frame with 0 columns and 0 rows
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
data frame with 0 columns and 0 rows
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
data frame with 0 columns and 0 rows
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In as.data.frame.logical(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
Error in as.data.frame.data.frame(df0, df0) : 
  invalid 'row.names', length 1 for a data frame with 0 rows
Calls: f -> as.data.frame.data.frame
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In as.data.frame.logical(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.AsIs  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.AsIs", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] x
<0 rows> (or 0-length row.names)
> f(df0)
[1] x
<0 rows> (or 0-length row.names)
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
Error in f(list(), list()) : 
  row names must be 'character' or 'integer', not 'list'
> f(l0,l0)
Error in f(l0, l0) : 
  row names must be 'character' or 'integer', not 'logical'
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
[1] x
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  row names must be 'character' or 'integer', not 'logical'
> 
> ##  as.data.frame.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.Date", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
[1] list()
<0 rows> (or 0-length row.names)
Warning message:
In f(list(), list()) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In f(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In f(df0, df0) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In f(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.POSIXct", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
[1] list()
<0 rows> (or 0-length row.names)
Warning message:
In f(list(), list()) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In f(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In f(df0, df0) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In f(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.POSIXlt", pos = 'package:base')
> f()
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.data.frame.POSIXct -> as.POSIXct
> f(NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.data.frame.POSIXct -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.data.frame.POSIXct -> as.POSIXct
> f(NULL,NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.data.frame.POSIXct -> as.POSIXct -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.data.frame.POSIXct -> as.POSIXct -> as.POSIXct.default
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
Error in as.POSIXct.numeric(x) : 'origin' must be supplied
Calls: f ... as.data.frame.POSIXct -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.data.frame.POSIXct -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.data.frame.POSIXct -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.data.frame.POSIXct -> as.POSIXct -> as.POSIXct.default
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In as.data.frame.POSIXct(as.POSIXct(x), row.names, optional, ...) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.data.frame.POSIXct -> as.POSIXct -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.data.frame.POSIXct -> as.POSIXct -> as.POSIXct.default
> 
> ##  as.data.frame.array  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.array", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : attempt to set an attribute on NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : attempt to set an attribute on NULL
> f(list())
Error in f(list()) : 
  dims [product 1] do not match the length of object [0]
> f(l0)
Error in f(l0) : dims [product 1] do not match the length of object [0]
> f(c0)
Error in f(c0) : dims [product 1] do not match the length of object [0]
> f(m0)
data frame with 0 columns and 0 rows
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f -> as.data.frame.matrix
> f(list(),list())
Error in f(list(), list()) : 
  dims [product 1] do not match the length of object [0]
> f(l0,l0)
Error in f(l0, l0) : 
  dims [product 1] do not match the length of object [0]
> f(c0,c0)
Error in f(c0, c0) : 
  dims [product 1] do not match the length of object [0]
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f -> as.data.frame.matrix
> 
> ##  as.data.frame.character  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.character", pos = 'package:base')
> f()
Error in factor(x) : argument "x" is missing, with no default
Calls: f -> factor
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in factor(x) : argument "x" is missing, with no default
Calls: f -> factor
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In as.data.frame.vector(x, ..., nm = nm) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In as.data.frame.vector(x, ..., nm = nm) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.complex  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.complex", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
[1] list()
<0 rows> (or 0-length row.names)
Warning message:
In f(list(), list()) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In f(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In f(df0, df0) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In f(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in if (i > 1L) class(x) <- cl[-(1L:(i - 1L))] : 
  missing value where TRUE/FALSE needed
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in if (i > 1L) class(x) <- cl[-(1L:(i - 1L))] : 
  missing value where TRUE/FALSE needed
Calls: f
> f(list())
Error in if (i > 1L) class(x) <- cl[-(1L:(i - 1L))] : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0)
Error in if (i > 1L) class(x) <- cl[-(1L:(i - 1L))] : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0)
Error in if (i > 1L) class(x) <- cl[-(1L:(i - 1L))] : 
  missing value where TRUE/FALSE needed
Calls: f
> f(m0)
Error in if (i > 1L) class(x) <- cl[-(1L:(i - 1L))] : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in if (i > 1L) class(x) <- cl[-(1L:(i - 1L))] : 
  missing value where TRUE/FALSE needed
Calls: f
> f(list(),list())
Error in if (i > 1L) class(x) <- cl[-(1L:(i - 1L))] : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0,l0)
Error in if (i > 1L) class(x) <- cl[-(1L:(i - 1L))] : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0,c0)
Error in if (i > 1L) class(x) <- cl[-(1L:(i - 1L))] : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0,df0)
Error in f(df0, df0) : 
  invalid 'row.names', length 1 for a data frame with 0 rows
> f(FALSE,FALSE)
Error in if (i > 1L) class(x) <- cl[-(1L:(i - 1L))] : 
  missing value where TRUE/FALSE needed
Calls: f
> 
> ##  as.data.frame.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.default", pos = 'package:base')
> f()
Error in deparse(class(x)) : argument "x" is missing, with no default
Calls: f
> f(NULL)
Error in f(NULL) : cannot coerce class ""NULL"" to a data.frame
> f(,NULL)
Error in deparse(class(x)) : argument "x" is missing, with no default
Calls: f
> f(NULL,NULL)
Error in f(NULL, NULL) : cannot coerce class ""NULL"" to a data.frame
> f(list())
Error in f(list()) : cannot coerce class ""list"" to a data.frame
> f(l0)
Error in f(l0) : cannot coerce class ""logical"" to a data.frame
> f(c0)
Error in f(c0) : cannot coerce class ""character"" to a data.frame
> f(m0)
Error in f(m0) : cannot coerce class ""matrix"" to a data.frame
> f(df0)
Error in f(df0) : cannot coerce class ""data.frame"" to a data.frame
> f(FALSE)
Error in f(FALSE) : cannot coerce class ""logical"" to a data.frame
> f(list(),list())
Error in f(list(), list()) : cannot coerce class ""list"" to a data.frame
> f(l0,l0)
Error in f(l0, l0) : cannot coerce class ""logical"" to a data.frame
> f(c0,c0)
Error in f(c0, c0) : cannot coerce class ""character"" to a data.frame
> f(df0,df0)
Error in f(df0, df0) : cannot coerce class ""data.frame"" to a data.frame
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  cannot coerce class ""logical"" to a data.frame
> 
> ##  as.data.frame.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.difftime", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
[1] list()
<0 rows> (or 0-length row.names)
Warning message:
In f(list(), list()) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In f(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In f(df0, df0) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In f(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.factor", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
[1] list()
<0 rows> (or 0-length row.names)
Warning message:
In f(list(), list()) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In f(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In f(df0, df0) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In f(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.integer  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.integer", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
[1] list()
<0 rows> (or 0-length row.names)
Warning message:
In f(list(), list()) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In f(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In f(df0, df0) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In f(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.list  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.list", pos = 'package:base')
> f()
Error in match(names(formals(data.frame))[-1L], col.names, 0L) : 
  argument "x" is missing, with no default
Calls: f -> match
> f(NULL)
data frame with 0 columns and 0 rows
> f(,NULL)
Error in match(names(formals(data.frame))[-1L], col.names, 0L) : 
  argument "x" is missing, with no default
Calls: f -> match
> f(NULL,NULL)
data frame with 0 columns and 0 rows
> f(list())
data frame with 0 columns and 0 rows
> f(l0)
data frame with 0 columns and 0 rows
> f(c0)
data frame with 0 columns and 0 rows
> f(m0)
data frame with 0 columns and 0 rows
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
  FALSE.
1  FALSE
> f(list(),list())
data frame with 0 columns and 0 rows
> f(l0,l0)
data frame with 0 columns and 0 rows
> f(c0,c0)
data frame with 0 columns and 0 rows
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> do.call -> <Anonymous> -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<' not meaningful for factors
> f(FALSE,FALSE)
      FALSE.
FALSE  FALSE
> 
> ##  as.data.frame.logical  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.logical", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
[1] list()
<0 rows> (or 0-length row.names)
Warning message:
In f(list(), list()) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In f(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In f(df0, df0) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In f(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.matrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.matrix", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(list())
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(l0)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(c0)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(m0)
data frame with 0 columns and 0 rows
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(list(),list())
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(l0,l0)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(c0,c0)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> 
> ##  as.data.frame.model.matrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.model.matrix", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in if (n > 0) c(NA_integer_, -n) else integer() : 
  argument is of length zero
Calls: f -> .set_row_names
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in if (n > 0) c(NA_integer_, -n) else integer() : 
  argument is of length zero
Calls: f -> .set_row_names
> f(list())
Error in if (n > 0) c(NA_integer_, -n) else integer() : 
  argument is of length zero
Calls: f -> .set_row_names
> f(l0)
Error in if (n > 0) c(NA_integer_, -n) else integer() : 
  argument is of length zero
Calls: f -> .set_row_names
> f(c0)
Error in if (n > 0) c(NA_integer_, -n) else integer() : 
  argument is of length zero
Calls: f -> .set_row_names
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
[1] df0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in if (n > 0) c(NA_integer_, -n) else integer() : 
  argument is of length zero
Calls: f -> .set_row_names
> f(list(),list())
Error in if (n > 0) c(NA_integer_, -n) else integer() : 
  argument is of length zero
Calls: f -> .set_row_names
> f(l0,l0)
Error in if (n > 0) c(NA_integer_, -n) else integer() : 
  argument is of length zero
Calls: f -> .set_row_names
> f(c0,c0)
Error in if (n > 0) c(NA_integer_, -n) else integer() : 
  argument is of length zero
Calls: f -> .set_row_names
> f(df0,df0)
[1] df0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in if (n > 0) c(NA_integer_, -n) else integer() : 
  argument is of length zero
Calls: f -> .set_row_names
> 
> ##  as.data.frame.noquote  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.noquote", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
[1] list()
<0 rows> (or 0-length row.names)
Warning message:
In f(list(), list()) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In f(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In f(df0, df0) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In f(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.numeric  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.numeric", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
[1] list()
<0 rows> (or 0-length row.names)
Warning message:
In f(list(), list()) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In f(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In f(df0, df0) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In f(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.numeric_version", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
[1] list()
<0 rows> (or 0-length row.names)
Warning message:
In f(list(), list()) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In f(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In f(df0, df0) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In f(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.ordered  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.ordered", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
[1] list()
<0 rows> (or 0-length row.names)
Warning message:
In f(list(), list()) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In f(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In f(df0, df0) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In f(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.raw  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.raw", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
[1] list()
<0 rows> (or 0-length row.names)
Warning message:
In f(list(), list()) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In f(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In f(df0, df0) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In f(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.table  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.table", pos = 'package:base')
> f()
Error in provideDimnames(x, sep = sep, base = base) : 
  argument "x" is missing, with no default
Calls: f ... eval -> eval -> data.frame -> do.call -> provideDimnames
> f(NULL)
Error in provideDimnames(x, sep = sep, base = base) : 
  attempt to set an attribute on NULL
Calls: f ... eval -> eval -> data.frame -> do.call -> provideDimnames
> f(,NULL)
Error in provideDimnames(x, sep = sep, base = base) : 
  argument "x" is missing, with no default
Calls: f ... eval -> eval -> data.frame -> do.call -> provideDimnames
> f(NULL,NULL)
Error in provideDimnames(x, sep = sep, base = base) : 
  attempt to set an attribute on NULL
Calls: f ... eval -> eval -> data.frame -> do.call -> provideDimnames
> f(list())
Error in provideDimnames(x, sep = sep, base = base) : 
  'dimnames' applied to non-array
Calls: f ... eval -> eval -> data.frame -> do.call -> provideDimnames
> f(l0)
Error in provideDimnames(x, sep = sep, base = base) : 
  'dimnames' applied to non-array
Calls: f ... eval -> eval -> data.frame -> do.call -> provideDimnames
> f(c0)
Error in provideDimnames(x, sep = sep, base = base) : 
  'dimnames' applied to non-array
Calls: f ... eval -> eval -> data.frame -> do.call -> provideDimnames
> f(m0)
[1] Var2 Freq
<0 rows> (or 0-length row.names)
> f(df0)
[1] Var1 Var2 c0  
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in provideDimnames(x, sep = sep, base = base) : 
  'dimnames' applied to non-array
Calls: f ... eval -> eval -> data.frame -> do.call -> provideDimnames
> f(list(),list())
Error in provideDimnames(x, sep = sep, base = base) : 
  'dimnames' applied to non-array
Calls: f ... eval -> eval -> data.frame -> do.call -> provideDimnames
> f(l0,l0)
Error in provideDimnames(x, sep = sep, base = base) : 
  'dimnames' applied to non-array
Calls: f ... eval -> eval -> data.frame -> do.call -> provideDimnames
> f(c0,c0)
Error in provideDimnames(x, sep = sep, base = base) : 
  'dimnames' applied to non-array
Calls: f ... eval -> eval -> data.frame -> do.call -> provideDimnames
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f ... eval -> eval -> data.frame -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<' not meaningful for factors
> f(FALSE,FALSE)
Error in provideDimnames(x, sep = sep, base = base) : 
  'dimnames' applied to non-array
Calls: f ... eval -> eval -> data.frame -> do.call -> provideDimnames
> 
> ##  as.data.frame.ts  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.ts", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] x
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] x
<0 rows> (or 0-length row.names)
> f(list())
[1] x
<0 rows> (or 0-length row.names)
> f(l0)
[1] x
<0 rows> (or 0-length row.names)
> f(c0)
[1] x
<0 rows> (or 0-length row.names)
> f(m0)
data frame with 0 columns and 0 rows
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
      x
1 FALSE
> f(list(),list())
[1] x
<0 rows> (or 0-length row.names)
Warning message:
In as.data.frame.vector(x, ...) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] x
<0 rows> (or 0-length row.names)
Warning message:
In as.data.frame.vector(x, ...) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] x
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In as.data.frame.vector(x, ...) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
      x
1 FALSE
Warning message:
In as.data.frame.vector(x, ...) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.data.frame.vector  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.data.frame.vector", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
<0 rows> (or 0-length row.names)
> f(list())
[1] list()
<0 rows> (or 0-length row.names)
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
[1] m0
<0 rows> (or 0-length row.names)
> f(df0)
   V1
c0 NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
[1] list()
<0 rows> (or 0-length row.names)
Warning message:
In f(list(), list()) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(l0,l0)
[1] l0
<0 rows> (or 0-length row.names)
Warning message:
In f(l0, l0) :
  'row.names' is not a character vector of length 0 -- omitting it. Will be an error!
> f(c0,c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
   V1
c0 NA
Warning messages:
1: In f(df0, df0) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
2: In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
  FALSE
1 FALSE
Warning message:
In f(FALSE, FALSE) :
  'row.names' is not a character vector of length 1 -- omitting it. Will be an error!
> 
> ##  as.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.difftime", pos = 'package:base')
> f()
Error in f() : argument "tim" is missing, with no default
> f(NULL)
Error in f(NULL) : 'tim' is not character or numeric
> f(,NULL)
Error in f(, NULL) : argument "tim" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'tim' is not character or numeric
> f(list())
Error in f(list()) : 'tim' is not character or numeric
> f(l0)
Error in f(l0) : 'tim' is not character or numeric
> f(c0)
Time difference of  secs
> f(m0)
Error in f(m0) : need explicit units for numeric conversion
> f(df0)
Error in f(df0) : 'tim' is not character or numeric
> f(FALSE)
Error in f(FALSE) : 'tim' is not character or numeric
> f(list(),list())
Error in f(list(), list()) : 'tim' is not character or numeric
> f(l0,l0)
Error in f(l0, l0) : 'tim' is not character or numeric
> f(c0,c0)
Error in strptime(tim, format = format) : invalid 'x' argument
Calls: f -> difftime -> as.POSIXct -> strptime
> f(df0,df0)
Error in f(df0, df0) : 'tim' is not character or numeric
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'tim' is not character or numeric
> 
> ##  as.double  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.double", pos = 'package:base')
> f()
numeric(0)
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
numeric(0)
> f(list())
numeric(0)
> f(l0)
numeric(0)
> f(c0)
numeric(0)
> f(m0)
numeric(0)
> f(df0)
[1] NA
> f(FALSE)
[1] 0
> f(list(),list())
numeric(0)
> f(l0,l0)
numeric(0)
> f(c0,c0)
numeric(0)
> f(df0,df0)
[1] NA
> f(FALSE,FALSE)
[1] 0
> 
> ##  as.double.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.double.POSIXlt", pos = 'package:base')
> f()
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXct
> f(NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXct
> f(NULL,NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(l0)
numeric(0)
> f(c0)
numeric(0)
> f(m0)
Error in as.POSIXct.numeric(x) : 'origin' must be supplied
Calls: f -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(l0,l0)
numeric(0)
> f(c0,c0)
numeric(0)
> f(df0,df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> 
> ##  as.double.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.double.difftime", pos = 'package:base')
> f()
Error in as.vector(x, "double") : 
  argument "x" is missing, with no default
Calls: f -> as.vector
> f(NULL)
numeric(0)
> f(,NULL)
Error in if (units != "auto") units(x) <- units : 
  argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (units != "auto") units(x) <- units : 
  argument is of length zero
Calls: f
> f(list())
numeric(0)
> f(l0)
numeric(0)
> f(c0)
numeric(0)
> f(m0)
numeric(0)
> f(df0)
[1] NA
> f(FALSE)
[1] 0
> f(list(),list())
Error in if (units != "auto") units(x) <- units : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (units != "auto") units(x) <- units : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (units != "auto") units(x) <- units : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "logical"
Calls: f -> units<-
> 
> ##  as.environment  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.environment", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'as.environment' which requires 1
> f(NULL)
Error in f(NULL) : using 'as.environment(NULL)' is defunct
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'as.environment' which requires 1
> f(list())
<environment: 0x240c210>
> f(l0)
Error in f(l0) : invalid object for 'as.environment'
> f(c0)
Error in f(c0) : no item called "NA" on the search list
> f(m0)
Error in f(m0) : invalid 'pos' argument
> f(df0)
<environment: 0x240e550>
> f(FALSE)
Error in f(FALSE) : invalid object for 'as.environment'
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'as.environment' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 
  2 arguments passed to 'as.environment' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 
  2 arguments passed to 'as.environment' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'as.environment' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'as.environment' which requires 1
> 
> ##  as.expression  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.expression", pos = 'package:base')
> f()
Error in as.expression.default() : 
  argument "x" is missing, with no default
Calls: f -> as.expression.default
> f(NULL)
expression(NULL)
> f(,NULL)
Error in as.expression.default(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> as.expression.default
> f(NULL,NULL)
expression(NULL)
> f(list())
expression()
> f(l0)
expression()
> f(c0)
expression()
> f(m0)
expression()
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
expression(FALSE)
> f(list(),list())
expression()
> f(l0,l0)
expression()
> f(c0,c0)
expression()
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
expression(FALSE)
> 
> ##  as.expression.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.expression.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
expression(NULL)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
expression(NULL)
> f(list())
expression()
> f(l0)
expression()
> f(c0)
expression()
> f(m0)
expression()
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
expression(FALSE)
> f(list(),list())
expression()
> f(l0,l0)
expression()
> f(c0,c0)
expression()
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
expression(FALSE)
> 
> ##  as.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.factor", pos = 'package:base')
> f()
Error in is.factor(x) : argument "x" is missing, with no default
Calls: f -> is.factor
> f(NULL)
factor(0)
Levels: 
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(l0)
factor(0)
Levels: 
> f(c0)
factor(0)
Levels: 
> f(m0)
factor(0)
Levels: 
> f(df0)
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(FALSE)
[1] FALSE
Levels: FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  as.function  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.function", pos = 'package:base')
> f()
Error in as.function.default() : argument "x" is missing, with no default
Calls: f -> as.function.default
> f(NULL)
Error in as.function.default(x, envir) : 
  argument must have length at least 1
Calls: f -> as.function.default
> f(,NULL)
Error in as.function.default(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> as.function.default
> f(NULL,NULL)
Error in as.function.default(NULL, NULL) : 
  use of NULL environment is defunct
Calls: f -> as.function.default
> f(list())
Error in as.function.default(x, envir) : 
  argument must have length at least 1
Calls: f -> as.function.default
> f(l0)
Error in as.function.default(x, envir) : list argument expected
Calls: f -> as.function.default
> f(c0)
Error in as.function.default(x, envir) : list argument expected
Calls: f -> as.function.default
> f(m0)
Error in as.function.default(x, envir) : list argument expected
Calls: f -> as.function.default
> f(df0)
function () 
integer(0)
> f(FALSE)
Error in as.function.default(x, envir) : list argument expected
Calls: f -> as.function.default
> f(list(),list())
Error in as.function.default(x, envir) : invalid environment
Calls: f -> as.function.default
> f(l0,l0)
Error in as.function.default(x, envir) : list argument expected
Calls: f -> as.function.default
> f(c0,c0)
Error in as.function.default(x, envir) : list argument expected
Calls: f -> as.function.default
> f(df0,df0)
Error in as.function.default(x, envir) : invalid environment
Calls: f -> as.function.default
> f(FALSE,FALSE)
Error in as.function.default(x, envir) : list argument expected
Calls: f -> as.function.default
> 
> ##  as.function.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.function.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in as.function.default(x, envir) : 
  argument must have length at least 1
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : use of NULL environment is defunct
> f(list())
Error in as.function.default(x, envir) : 
  argument must have length at least 1
Calls: f
> f(l0)
Error in as.function.default(x, envir) : list argument expected
Calls: f
> f(c0)
Error in as.function.default(x, envir) : list argument expected
Calls: f
> f(m0)
Error in as.function.default(x, envir) : list argument expected
Calls: f
> f(df0)
function () 
integer(0)
> f(FALSE)
Error in as.function.default(x, envir) : list argument expected
Calls: f
> f(list(),list())
Error in as.function.default(x, envir) : invalid environment
Calls: f
> f(l0,l0)
Error in as.function.default(x, envir) : list argument expected
Calls: f
> f(c0,c0)
Error in as.function.default(x, envir) : list argument expected
Calls: f
> f(df0,df0)
Error in as.function.default(x, envir) : invalid environment
Calls: f
> f(FALSE,FALSE)
Error in as.function.default(x, envir) : list argument expected
Calls: f
> 
> ##  as.hexmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.hexmode", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'x' cannot be coerced to class "hexmode"
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : 'x' cannot be coerced to class "hexmode"
> f(l0)
Error in f(l0) : 'x' cannot be coerced to class "hexmode"
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
Error in f(df0) : 'x' cannot be coerced to class "hexmode"
> f(FALSE)
Error in f(FALSE) : 'x' cannot be coerced to class "hexmode"
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  as.integer  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.integer", pos = 'package:base')
> f()
integer(0)
> f(NULL)
integer(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
integer(0)
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
[1] NA
> f(FALSE)
[1] 0
> f(list(),list())
integer(0)
> f(l0,l0)
integer(0)
> f(c0,c0)
integer(0)
> f(df0,df0)
[1] NA
> f(FALSE,FALSE)
[1] 0
> 
> ##  as.list  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.list", pos = 'package:base')
> f()
Error in as.list.default() : argument "x" is missing, with no default
Calls: f -> as.list.default
> f(NULL)
list()
> f(,NULL)
Error in as.list.default(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> as.list.default
> f(NULL,NULL)
list()
> f(list())
list()
> f(l0)
list()
> f(c0)
list()
> f(m0)
list()
> f(df0)
$c0
factor(0)
Levels: 

> f(FALSE)
[[1]]
[1] FALSE

> f(list(),list())
list()
> f(l0,l0)
list()
> f(c0,c0)
list()
> f(df0,df0)
$c0
factor(0)
Levels: 

> f(FALSE,FALSE)
[[1]]
[1] FALSE

> 
> ##  as.list.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.list.Date", pos = 'package:base')
> f()
Error in lapply(seq_along(x), function(i) x[i]) : 
  argument "x" is missing, with no default
Calls: f -> lapply
> f(NULL)
list()
> f(,NULL)
Error in lapply(seq_along(x), function(i) x[i]) : 
  argument "x" is missing, with no default
Calls: f -> lapply
> f(NULL,NULL)
list()
> f(list())
list()
> f(l0)
list()
> f(c0)
list()
> f(m0)
list()
> f(df0)
[[1]]
[1] c0
<0 rows> (or 0-length row.names)

> f(FALSE)
[[1]]
[1] FALSE

> f(list(),list())
list()
> f(l0,l0)
list()
> f(c0,c0)
list()
> f(df0,df0)
[[1]]
[1] c0
<0 rows> (or 0-length row.names)

> f(FALSE,FALSE)
[[1]]
[1] FALSE

> 
> ##  as.list.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.list.POSIXct", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
list()
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
list()
> f(list())
list()
> f(l0)
list()
> f(c0)
list()
> f(m0)
list()
> f(df0)
$c0
NULL
<0 rows> (or 0-length row.names)

> f(FALSE)
[[1]]
[1] FALSE

> f(list(),list())
list()
> f(l0,l0)
list()
> f(c0,c0)
list()
> f(df0,df0)
$c0
NULL
<0 rows> (or 0-length row.names)

> f(FALSE,FALSE)
[[1]]
[1] FALSE

> 
> ##  as.list.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.list.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
$c0
factor(0)
Levels: 

> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
$c0
factor(0)
Levels: 

> f(FALSE,FALSE)
[1] FALSE
> 
> ##  as.list.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.list.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
list()
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
list()
> f(list())
list()
> f(l0)
list()
> f(c0)
list()
> f(m0)
list()
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[[1]]
[1] FALSE

> f(list(),list())
list()
> f(l0,l0)
list()
> f(c0,c0)
list()
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[[1]]
[1] FALSE

> 
> ##  as.list.environment  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.list.environment", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : use of NULL environment is defunct
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : use of NULL environment is defunct
> f(list())
Error in f(list()) : argument must be an environment
> f(l0)
Error in f(l0) : argument must be an environment
> f(c0)
Error in f(c0) : argument must be an environment
> f(m0)
Error in f(m0) : argument must be an environment
> f(df0)
Error in f(df0) : argument must be an environment
> f(FALSE)
Error in f(FALSE) : argument must be an environment
> f(list(),list())
Error in f(list(), list()) : argument must be an environment
> f(l0,l0)
Error in f(l0, l0) : argument must be an environment
> f(c0,c0)
Error in f(c0, c0) : argument must be an environment
> f(df0,df0)
Error in f(df0, df0) : argument must be an environment
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument must be an environment
> 
> ##  as.list.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.list.factor", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
list()
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
list()
> f(list())
list()
> f(l0)
list()
> f(c0)
list()
> f(m0)
list()
> f(df0)
[[1]]
[1] c0
<0 rows> (or 0-length row.names)

> f(FALSE)
[[1]]
[1] FALSE

> f(list(),list())
list()
> f(l0,l0)
list()
> f(c0,c0)
list()
> f(df0,df0)
[[1]]
[1] c0
<0 rows> (or 0-length row.names)

> f(FALSE,FALSE)
[[1]]
[1] FALSE

> 
> ##  as.list.function  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.list.function", pos = 'package:base')
> f()
Error in formals(x) : argument "x" is missing, with no default
Calls: f -> formals
> f(NULL)
[[1]]
NULL

> f(,NULL)
Error in formals(x) : argument "x" is missing, with no default
Calls: f -> formals
> f(NULL,NULL)
[[1]]
NULL

> f(list())
[[1]]
NULL

> f(l0)
[[1]]
NULL

> f(c0)
Error in get(fun, mode = "function", envir = parent.frame()) : 
  invalid first argument
Calls: f -> formals -> get
> f(m0)
[[1]]
NULL

> f(df0)
[[1]]
NULL

> f(FALSE)
[[1]]
NULL

> f(list(),list())
[[1]]
NULL

> f(l0,l0)
[[1]]
NULL

> f(c0,c0)
Error in get(fun, mode = "function", envir = parent.frame()) : 
  invalid first argument
Calls: f -> formals -> get
> f(df0,df0)
[[1]]
NULL

> f(FALSE,FALSE)
[[1]]
NULL

> 
> ##  as.list.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.list.numeric_version", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
list()
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
list()
> f(list())
list()
> f(l0)
list()
> f(c0)
list()
> f(m0)
list()
> f(df0)
$c0
NULL
<0 rows> (or 0-length row.names)

> f(FALSE)
[[1]]
[1] FALSE

> f(list(),list())
list()
> f(l0,l0)
list()
> f(c0,c0)
list()
> f(df0,df0)
$c0
NULL
<0 rows> (or 0-length row.names)

> f(FALSE,FALSE)
[[1]]
[1] FALSE

> 
> ##  as.logical  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.logical", pos = 'package:base')
> f()
logical(0)
> f(NULL)
logical(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
logical(0)
> f(list())
logical(0)
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
logical(0)
> f(df0)
[1] NA
> f(FALSE)
[1] FALSE
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
[1] NA
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  as.logical.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.logical.factor", pos = 'package:base')
> f()
Error in levels(x) : argument "x" is missing, with no default
Calls: f -> levels
> f(NULL)
logical(0)
> f(,NULL)
Error in levels(x) : argument "x" is missing, with no default
Calls: f -> levels
> f(NULL,NULL)
logical(0)
> f(list())
Error in as.logical(levels(x))[x] : invalid subscript type 'list'
Calls: f
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
logical(0)
> f(df0)
Error in as.logical(levels(x))[x] : invalid subscript type 'list'
Calls: f
> f(FALSE)
logical(0)
> f(list(),list())
Error in as.logical(levels(x))[x] : invalid subscript type 'list'
Calls: f
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in as.logical(levels(x))[x] : invalid subscript type 'list'
Calls: f
> f(FALSE,FALSE)
logical(0)
> 
> ##  as.matrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.matrix", pos = 'package:base')
> f()
Error in as.matrix.default() : argument "x" is missing, with no default
Calls: f -> as.matrix.default
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix.default(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> as.matrix.default
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix.default -> array
> f(list())
     [,1]
> f(l0)
     [,1]
> f(c0)
     [,1]
> f(m0)
<0 x 0 matrix>
> f(df0)
     c0
> f(FALSE)
      [,1]
[1,] FALSE
> f(list(),list())
     [,1]
> f(l0,l0)
     [,1]
> f(c0,c0)
     [,1]
> f(df0,df0)
     c0
> f(FALSE,FALSE)
      [,1]
[1,] FALSE
> 
> ##  as.matrix.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.matrix.POSIXlt", pos = 'package:base')
> f()
Error in as.data.frame(unclass(x)) : 
  argument "x" is missing, with no default
Calls: f -> as.matrix -> as.data.frame
> f(NULL)
<0 x 0 matrix>
> f(,NULL)
Error in as.data.frame(unclass(x)) : 
  argument "x" is missing, with no default
Calls: f -> as.matrix -> as.data.frame
> f(NULL,NULL)
Error in if (rownames.force %in% FALSE) NULL else if (rownames.force %in%  : 
  argument is of length zero
Calls: f -> as.matrix -> as.matrix.data.frame
> f(list())
<0 x 0 matrix>
> f(l0)
     unclass(x)
> f(c0)
     unclass(x)
> f(m0)
<0 x 0 matrix>
> f(df0)
     c0
> f(FALSE)
     unclass(x)
[1,]      FALSE
> f(list(),list())
Error in if (rownames.force %in% FALSE) NULL else if (rownames.force %in%  : 
  argument is of length zero
Calls: f -> as.matrix -> as.matrix.data.frame
> f(l0,l0)
Error in if (rownames.force %in% FALSE) NULL else if (rownames.force %in%  : 
  argument is of length zero
Calls: f -> as.matrix -> as.matrix.data.frame
> f(c0,c0)
Error in if (rownames.force %in% FALSE) NULL else if (rownames.force %in%  : 
  argument is of length zero
Calls: f -> as.matrix -> as.matrix.data.frame
> f(df0,df0)
     c0
> f(FALSE,FALSE)
     unclass(x)
[1,]      FALSE
> 
> ##  as.matrix.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.matrix.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in seq_len(p) : argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(p) : first element used of 'length.out' argument
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in if (rownames.force %in% FALSE) NULL else if (rownames.force %in%  : 
  argument is of length zero
Calls: f
> f(list())
Error in seq_len(p) : argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(p) : first element used of 'length.out' argument
> f(l0)
Error in seq_len(p) : argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(p) : first element used of 'length.out' argument
> f(c0)
Error in seq_len(p) : argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(p) : first element used of 'length.out' argument
> f(m0)
<0 x 0 matrix>
> f(df0)
     c0
> f(FALSE)
Error in seq_len(p) : argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(p) : first element used of 'length.out' argument
> f(list(),list())
Error in if (rownames.force %in% FALSE) NULL else if (rownames.force %in%  : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (rownames.force %in% FALSE) NULL else if (rownames.force %in%  : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (rownames.force %in% FALSE) NULL else if (rownames.force %in%  : 
  argument is of length zero
Calls: f
> f(df0,df0)
     c0
> f(FALSE,FALSE)
Error in seq_len(p) : argument must be coercible to non-negative integer
Calls: f
In addition: Warning message:
In seq_len(p) : first element used of 'length.out' argument
> 
> ##  as.matrix.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.matrix.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> array
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> array
> f(list())
     [,1]
> f(l0)
     [,1]
> f(c0)
     [,1]
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in `dimnames<-.data.frame`(`*tmp*`, value = dimnames) : 
  invalid 'dimnames' given for data frame
Calls: f -> array -> dimnames<- -> dimnames<-.data.frame
> f(FALSE)
      [,1]
[1,] FALSE
> f(list(),list())
     [,1]
> f(l0,l0)
     [,1]
> f(c0,c0)
     [,1]
> f(df0,df0)
Error in `dimnames<-.data.frame`(`*tmp*`, value = dimnames) : 
  invalid 'dimnames' given for data frame
Calls: f -> array -> dimnames<- -> dimnames<-.data.frame
> f(FALSE,FALSE)
      [,1]
[1,] FALSE
> 
> ##  as.matrix.noquote  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.matrix.noquote", pos = 'package:base')
> f()
Error in NextMethod("as.matrix", x) : object not specified
Calls: f -> noquote -> NextMethod
> f(NULL)
Error in NextMethod("as.matrix", x) : object not specified
Calls: f -> noquote -> NextMethod
> f(,NULL)
Error in NextMethod("as.matrix", x) : object not specified
Calls: f -> noquote -> NextMethod
> f(NULL,NULL)
Error in NextMethod("as.matrix", x) : object not specified
Calls: f -> noquote -> NextMethod
> f(list())
Error in NextMethod("as.matrix", x) : object not specified
Calls: f -> noquote -> NextMethod
> f(l0)
Error in NextMethod("as.matrix", x) : object not specified
Calls: f -> noquote -> NextMethod
> f(c0)
Error in NextMethod("as.matrix", x) : object not specified
Calls: f -> noquote -> NextMethod
> f(m0)
Error in NextMethod("as.matrix", x) : object not specified
Calls: f -> noquote -> NextMethod
> f(df0)
     c0
> f(FALSE)
Error in NextMethod("as.matrix", x) : object not specified
Calls: f -> noquote -> NextMethod
> f(list(),list())
Error in NextMethod("as.matrix", x) : object not specified
Calls: f -> noquote -> NextMethod
> f(l0,l0)
Error in NextMethod("as.matrix", x) : object not specified
Calls: f -> noquote -> NextMethod
> f(c0,c0)
Error in NextMethod("as.matrix", x) : object not specified
Calls: f -> noquote -> NextMethod
> f(df0,df0)
     c0
> f(FALSE,FALSE)
Error in NextMethod("as.matrix", x) : object not specified
Calls: f -> noquote -> NextMethod
> 
> ##  as.name  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.name", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid type/length (symbol/0) in vector allocation
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid type/length (symbol/0) in vector allocation
> f(l0)
Error in f(l0) : invalid data of mode 'logical' (too short)
> f(c0)
Error in f(c0) : invalid data of mode 'character' (too short)
> f(m0)
Error in f(m0) : invalid data of mode 'double' (too short)
> f(df0)
Error in f(df0) : invalid type/length (symbol/1) in vector allocation
> f(FALSE)
`FALSE`
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  as.null  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.null", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
NULL
> f(l0,l0)
NULL
> f(c0,c0)
NULL
> f(df0,df0)
NULL
> f(FALSE,FALSE)
NULL
> 
> ##  as.null.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.null.default", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
NULL
> f(l0,l0)
NULL
> f(c0,c0)
NULL
> f(df0,df0)
NULL
> f(FALSE,FALSE)
NULL
> 
> ##  as.numeric  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.numeric", pos = 'package:base')
> f()
numeric(0)
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
numeric(0)
> f(list())
numeric(0)
> f(l0)
numeric(0)
> f(c0)
numeric(0)
> f(m0)
numeric(0)
> f(df0)
[1] NA
> f(FALSE)
[1] 0
> f(list(),list())
numeric(0)
> f(l0,l0)
numeric(0)
> f(c0,c0)
numeric(0)
> f(df0,df0)
[1] NA
> f(FALSE,FALSE)
[1] 0
> 
> ##  as.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.numeric_version", pos = 'package:base')
> f()
Error in is.numeric_version(x) : argument "x" is missing, with no default
Calls: f -> is.numeric_version
> f(NULL)
<0 elements>
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
<0 elements>
> f(l0)
<0 elements>
> f(c0)
<0 elements>
> f(m0)
<0 elements>
> f(df0)
Error: invalid version specification 'integer(0)'
> f(FALSE)
Error: invalid version specification 'FALSE'
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  as.octmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.octmode", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'x' cannot be coerced to class "octmode"
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : 'x' cannot be coerced to class "octmode"
> f(l0)
Error in f(l0) : 'x' cannot be coerced to class "octmode"
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
Error in f(df0) : 'x' cannot be coerced to class "octmode"
> f(FALSE)
Error in f(FALSE) : 'x' cannot be coerced to class "octmode"
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  as.ordered  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.ordered", pos = 'package:base')
> f()
Error in is.ordered(x) : argument "x" is missing, with no default
Calls: f -> is.ordered
> f(NULL)
ordered(0)
Levels: 
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> ordered -> factor -> sort.list
> f(l0)
ordered(0)
Levels: 
> f(c0)
ordered(0)
Levels: 
> f(m0)
ordered(0)
Levels: 
> f(df0)
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> ordered -> factor -> sort.list
> f(FALSE)
[1] FALSE
Levels: FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  as.package_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.package_version", pos = 'package:base')
> f()
Error in is.package_version(x) : argument "x" is missing, with no default
Calls: f -> is.package_version
> f(NULL)
<0 elements>
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
<0 elements>
> f(l0)
<0 elements>
> f(c0)
<0 elements>
> f(m0)
<0 elements>
> f(df0)
Error: invalid version specification 'integer(0)'
> f(FALSE)
Error: invalid version specification 'FALSE'
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  as.pairlist  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.pairlist", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[[1]]
[1] FALSE

> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  as.qr  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.qr", pos = 'package:base')
> f()
Error in f() : you cannot be serious
> f(NULL)
Error in f(NULL) : you cannot be serious
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : you cannot be serious
> f(l0)
Error in f(l0) : you cannot be serious
> f(c0)
Error in f(c0) : you cannot be serious
> f(m0)
Error in f(m0) : you cannot be serious
> f(df0)
Error in f(df0) : you cannot be serious
> f(FALSE)
Error in f(FALSE) : you cannot be serious
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  as.raw  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.raw", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'as.raw' which requires 1
> f(NULL)
raw(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'as.raw' which requires 1
> f(list())
raw(0)
> f(l0)
raw(0)
> f(c0)
raw(0)
> f(m0)
raw(0)
> f(df0)
[1] 00
Warning message:
out-of-range values treated as 0 in coercion to raw 
> f(FALSE)
[1] 00
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'as.raw' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'as.raw' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'as.raw' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'as.raw' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'as.raw' which requires 1
> 
> ##  as.single  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.single", pos = 'package:base')
> f()
Error in structure(.Internal(as.vector(x, "double")), Csingle = TRUE) : 
  argument "x" is missing, with no default
Calls: f -> as.single.default -> structure
> f(NULL)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(,NULL)
Error in structure(.Internal(as.vector(x, "double")), Csingle = TRUE) : 
  argument "x" is missing, with no default
Calls: f -> as.single.default -> structure
> f(NULL,NULL)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(list())
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(l0)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(c0)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(m0)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(df0)
[1] NA
attr(,"Csingle")
[1] TRUE
> f(FALSE)
[1] 0
attr(,"Csingle")
[1] TRUE
> f(list(),list())
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(l0,l0)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(c0,c0)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(df0,df0)
[1] NA
attr(,"Csingle")
[1] TRUE
> f(FALSE,FALSE)
[1] 0
attr(,"Csingle")
[1] TRUE
> 
> ##  as.single.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.single.default", pos = 'package:base')
> f()
Error in structure(.Internal(as.vector(x, "double")), Csingle = TRUE) : 
  argument "x" is missing, with no default
Calls: f -> structure
> f(NULL)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(,NULL)
Error in structure(.Internal(as.vector(x, "double")), Csingle = TRUE) : 
  argument "x" is missing, with no default
Calls: f -> structure
> f(NULL,NULL)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(list())
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(l0)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(c0)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(m0)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(df0)
[1] NA
attr(,"Csingle")
[1] TRUE
> f(FALSE)
[1] 0
attr(,"Csingle")
[1] TRUE
> f(list(),list())
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(l0,l0)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(c0,c0)
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(df0,df0)
[1] NA
attr(,"Csingle")
[1] TRUE
> f(FALSE,FALSE)
[1] 0
attr(,"Csingle")
[1] TRUE
> 
> ##  as.symbol  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.symbol", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid type/length (symbol/0) in vector allocation
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid type/length (symbol/0) in vector allocation
> f(l0)
Error in f(l0) : invalid data of mode 'logical' (too short)
> f(c0)
Error in f(c0) : invalid data of mode 'character' (too short)
> f(m0)
Error in f(m0) : invalid data of mode 'double' (too short)
> f(df0)
Error in f(df0) : invalid type/length (symbol/1) in vector allocation
> f(FALSE)
`FALSE`
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  as.table  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.table", pos = 'package:base')
> f()
Error in is.table(x) : argument "x" is missing, with no default
Calls: f -> as.table.default -> is.table
> f(NULL)
Error in as.table.default(NULL) : cannot coerce to a table
Calls: f -> as.table.default
> f(,NULL)
Error in is.table(x) : argument "x" is missing, with no default
Calls: f -> as.table.default -> is.table
> f(NULL,NULL)
Error in as.table.default(NULL, NULL) : cannot coerce to a table
Calls: f -> as.table.default
> f(list())
Error in as.table.default(list()) : cannot coerce to a table
Calls: f -> as.table.default
> f(l0)
Error in as.table.default(l0) : cannot coerce to a table
Calls: f -> as.table.default
> f(c0)
Error in as.table.default(c0) : cannot coerce to a table
Calls: f -> as.table.default
> f(m0)
< table of extent 0 x 0 >
> f(df0)
Error in as.table.default(df0) : cannot coerce to a table
Calls: f -> as.table.default
> f(FALSE)
Error in as.table.default(FALSE) : cannot coerce to a table
Calls: f -> as.table.default
> f(list(),list())
Error in as.table.default(list(), list()) : cannot coerce to a table
Calls: f -> as.table.default
> f(l0,l0)
Error in as.table.default(l0, l0) : cannot coerce to a table
Calls: f -> as.table.default
> f(c0,c0)
Error in as.table.default(c0, c0) : cannot coerce to a table
Calls: f -> as.table.default
> f(df0,df0)
Error in as.table.default(df0, df0) : cannot coerce to a table
Calls: f -> as.table.default
> f(FALSE,FALSE)
Error in as.table.default(FALSE, FALSE) : cannot coerce to a table
Calls: f -> as.table.default
> 
> ##  as.table.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.table.default", pos = 'package:base')
> f()
Error in is.table(x) : argument "x" is missing, with no default
Calls: f -> is.table
> f(NULL)
Error in f(NULL) : cannot coerce to a table
> f(,NULL)
Error in is.table(x) : argument "x" is missing, with no default
Calls: f -> is.table
> f(NULL,NULL)
Error in f(NULL, NULL) : cannot coerce to a table
> f(list())
Error in f(list()) : cannot coerce to a table
> f(l0)
Error in f(l0) : cannot coerce to a table
> f(c0)
Error in f(c0) : cannot coerce to a table
> f(m0)
< table of extent 0 x 0 >
> f(df0)
Error in f(df0) : cannot coerce to a table
> f(FALSE)
Error in f(FALSE) : cannot coerce to a table
> f(list(),list())
Error in f(list(), list()) : cannot coerce to a table
> f(l0,l0)
Error in f(l0, l0) : cannot coerce to a table
> f(c0,c0)
Error in f(c0, c0) : cannot coerce to a table
> f(df0,df0)
Error in f(df0, df0) : cannot coerce to a table
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : cannot coerce to a table
> 
> ##  as.vector  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.vector", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in as.vector(x, mode) : invalid 'mode' argument
Calls: f
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in as.vector(x, mode) : invalid 'mode' argument
Calls: f
> f(l0,l0)
Error in as.vector(x, mode) : invalid 'mode' argument
Calls: f
> f(c0,c0)
Error in as.vector(x, mode) : invalid 'mode' argument
Calls: f
> f(df0,df0)
Error in as.vector(x, mode) : invalid 'mode' argument
Calls: f
> f(FALSE,FALSE)
Error in as.vector(x, mode) : invalid 'mode' argument
Calls: f
> 
> ##  as.vector.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.vector.factor", pos = 'package:base')
> f()
Error in levels(x) : argument "x" is missing, with no default
Calls: f -> as.vector -> levels
> f(NULL)
NULL
> f(,NULL)
Error in if (mode == "list") as.list(x) else if (mode == "any" || mode ==  : 
  argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (mode == "list") as.list(x) else if (mode == "any" || mode ==  : 
  argument is of length zero
Calls: f
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
Error in if (mode == "list") as.list(x) else if (mode == "any" || mode ==  : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (mode == "list") as.list(x) else if (mode == "any" || mode ==  : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (mode == "list") as.list(x) else if (mode == "any" || mode ==  : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
Error in as.vector(x, mode) : invalid 'mode' argument
Calls: f -> as.vector
> 
> ##  asNamespace  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("asNamespace", pos = 'package:base')
> f()
Error in f() : argument "ns" is missing, with no default
> f(NULL)
Error in f(NULL) : not a namespace
> f(,NULL)
Error in f(, NULL) : argument "ns" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : not a namespace
> f(list())
Error in f(list()) : not a namespace
> f(l0)
Error in f(l0) : not a namespace
> f(c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> getNamespace
> f(m0)
Error in f(m0) : not a namespace
> f(df0)
Error in f(df0) : not a namespace
> f(FALSE)
Error in f(FALSE) : not a namespace
> f(list(),list())
Error in f(list(), list()) : not a namespace
> f(l0,l0)
Error in f(l0, l0) : not a namespace
> f(c0,c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> getNamespace
> f(df0,df0)
Error in f(df0, df0) : not a namespace
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : not a namespace
> 
> ##  asS3  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("asS3", pos = 'package:base')
> f()
Error in f() : argument "object" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'flag' argument
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : invalid 'flag' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'flag' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'flag' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'flag' argument
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  asin  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("asin", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'asin' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'asin' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'asin' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'asin' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'asin' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'asin' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'asin' which requires 1
> 
> ##  asinh  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("asinh", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'asinh' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'asinh' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'asinh' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'asinh' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'asinh' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'asinh' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'asinh' which requires 1
> 
> ##  assign  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("assign", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid first argument
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid first argument
> f(l0,l0)
Error in f(l0, l0) : invalid first argument
> f(c0,c0)
Error in f(c0, c0) : invalid first argument
> f(df0,df0)
Error in f(df0, df0) : invalid first argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid first argument
> 
> ##  atan  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("atan", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'atan' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'atan' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'atan' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'atan' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'atan' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'atan' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'atan' which requires 1
> 
> ##  atan2  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("atan2", pos = 'package:base')
> f()
Error in f() : argument "y" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "x" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "y" is missing, with no default
> f(NULL,NULL)
Error in atan2(y, x) : non-numeric argument to mathematical function
Calls: f
> f(list())
Error in f(list()) : argument "x" is missing, with no default
> f(l0)
Error in f(l0) : argument "x" is missing, with no default
> f(c0)
Error in f(c0) : argument "x" is missing, with no default
> f(m0)
Error in f(m0) : argument "x" is missing, with no default
> f(df0)
Error in f(df0) : argument "x" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "x" is missing, with no default
> f(list(),list())
Error in atan2(y, x) : non-numeric argument to mathematical function
Calls: f
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in atan2(y, x) : non-numeric argument to mathematical function
Calls: f
> f(df0,df0)
Error in atan2(y, x) : non-numeric argument to mathematical function
Calls: f
> f(FALSE,FALSE)
[1] 0
> 
> ##  atanh  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("atanh", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'atanh' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'atanh' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'atanh' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'atanh' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'atanh' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'atanh' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'atanh' which requires 1
> 
> ##  attach  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("attach", pos = 'package:base')
> f()
Error in f() : argument "what" is missing, with no default
> f(NULL)
> f(,NULL)
Error in if (pos == 1L) { : argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (pos == 1L) { : argument is of length zero
Calls: f
> f(list())
> f(l0)
Error in f(l0) : 
  'attach' only works for lists, data frames and environments
> f(c0)
Error in f(c0) : 
  'attach' only works for lists, data frames and environments
> f(m0)
Error in f(m0) : 
  'attach' only works for lists, data frames and environments
> f(df0)
The following object is masked _by_ .GlobalEnv:

    c0

> f(FALSE)
Error in f(FALSE) : 
  'attach' only works for lists, data frames and environments
> f(list(),list())
Error in if (pos == 1L) { : argument is of length zero
Calls: f
> f(l0,l0)
Error in if (pos == 1L) { : argument is of length zero
Calls: f
> f(c0,c0)
Error in if (pos == 1L) { : argument is of length zero
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'attach' only works for lists, data frames and environments
> 
> ##  attachNamespace  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("attachNamespace", pos = 'package:base')
> f()
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(NULL)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(,NULL)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(NULL,NULL)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(list())
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(l0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> asNamespace -> getNamespace
> f(m0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(df0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(FALSE)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(list(),list())
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(l0,l0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(c0,c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> asNamespace -> getNamespace
> f(df0,df0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(FALSE,FALSE)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> 
> ##  attr  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("attr", pos = 'package:base')
> f()
Error in f() : either 2 or 3 arguments are required
> f(NULL)
Error in f(NULL) : either 2 or 3 arguments are required
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 'which' must be of mode character
> f(list())
Error in f(list()) : either 2 or 3 arguments are required
> f(l0)
Error in f(l0) : either 2 or 3 arguments are required
> f(c0)
Error in f(c0) : either 2 or 3 arguments are required
> f(m0)
Error in f(m0) : either 2 or 3 arguments are required
> f(df0)
Error in f(df0) : either 2 or 3 arguments are required
> f(FALSE)
Error in f(FALSE) : either 2 or 3 arguments are required
> f(list(),list())
Error in f(list(), list()) : 'which' must be of mode character
> f(l0,l0)
Error in f(l0, l0) : 'which' must be of mode character
> f(c0,c0)
Error in f(c0, c0) : exactly one attribute 'which' must be given
> f(df0,df0)
Error in f(df0, df0) : 'which' must be of mode character
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'which' must be of mode character
> 
> ##  attr.all.equal  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("attr.all.equal", pos = 'package:base')
> f()
Error in mode(target) : argument "target" is missing, with no default
Calls: f -> mode
> f(NULL)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(,NULL)
Error in mode(target) : argument "target" is missing, with no default
Calls: f -> mode
> f(NULL,NULL)
NULL
> f(list())
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(l0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(c0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(m0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(df0)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(FALSE)
Error in mode(current) : argument "current" is missing, with no default
Calls: f -> mode
> f(list(),list())
NULL
> f(l0,l0)
NULL
> f(c0,c0)
NULL
> f(df0,df0)
NULL
> f(FALSE,FALSE)
NULL
> 
> ##  attr<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("attr<-", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'attr<-' which requires 3
> f(NULL)
Error in f(NULL) : 1 argument passed to 'attr<-' which requires 3
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'attr<-' which requires 3
> f(list())
Error in f(list()) : 1 argument passed to 'attr<-' which requires 3
> f(l0)
Error in f(l0) : 1 argument passed to 'attr<-' which requires 3
> f(c0)
Error in f(c0) : 1 argument passed to 'attr<-' which requires 3
> f(m0)
Error in f(m0) : 1 argument passed to 'attr<-' which requires 3
> f(df0)
Error in f(df0) : 1 argument passed to 'attr<-' which requires 3
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'attr<-' which requires 3
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'attr<-' which requires 3
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'attr<-' which requires 3
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'attr<-' which requires 3
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'attr<-' which requires 3
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'attr<-' which requires 3
> 
> ##  attributes  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("attributes", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'attributes' which requires 1
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'attributes' which requires 1
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
$dim
[1] 0 0

> f(df0)
$names
[1] "c0"

$row.names
character(0)

$class
[1] "data.frame"

> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'attributes' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'attributes' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'attributes' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'attributes' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'attributes' which requires 1
> 
> ##  attributes<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("attributes<-", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'attributes<-' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to 'attributes<-' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : 1 argument passed to 'attributes<-' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to 'attributes<-' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to 'attributes<-' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to 'attributes<-' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to 'attributes<-' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'attributes<-' which requires 2
> f(list(),list())
list()
> f(l0,l0)
Error: attributes must be a list or NULL
> f(c0,c0)
Error: attributes must be a list or NULL
> f(df0,df0)
[[1]]
factor(0)
Levels: 

attr(,"c0")
factor(0)
Levels: 
> f(FALSE,FALSE)
Error: attributes must be a list or NULL
> 
> ##  autoload  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("autoload", pos = 'package:base')
> f()
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  argument "name" is missing, with no default
Calls: f -> exists
> f(NULL)
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  invalid first argument
Calls: f -> exists
> f(,NULL)
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  argument "name" is missing, with no default
Calls: f -> exists
> f(NULL,NULL)
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  invalid first argument
Calls: f -> exists
> f(list())
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  invalid first argument
Calls: f -> exists
> f(l0)
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  invalid first argument
Calls: f -> exists
> f(c0)
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  invalid first argument
Calls: f -> exists
> f(m0)
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  invalid first argument
Calls: f -> exists
> f(df0)
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  invalid first argument
Calls: f -> exists
> f(FALSE)
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  invalid first argument
Calls: f -> exists
> f(list(),list())
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  invalid first argument
Calls: f -> exists
> f(l0,l0)
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  invalid first argument
Calls: f -> exists
> f(c0,c0)
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  invalid first argument
Calls: f -> exists
> f(df0,df0)
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  invalid first argument
Calls: f -> exists
> f(FALSE,FALSE)
Error in exists(name, envir = .GlobalEnv, inherits = FALSE) : 
  invalid first argument
Calls: f -> exists
> 
> ##  autoloader  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("autoloader", pos = 'package:base')
> f()
Error in paste0(name, "") : argument "name" is missing, with no default
Calls: f -> paste0
> f(NULL)
Error in rm(list = name, envir = .AutoloadEnv, inherits = FALSE) : 
  attempt to use zero-length variable name
Calls: f -> rm
> f(,NULL)
Error in paste0(name, "") : argument "name" is missing, with no default
Calls: f -> paste0
> f(NULL,NULL)
Error in rm(list = name, envir = .AutoloadEnv, inherits = FALSE) : 
  attempt to use zero-length variable name
Calls: f -> rm
> f(list())
Error in rm(list = name, envir = .AutoloadEnv, inherits = FALSE) : 
  attempt to use zero-length variable name
Calls: f -> rm
> f(l0)
Error in rm(list = name, envir = .AutoloadEnv, inherits = FALSE) : 
  attempt to use zero-length variable name
Calls: f -> rm
> f(c0)
Error in rm(list = name, envir = .AutoloadEnv, inherits = FALSE) : 
  attempt to use zero-length variable name
Calls: f -> rm
> f(m0)
Error in rm(list = name, envir = .AutoloadEnv, inherits = FALSE) : 
  attempt to use zero-length variable name
Calls: f -> rm
> f(df0)
Error in eval(expr, envir, enclos) : 
  argument "package" is missing, with no default
Calls: f -> autoload -> eval -> eval
In addition: Warning message:
In rm(list = name, envir = .AutoloadEnv, inherits = FALSE) :
  object 'integer(0)' not found
> f(FALSE)
Error in eval(expr, envir, enclos) : 
  argument "package" is missing, with no default
Calls: f -> autoload -> eval -> eval
In addition: Warning message:
In rm(list = name, envir = .AutoloadEnv, inherits = FALSE) :
  object 'FALSE' not found
> f(list(),list())
Error in rm(list = name, envir = .AutoloadEnv, inherits = FALSE) : 
  attempt to use zero-length variable name
Calls: f -> rm
> f(l0,l0)
Error in rm(list = name, envir = .AutoloadEnv, inherits = FALSE) : 
  attempt to use zero-length variable name
Calls: f -> rm
> f(c0,c0)
Error in rm(list = name, envir = .AutoloadEnv, inherits = FALSE) : 
  attempt to use zero-length variable name
Calls: f -> rm
> f(df0,df0)
Error in library(package = df0) : there is no package called 'df0'
Calls: f -> eval -> eval -> library
In addition: Warning message:
In rm(list = name, envir = .AutoloadEnv, inherits = FALSE) :
  object 'integer(0)' not found
> f(FALSE,FALSE)
Error in library(package = FALSE) : there is no package called 'FALSE'
Calls: f -> eval -> eval -> library
In addition: Warning message:
In rm(list = name, envir = .AutoloadEnv, inherits = FALSE) :
  object 'FALSE' not found
> 
> ##  backsolve  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("backsolve", pos = 'package:base')
> f()
Error in as.matrix(r) : argument "r" is missing, with no default
Calls: f -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(r) : argument "r" is missing, with no default
Calls: f -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(list())
Error in f(list()) : argument "x" is missing, with no default
> f(l0)
Error in f(l0) : argument "x" is missing, with no default
> f(c0)
Error in f(c0) : argument "x" is missing, with no default
> f(m0)
Error in f(m0) : argument "x" is missing, with no default
> f(df0)
Error in f(df0) : argument "x" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "x" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'k' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'k' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'k' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'k' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  singular matrix in 'backsolve'. First zero in diagonal [1]
> 
> ##  baseenv  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("baseenv", pos = 'package:base')
> f()
<environment: base>
> f(NULL)
Error in f(NULL) : 1 argument passed to 'baseenv' which requires 0
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'baseenv' which requires 0
> f(list())
Error in f(list()) : 1 argument passed to 'baseenv' which requires 0
> f(l0)
Error in f(l0) : 1 argument passed to 'baseenv' which requires 0
> f(c0)
Error in f(c0) : 1 argument passed to 'baseenv' which requires 0
> f(m0)
Error in f(m0) : 1 argument passed to 'baseenv' which requires 0
> f(df0)
Error in f(df0) : 1 argument passed to 'baseenv' which requires 0
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'baseenv' which requires 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'baseenv' which requires 0
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'baseenv' which requires 0
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'baseenv' which requires 0
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'baseenv' which requires 0
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'baseenv' which requires 0
> 
> ##  basename  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("basename", pos = 'package:base')
> f()
Error in f() : argument "path" is missing, with no default
> f(NULL)
Error in f(NULL) : a character vector argument expected
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : a character vector argument expected
> f(l0)
Error in f(l0) : a character vector argument expected
> f(c0)
character(0)
> f(m0)
Error in f(m0) : a character vector argument expected
> f(df0)
Error in f(df0) : a character vector argument expected
> f(FALSE)
Error in f(FALSE) : a character vector argument expected
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  besselI  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("besselI", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "nu" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in besselI(x, nu, 1 + as.logical(expon.scaled)) : 
  non-numeric argument to mathematical function
Calls: f
> f(list())
Error in f(list()) : argument "nu" is missing, with no default
> f(l0)
Error in f(l0) : argument "nu" is missing, with no default
> f(c0)
Error in f(c0) : argument "nu" is missing, with no default
> f(m0)
Error in f(m0) : argument "nu" is missing, with no default
> f(df0)
Error in f(df0) : argument "nu" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "nu" is missing, with no default
> f(list(),list())
Error in besselI(x, nu, 1 + as.logical(expon.scaled)) : 
  non-numeric argument to mathematical function
Calls: f
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in besselI(x, nu, 1 + as.logical(expon.scaled)) : 
  non-numeric argument to mathematical function
Calls: f
> f(df0,df0)
Error in besselI(x, nu, 1 + as.logical(expon.scaled)) : 
  non-numeric argument to mathematical function
Calls: f
> f(FALSE,FALSE)
[1] 1
> 
> ##  besselJ  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("besselJ", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "nu" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in besselJ(x, nu) : non-numeric argument to mathematical function
Calls: f
> f(list())
Error in f(list()) : argument "nu" is missing, with no default
> f(l0)
Error in f(l0) : argument "nu" is missing, with no default
> f(c0)
Error in f(c0) : argument "nu" is missing, with no default
> f(m0)
Error in f(m0) : argument "nu" is missing, with no default
> f(df0)
Error in f(df0) : argument "nu" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "nu" is missing, with no default
> f(list(),list())
Error in besselJ(x, nu) : non-numeric argument to mathematical function
Calls: f
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in besselJ(x, nu) : non-numeric argument to mathematical function
Calls: f
> f(df0,df0)
Error in besselJ(x, nu) : non-numeric argument to mathematical function
Calls: f
> f(FALSE,FALSE)
[1] 1
> 
> ##  besselK  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("besselK", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "nu" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in besselK(x, nu, 1 + as.logical(expon.scaled)) : 
  non-numeric argument to mathematical function
Calls: f
> f(list())
Error in f(list()) : argument "nu" is missing, with no default
> f(l0)
Error in f(l0) : argument "nu" is missing, with no default
> f(c0)
Error in f(c0) : argument "nu" is missing, with no default
> f(m0)
Error in f(m0) : argument "nu" is missing, with no default
> f(df0)
Error in f(df0) : argument "nu" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "nu" is missing, with no default
> f(list(),list())
Error in besselK(x, nu, 1 + as.logical(expon.scaled)) : 
  non-numeric argument to mathematical function
Calls: f
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in besselK(x, nu, 1 + as.logical(expon.scaled)) : 
  non-numeric argument to mathematical function
Calls: f
> f(df0,df0)
Error in besselK(x, nu, 1 + as.logical(expon.scaled)) : 
  non-numeric argument to mathematical function
Calls: f
> f(FALSE,FALSE)
[1] Inf
> 
> ##  besselY  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("besselY", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "nu" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in besselY(x, nu) : non-numeric argument to mathematical function
Calls: f
> f(list())
Error in f(list()) : argument "nu" is missing, with no default
> f(l0)
Error in f(l0) : argument "nu" is missing, with no default
> f(c0)
Error in f(c0) : argument "nu" is missing, with no default
> f(m0)
Error in f(m0) : argument "nu" is missing, with no default
> f(df0)
Error in f(df0) : argument "nu" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "nu" is missing, with no default
> f(list(),list())
Error in besselY(x, nu) : non-numeric argument to mathematical function
Calls: f
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in besselY(x, nu) : non-numeric argument to mathematical function
Calls: f
> f(df0,df0)
Error in besselY(x, nu) : non-numeric argument to mathematical function
Calls: f
> f(FALSE,FALSE)
[1] -Inf
> 
> ##  beta  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("beta", pos = 'package:base')
> f()
Error in f() : argument "a" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "b" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "a" is missing, with no default
> f(NULL,NULL)
Error in beta(a, b) : non-numeric argument to mathematical function
Calls: f
> f(list())
Error in f(list()) : argument "b" is missing, with no default
> f(l0)
Error in f(l0) : argument "b" is missing, with no default
> f(c0)
Error in f(c0) : argument "b" is missing, with no default
> f(m0)
Error in f(m0) : argument "b" is missing, with no default
> f(df0)
Error in f(df0) : argument "b" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "b" is missing, with no default
> f(list(),list())
Error in beta(a, b) : non-numeric argument to mathematical function
Calls: f
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in beta(a, b) : non-numeric argument to mathematical function
Calls: f
> f(df0,df0)
Error in beta(a, b) : non-numeric argument to mathematical function
Calls: f
> f(FALSE,FALSE)
[1] Inf
> 
> ##  bindingIsActive  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("bindingIsActive", pos = 'package:base')
> f()
Error in f() : argument "sym" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "env" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "sym" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : not a symbol
> f(list())
Error in f(list()) : argument "env" is missing, with no default
> f(l0)
Error in f(l0) : argument "env" is missing, with no default
> f(c0)
Error in as.name(sym) : invalid data of mode 'character' (too short)
Calls: f -> as.name
> f(m0)
Error in f(m0) : argument "env" is missing, with no default
> f(df0)
Error in f(df0) : argument "env" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "env" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : not a symbol
> f(l0,l0)
Error in f(l0, l0) : not a symbol
> f(c0,c0)
Error in as.name(sym) : invalid data of mode 'character' (too short)
Calls: f -> as.name
> f(df0,df0)
Error in f(df0, df0) : not a symbol
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : not a symbol
> 
> ##  bindingIsLocked  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("bindingIsLocked", pos = 'package:base')
> f()
Error in f() : argument "sym" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "env" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "sym" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : not a symbol
> f(list())
Error in f(list()) : argument "env" is missing, with no default
> f(l0)
Error in f(l0) : argument "env" is missing, with no default
> f(c0)
Error in as.name(sym) : invalid data of mode 'character' (too short)
Calls: f -> as.name
> f(m0)
Error in f(m0) : argument "env" is missing, with no default
> f(df0)
Error in f(df0) : argument "env" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "env" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : not a symbol
> f(l0,l0)
Error in f(l0, l0) : not a symbol
> f(c0,c0)
Error in as.name(sym) : invalid data of mode 'character' (too short)
Calls: f -> as.name
> f(df0,df0)
Error in f(df0, df0) : not a symbol
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : not a symbol
> 
> ##  bindtextdomain  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("bindtextdomain", pos = 'package:base')
> f()
Error in f() : argument "domain" is missing, with no default
> f(NULL)
Error in bindtextdomain(domain, dirname) : invalid 'domain' value
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "domain" is missing, with no default
> f(NULL,NULL)
Error in bindtextdomain(domain, dirname) : invalid 'domain' value
Calls: f
> f(list())
Error in bindtextdomain(domain, dirname) : invalid 'domain' value
Calls: f
> f(l0)
Error in bindtextdomain(domain, dirname) : invalid 'domain' value
Calls: f
> f(c0)
Error in bindtextdomain(domain, dirname) : invalid 'domain' value
Calls: f
> f(m0)
Error in bindtextdomain(domain, dirname) : invalid 'domain' value
Calls: f
> f(df0)
Error in bindtextdomain(domain, dirname) : invalid 'domain' value
Calls: f
> f(FALSE)
Error in bindtextdomain(domain, dirname) : invalid 'domain' value
Calls: f
> f(list(),list())
Error in bindtextdomain(domain, dirname) : invalid 'domain' value
Calls: f
> f(l0,l0)
Error in bindtextdomain(domain, dirname) : invalid 'domain' value
Calls: f
> f(c0,c0)
Error in bindtextdomain(domain, dirname) : invalid 'domain' value
Calls: f
> f(df0,df0)
Error in bindtextdomain(domain, dirname) : invalid 'domain' value
Calls: f
> f(FALSE,FALSE)
Error in bindtextdomain(domain, dirname) : invalid 'domain' value
Calls: f
> 
> ##  bitwAnd  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("bitwAnd", pos = 'package:base')
> f()
Error in f() : argument "a" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "b" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "a" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : unimplemented type 'NULL' in 'bitwAnd'
> f(list())
Error in f(list()) : argument "b" is missing, with no default
> f(l0)
Error in f(l0) : argument "b" is missing, with no default
> f(c0)
Error in f(c0) : argument "b" is missing, with no default
> f(m0)
Error in f(m0) : argument "b" is missing, with no default
> f(df0)
Error in f(df0) : argument "b" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "b" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : unimplemented type 'list' in 'bitwAnd'
> f(l0,l0)
Error in f(l0, l0) : unimplemented type 'logical' in 'bitwAnd'
> f(c0,c0)
Error in f(c0, c0) : unimplemented type 'character' in 'bitwAnd'
> f(df0,df0)
Error in f(df0, df0) : unimplemented type 'list' in 'bitwAnd'
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unimplemented type 'logical' in 'bitwAnd'
> 
> ##  bitwNot  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("bitwNot", pos = 'package:base')
> f()
Error in f() : argument "a" is missing, with no default
> f(NULL)
Error in f(NULL) : unimplemented type 'NULL' in 'bitNot'
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : unimplemented type 'list' in 'bitNot'
> f(l0)
Error in f(l0) : unimplemented type 'logical' in 'bitNot'
> f(c0)
Error in f(c0) : unimplemented type 'character' in 'bitNot'
> f(m0)
integer(0)
> f(df0)
Error in f(df0) : unimplemented type 'list' in 'bitNot'
> f(FALSE)
Error in f(FALSE) : unimplemented type 'logical' in 'bitNot'
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  bitwOr  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("bitwOr", pos = 'package:base')
> f()
Error in f() : argument "a" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "b" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "a" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : unimplemented type 'NULL' in 'bitwOr'
> f(list())
Error in f(list()) : argument "b" is missing, with no default
> f(l0)
Error in f(l0) : argument "b" is missing, with no default
> f(c0)
Error in f(c0) : argument "b" is missing, with no default
> f(m0)
Error in f(m0) : argument "b" is missing, with no default
> f(df0)
Error in f(df0) : argument "b" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "b" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : unimplemented type 'list' in 'bitwOr'
> f(l0,l0)
Error in f(l0, l0) : unimplemented type 'logical' in 'bitwOr'
> f(c0,c0)
Error in f(c0, c0) : unimplemented type 'character' in 'bitwOr'
> f(df0,df0)
Error in f(df0, df0) : unimplemented type 'list' in 'bitwOr'
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unimplemented type 'logical' in 'bitwOr'
> 
> ##  bitwShiftL  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("bitwShiftL", pos = 'package:base')
> f()
Error in f() : argument "a" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "n" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "a" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : unimplemented type 'NULL' in 'bitShiftL'
> f(list())
Error in f(list()) : argument "n" is missing, with no default
> f(l0)
Error in f(l0) : argument "n" is missing, with no default
> f(c0)
Error in f(c0) : argument "n" is missing, with no default
> f(m0)
Error in f(m0) : argument "n" is missing, with no default
> f(df0)
Error in f(df0) : argument "n" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "n" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : unimplemented type 'list' in 'bitShiftL'
> f(l0,l0)
Error in f(l0, l0) : unimplemented type 'logical' in 'bitShiftL'
> f(c0,c0)
Error in f(c0, c0) : unimplemented type 'character' in 'bitShiftL'
> f(df0,df0)
Error in f(df0, df0) : unimplemented type 'list' in 'bitShiftL'
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unimplemented type 'logical' in 'bitShiftL'
> 
> ##  bitwShiftR  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("bitwShiftR", pos = 'package:base')
> f()
Error in f() : argument "a" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "n" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "a" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : unimplemented type 'NULL' in 'bitShiftR'
> f(list())
Error in f(list()) : argument "n" is missing, with no default
> f(l0)
Error in f(l0) : argument "n" is missing, with no default
> f(c0)
Error in f(c0) : argument "n" is missing, with no default
> f(m0)
Error in f(m0) : argument "n" is missing, with no default
> f(df0)
Error in f(df0) : argument "n" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "n" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : unimplemented type 'list' in 'bitShiftR'
> f(l0,l0)
Error in f(l0, l0) : unimplemented type 'logical' in 'bitShiftR'
> f(c0,c0)
Error in f(c0, c0) : unimplemented type 'character' in 'bitShiftR'
> f(df0,df0)
Error in f(df0, df0) : unimplemented type 'list' in 'bitShiftR'
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unimplemented type 'logical' in 'bitShiftR'
> 
> ##  bitwXor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("bitwXor", pos = 'package:base')
> f()
Error in f() : argument "a" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "b" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "a" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : unimplemented type 'NULL' in 'bitwXor'
> f(list())
Error in f(list()) : argument "b" is missing, with no default
> f(l0)
Error in f(l0) : argument "b" is missing, with no default
> f(c0)
Error in f(c0) : argument "b" is missing, with no default
> f(m0)
Error in f(m0) : argument "b" is missing, with no default
> f(df0)
Error in f(df0) : argument "b" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "b" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : unimplemented type 'list' in 'bitwXor'
> f(l0,l0)
Error in f(l0, l0) : unimplemented type 'logical' in 'bitwXor'
> f(c0,c0)
Error in f(c0, c0) : unimplemented type 'character' in 'bitwXor'
> f(df0,df0)
Error in f(df0, df0) : unimplemented type 'list' in 'bitwXor'
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unimplemented type 'logical' in 'bitwXor'
> 
> ##  body  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("body", pos = 'package:base')
> f()
{
    if (is.character(fun)) 
        fun <- get(fun, mode = "function", envir = parent.frame())
    .Internal(body(fun))
}
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
NULL
> f(c0)
Error in get(fun, mode = "function", envir = parent.frame()) : 
  invalid first argument
Calls: f -> get
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  body<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("body<-", pos = 'package:base')
> f()
Error in f() : argument "value" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "value" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "value" is missing, with no default
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "value" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "value" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "value" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "value" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "value" is missing, with no default
> 
> ##  bquote  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("bquote", pos = 'package:base')
> f()

> f(NULL)
NULL
> f(,NULL)

> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
l0
> f(c0)
c0
> f(m0)
m0
> f(df0)
df0
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
l0
> f(c0,c0)
c0
> f(df0,df0)
df0
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  break  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("break", pos = 'package:base')
> f()
Error: no loop for break/next, jumping to top level
> f(NULL)
Error in f(NULL) : 1 argument passed to 'break' which requires 0
> f(,NULL)
Error in f(, NULL) : 2 arguments passed to 'break' which requires 0
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'break' which requires 0
> f(list())
Error in f(list()) : 1 argument passed to 'break' which requires 0
> f(l0)
Error in f(l0) : 1 argument passed to 'break' which requires 0
> f(c0)
Error in f(c0) : 1 argument passed to 'break' which requires 0
> f(m0)
Error in f(m0) : 1 argument passed to 'break' which requires 0
> f(df0)
Error in f(df0) : 1 argument passed to 'break' which requires 0
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'break' which requires 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'break' which requires 0
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'break' which requires 0
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'break' which requires 0
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'break' which requires 0
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'break' which requires 0
> 
> ##  browserCondition  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("browserCondition", pos = 'package:base')
> f()
Error in f() : no browser context to query
> f(NULL)
Error in f(NULL) : number of contexts must be positive
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : number of contexts must be positive
> f(l0)
Error in f(l0) : number of contexts must be positive
> f(c0)
Error in f(c0) : number of contexts must be positive
> f(m0)
Error in f(m0) : number of contexts must be positive
> f(df0)
Error in f(df0) : number of contexts must be positive
> f(FALSE)
Error in f(FALSE) : number of contexts must be positive
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  browserSetDebug  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("browserSetDebug", pos = 'package:base')
> f()
Error in f() : no browser context to query
> f(NULL)
Error in f(NULL) : number of contexts must be positive
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : number of contexts must be positive
> f(l0)
Error in f(l0) : number of contexts must be positive
> f(c0)
Error in f(c0) : number of contexts must be positive
> f(m0)
Error in f(m0) : number of contexts must be positive
> f(df0)
Error in f(df0) : number of contexts must be positive
> f(FALSE)
Error in f(FALSE) : number of contexts must be positive
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  browserText  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("browserText", pos = 'package:base')
> f()
Error in f() : no browser context to query
> f(NULL)
Error in f(NULL) : number of contexts must be positive
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : number of contexts must be positive
> f(l0)
Error in f(l0) : number of contexts must be positive
> f(c0)
Error in f(c0) : number of contexts must be positive
> f(m0)
Error in f(m0) : number of contexts must be positive
> f(df0)
Error in f(df0) : number of contexts must be positive
> f(FALSE)
Error in f(FALSE) : number of contexts must be positive
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  by  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("by", pos = 'package:base')
> f()
Error in as.data.frame(data) : 
  argument "data" is missing, with no default
Calls: f -> by.default -> as.data.frame
> f(NULL)
Error in by.default(NULL) : 
  argument "INDICES" is missing, with no default
Calls: f -> by.default
> f(,NULL)
Error in as.data.frame(data) : 
  argument "data" is missing, with no default
Calls: f -> by.default -> as.data.frame
> f(NULL,NULL)
Error in by.default(NULL, NULL) : 
  'names' attribute [1] must be the same length as the vector [0]
Calls: f -> by.default
> f(list())
Error in by.default(list()) : 
  argument "INDICES" is missing, with no default
Calls: f -> by.default
> f(l0)
Error in by.default(l0) : argument "INDICES" is missing, with no default
Calls: f -> by.default
> f(c0)
Error in by.default(c0) : argument "INDICES" is missing, with no default
Calls: f -> by.default
> f(m0)
Error in by.data.frame(dd, INDICES, FUN, ..., simplify = simplify) : 
  argument "INDICES" is missing, with no default
Calls: f -> by.default -> by -> by.data.frame
> f(df0)
Error in by.data.frame(df0) : 
  argument "INDICES" is missing, with no default
Calls: f -> by.data.frame
> f(FALSE)
Error in by.default(FALSE) : 
  argument "INDICES" is missing, with no default
Calls: f -> by.default
> f(list(),list())
Error in tapply(seq_len(0L), list(), function (x)  : 
  'INDEX' is of length zero
Calls: f -> by.default -> structure -> eval -> eval -> tapply
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
> f(FALSE,FALSE)
Error in FUN(X[[i]], ...) : argument "FUN" is missing, with no default
Calls: f ... structure -> eval -> eval -> tapply -> lapply -> FUN
> 
> ##  by.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("by.data.frame", pos = 'package:base')
> f()
Error in f() : argument "INDICES" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "INDICES" is missing, with no default
> f(,NULL)
Error in f(, NULL) : 
  'names' attribute [1] must be the same length as the vector [0]
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  'names' attribute [1] must be the same length as the vector [0]
> f(list())
Error in f(list()) : argument "INDICES" is missing, with no default
> f(l0)
Error in f(l0) : argument "INDICES" is missing, with no default
> f(c0)
Error in f(c0) : argument "INDICES" is missing, with no default
> f(m0)
Error in f(m0) : argument "INDICES" is missing, with no default
> f(df0)
Error in f(df0) : argument "INDICES" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "INDICES" is missing, with no default
> f(list(),list())
Error in tapply(seq_len(NULL), list(), function (x)  : 
  'INDEX' is of length zero
Calls: f -> structure -> eval -> eval -> tapply
> f(l0,l0)
Error in eval(substitute(tapply(seq_len(nd), IND, FUNx, simplify = simplify)),  : 
  invalid 'envir' argument of type 'logical'
Calls: f -> structure -> eval
> f(c0,c0)
Error in eval(substitute(tapply(seq_len(nd), IND, FUNx, simplify = simplify)),  : 
  invalid 'envir' argument of type 'character'
Calls: f -> structure -> eval
> f(df0,df0)
> f(FALSE,FALSE)
Error in eval(substitute(tapply(seq_len(nd), IND, FUNx, simplify = simplify)),  : 
  invalid 'envir' argument of type 'logical'
Calls: f -> structure -> eval
> 
> ##  by.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("by.default", pos = 'package:base')
> f()
Error in as.data.frame(data) : 
  argument "data" is missing, with no default
Calls: f -> as.data.frame
> f(NULL)
Error in f(NULL) : argument "INDICES" is missing, with no default
> f(,NULL)
Error in as.data.frame(data) : 
  argument "data" is missing, with no default
Calls: f -> as.data.frame
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  'names' attribute [1] must be the same length as the vector [0]
> f(list())
Error in f(list()) : argument "INDICES" is missing, with no default
> f(l0)
Error in f(l0) : argument "INDICES" is missing, with no default
> f(c0)
Error in f(c0) : argument "INDICES" is missing, with no default
> f(m0)
Error in by.data.frame(dd, INDICES, FUN, ..., simplify = simplify) : 
  argument "INDICES" is missing, with no default
Calls: f -> by -> by.data.frame
> f(df0)
Error in by.data.frame(dd, INDICES, FUN, ..., simplify = simplify) : 
  argument "INDICES" is missing, with no default
Calls: f -> by -> by.data.frame
> f(FALSE)
Error in f(FALSE) : argument "INDICES" is missing, with no default
> f(list(),list())
Error in tapply(seq_len(0L), list(), function (x)  : 
  'INDEX' is of length zero
Calls: f -> structure -> eval -> eval -> tapply
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
> f(FALSE,FALSE)
Error in FUN(X[[i]], ...) : argument "FUN" is missing, with no default
Calls: f ... structure -> eval -> eval -> tapply -> lapply -> FUN
> 
> ##  bzfile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("bzfile", pos = 'package:base')
> f()
Error in f() : argument "description" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'description' argument
> f(,NULL)
Error in f(, NULL) : argument "description" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'description' argument
> f(list())
Error in f(list()) : invalid 'description' argument
> f(l0)
Error in f(l0) : invalid 'description' argument
> f(c0)
Error in f(c0) : invalid 'description' argument
> f(m0)
Error in f(m0) : invalid 'description' argument
> f(df0)
Error in f(df0) : invalid 'description' argument
> f(FALSE)
Error in f(FALSE) : invalid 'description' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'description' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'description' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'description' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'description' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'description' argument
> 
> ##  c  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("c", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
$c0
factor(0)
Levels: 

> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
$c0
factor(0)
Levels: 

$c0
factor(0)
Levels: 

> f(FALSE,FALSE)
[1] FALSE FALSE
> 
> ##  c.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("c.Date", pos = 'package:base')
> f()
character(0)
> f(NULL)
character(0)
> f(,NULL)
character(0)
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
character(0)
> f(FALSE)
[1] "1970-01-01"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
character(0)
> f(FALSE,FALSE)
[1] "1970-01-01" "1970-01-01"
> 
> ##  c.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("c.POSIXct", pos = 'package:base')
> f()
character(0)
> f(NULL)
character(0)
> f(,NULL)
character(0)
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
character(0)
> f(FALSE)
[1] "1969-12-31 19:00:00 EST"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
character(0)
> f(FALSE,FALSE)
[1] "1969-12-31 19:00:00 EST" "1969-12-31 19:00:00 EST"
> 
> ##  c.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("c.POSIXlt", pos = 'package:base')
> f()
Error in as.POSIXlt.default(do.call("c", lapply(list(...), as.POSIXct))) : 
  do not know how to convert 'do.call("c", lapply(list(...), as.POSIXct))' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(NULL)
Error in as.POSIXct.default(X[[i]], ...) : 
  do not know how to convert 'X[[i]]' to class "POSIXct"
Calls: f ... as.POSIXlt -> do.call -> lapply -> FUN -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct.default(X[[i]], ...) : 
  do not know how to convert 'X[[i]]' to class "POSIXct"
Calls: f ... as.POSIXlt -> do.call -> lapply -> FUN -> as.POSIXct.default
> f(NULL,NULL)
Error in as.POSIXct.default(X[[i]], ...) : 
  do not know how to convert 'X[[i]]' to class "POSIXct"
Calls: f ... as.POSIXlt -> do.call -> lapply -> FUN -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(X[[i]], ...) : 
  do not know how to convert 'X[[i]]' to class "POSIXct"
Calls: f ... as.POSIXlt -> do.call -> lapply -> FUN -> as.POSIXct.default
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
Error in as.POSIXct.numeric(X[[i]], ...) : 'origin' must be supplied
Calls: f ... as.POSIXlt -> do.call -> lapply -> FUN -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(X[[i]], ...) : 
  do not know how to convert 'X[[i]]' to class "POSIXct"
Calls: f ... as.POSIXlt -> do.call -> lapply -> FUN -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(X[[i]], ...) : 
  do not know how to convert 'X[[i]]' to class "POSIXct"
Calls: f ... as.POSIXlt -> do.call -> lapply -> FUN -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(X[[i]], ...) : 
  do not know how to convert 'X[[i]]' to class "POSIXct"
Calls: f ... as.POSIXlt -> do.call -> lapply -> FUN -> as.POSIXct.default
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in as.POSIXct.default(X[[i]], ...) : 
  do not know how to convert 'X[[i]]' to class "POSIXct"
Calls: f ... as.POSIXlt -> do.call -> lapply -> FUN -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(X[[i]], ...) : 
  do not know how to convert 'X[[i]]' to class "POSIXct"
Calls: f ... as.POSIXlt -> do.call -> lapply -> FUN -> as.POSIXct.default
> 
> ##  c.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("c.difftime", pos = 'package:base')
> f()
Time difference of  secs
> f(NULL)
Error in FUN(X[[i]], ...) : 'tim' is not character or numeric
Calls: f -> lapply -> FUN
> f(,NULL)
Error in FUN(X[[i]], ...) : 'tim' is not character or numeric
Calls: f -> lapply -> FUN
> f(NULL,NULL)
Error in FUN(X[[i]], ...) : 'tim' is not character or numeric
Calls: f -> lapply -> FUN
> f(list())
Error in FUN(X[[i]], ...) : 'tim' is not character or numeric
Calls: f -> lapply -> FUN
> f(l0)
Error in FUN(X[[i]], ...) : 'tim' is not character or numeric
Calls: f -> lapply -> FUN
> f(c0)
Error in match.arg(units) : 'arg' must be NULL or a character vector
Calls: f -> lapply -> FUN -> difftime -> match.arg
> f(m0)
Error in FUN(X[[i]], ...) : invalid units specified
Calls: f -> lapply -> FUN
> f(df0)
Error in FUN(X[[i]], ...) : 'tim' is not character or numeric
Calls: f -> lapply -> FUN
> f(FALSE)
Error in FUN(X[[i]], ...) : 'tim' is not character or numeric
Calls: f -> lapply -> FUN
> f(list(),list())
Error in FUN(X[[i]], ...) : 'tim' is not character or numeric
Calls: f -> lapply -> FUN
> f(l0,l0)
Error in FUN(X[[i]], ...) : 'tim' is not character or numeric
Calls: f -> lapply -> FUN
> f(c0,c0)
Error in match.arg(units) : 'arg' must be NULL or a character vector
Calls: f -> lapply -> FUN -> difftime -> match.arg
> f(df0,df0)
Error in FUN(X[[i]], ...) : 'tim' is not character or numeric
Calls: f -> lapply -> FUN
> f(FALSE,FALSE)
Error in FUN(X[[i]], ...) : 'tim' is not character or numeric
Calls: f -> lapply -> FUN
> 
> ##  c.noquote  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("c.noquote", pos = 'package:base')
> f()
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(NULL)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(,NULL)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(NULL,NULL)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(list())
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(l0)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(c0)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(m0)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(df0)
$c0
factor(0)
Levels: 

> f(FALSE)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(list(),list())
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(l0,l0)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(c0,c0)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(df0,df0)
$c0
factor(0)
Levels: 

$c0
factor(0)
Levels: 

> f(FALSE,FALSE)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> 
> ##  c.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("c.numeric_version", pos = 'package:base')
> f()
<0 elements>
> f(NULL)
<0 elements>
> f(,NULL)
<0 elements>
> f(NULL,NULL)
<0 elements>
> f(list())
<0 elements>
> f(l0)
<0 elements>
> f(c0)
<0 elements>
> f(m0)
<0 elements>
> f(df0)
Error: invalid version specification 'integer(0)'
> f(FALSE)
Error: invalid version specification 'FALSE'
> f(list(),list())
<0 elements>
> f(l0,l0)
<0 elements>
> f(c0,c0)
<0 elements>
> f(df0,df0)
Error: invalid version specification 'integer(0)'
> f(FALSE,FALSE)
Error: invalid version specification 'FALSE'
> 
> ##  c.warnings  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("c.warnings", pos = 'package:base')
> f()
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(NULL)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(,NULL)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(NULL,NULL)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(list())
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(l0)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(c0)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(m0)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(df0)
Warning message:
c0
> f(FALSE)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(list(),list())
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(l0,l0)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(c0,c0)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> f(df0,df0)
Warning messages:
1: c0
2: c0
> f(FALSE,FALSE)
Error in NextMethod("c") : object not specified
Calls: f -> structure -> NextMethod
> 
> ##  call  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("call", pos = 'package:base')
> f()
Error in f() : 'name' is missing
> f(NULL)
Error in f(NULL) : first argument must be a character string
> f(,NULL)
Error in f(, NULL) : first argument must be a character string
> f(NULL,NULL)
Error in f(NULL, NULL) : first argument must be a character string
> f(list())
Error in f(list()) : first argument must be a character string
> f(l0)
Error in f(l0) : first argument must be a character string
> f(c0)
Error in f(c0) : first argument must be a character string
> f(m0)
Error in f(m0) : first argument must be a character string
> f(df0)
Error in f(df0) : first argument must be a character string
> f(FALSE)
Error in f(FALSE) : first argument must be a character string
> f(list(),list())
Error in f(list(), list()) : first argument must be a character string
> f(l0,l0)
Error in f(l0, l0) : first argument must be a character string
> f(c0,c0)
Error in f(c0, c0) : first argument must be a character string
> f(df0,df0)
Error in f(df0, df0) : first argument must be a character string
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : first argument must be a character string
> 
> ##  callCC  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("callCC", pos = 'package:base')
> f()
Error in f() : argument "fun" is missing, with no default
> f(NULL)
Error in f(NULL) : could not find function "fun"
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : could not find function "fun"
> f(l0)
Error in f(l0) : could not find function "fun"
> f(c0)
Error in f(c0) : could not find function "fun"
> f(m0)
Error in f(m0) : could not find function "fun"
> f(df0)
Error in f(df0) : could not find function "fun"
> f(FALSE)
Error in f(FALSE) : could not find function "fun"
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  capabilities  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("capabilities", pos = 'package:base')
> f()
       jpeg         png        tiff       tcltk         X11        aqua 
       TRUE        TRUE        TRUE       FALSE        TRUE       FALSE 
   http/ftp     sockets      libxml        fifo      cledit       iconv 
       TRUE        TRUE        TRUE        TRUE       FALSE        TRUE 
        NLS     profmem       cairo         ICU long.double     libcurl 
       TRUE       FALSE        TRUE        TRUE        TRUE        TRUE 
> f(NULL)
       jpeg         png        tiff       tcltk         X11        aqua 
       TRUE        TRUE        TRUE       FALSE        TRUE       FALSE 
   http/ftp     sockets      libxml        fifo      cledit       iconv 
       TRUE        TRUE        TRUE        TRUE       FALSE        TRUE 
        NLS     profmem       cairo         ICU long.double     libcurl 
       TRUE       FALSE        TRUE        TRUE        TRUE        TRUE 
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
named logical(0)
> f(l0)
named logical(0)
> f(c0)
named logical(0)
> f(m0)
named logical(0)
> f(df0)
named logical(0)
> f(FALSE)
named logical(0)
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  casefold  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("casefold", pos = 'package:base')
> f()
Error in tolower(x) : argument "x" is missing, with no default
Calls: f -> tolower
> f(NULL)
character(0)
> f(,NULL)
Error in if (upper) toupper(x) else tolower(x) : 
  argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (upper) toupper(x) else tolower(x) : 
  argument is of length zero
Calls: f
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "false"
> f(list(),list())
Error in if (upper) toupper(x) else tolower(x) : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (upper) toupper(x) else tolower(x) : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (upper) toupper(x) else tolower(x) : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in if (upper) toupper(x) else tolower(x) : 
  argument is not interpretable as logical
Calls: f
> f(FALSE,FALSE)
[1] "false"
> 
> ##  cat  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cat", pos = 'package:base')
> f()
> f(NULL)
> f(,NULL)
> f(NULL,NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
Error in cat(list(...), file, sep, fill, labels, append) : 
  argument 1 (type 'list') cannot be handled by 'cat'
Calls: f
> f(FALSE)
FALSE> f(list(),list())
 > f(l0,l0)
 > f(c0,c0)
 > f(df0,df0)
Error in cat(list(...), file, sep, fill, labels, append) : 
  argument 1 (type 'list') cannot be handled by 'cat'
Calls: f
> f(FALSE,FALSE)
FALSE FALSE> 
> ##  cbind  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cbind", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
     [,1]
> f(l0)
     l0
> f(c0)
     c0
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
      [,1]
[1,] FALSE
> f(list(),list())
     [,1] [,2]
> f(l0,l0)
     l0 l0
> f(c0,c0)
     c0 c0
> f(df0,df0)
[1] c0 c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
      [,1]  [,2]
[1,] FALSE FALSE
> 
> ##  cbind.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cbind.data.frame", pos = 'package:base')
> f()
data frame with 0 columns and 0 rows
> f(NULL)
data frame with 0 columns and 0 rows
> f(,NULL)
data frame with 0 columns and 0 rows
> f(NULL,NULL)
data frame with 0 columns and 0 rows
> f(list())
data frame with 0 columns and 0 rows
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
data frame with 0 columns and 0 rows
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
  FALSE
1 FALSE
> f(list(),list())
data frame with 0 columns and 0 rows
> f(l0,l0)
[1] l0 l0
<0 rows> (or 0-length row.names)
> f(c0,c0)
[1] c0 c0
<0 rows> (or 0-length row.names)
> f(df0,df0)
[1] c0 c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
  FALSE FALSE
1 FALSE FALSE
> 
> ##  ceiling  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("ceiling", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'ceiling' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'ceiling' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'ceiling' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'ceiling' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'ceiling' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'ceiling' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'ceiling' which requires 1
> 
> ##  char.expand  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("char.expand", pos = 'package:base')
> f()
Error in f() : argument "input" is missing, with no default
> f(NULL)
Error in f(NULL) : 'input' must have length 1
> f(,NULL)
Error in f(, NULL) : argument "input" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'input' must have length 1
> f(list())
Error in f(list()) : 'input' must have length 1
> f(l0)
Error in f(l0) : 'input' must have length 1
> f(c0)
Error in f(c0) : 'input' must have length 1
> f(m0)
Error in f(m0) : 'input' must have length 1
> f(df0)
Error in f(df0) : 'input' and 'target' must be character vectors
> f(FALSE)
Error in f(FALSE) : 'input' and 'target' must be character vectors
> f(list(),list())
Error in f(list(), list()) : 'input' must have length 1
> f(l0,l0)
Error in f(l0, l0) : 'input' must have length 1
> f(c0,c0)
Error in f(c0, c0) : 'input' must have length 1
> f(df0,df0)
Error in f(df0, df0) : 'input' and 'target' must be character vectors
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'input' and 'target' must be character vectors
> 
> ##  charToRaw  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("charToRaw", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument must be a character vector of length 1
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : argument must be a character vector of length 1
> f(l0)
Error in f(l0) : argument must be a character vector of length 1
> f(c0)
Error in f(c0) : argument must be a character vector of length 1
> f(m0)
Error in f(m0) : argument must be a character vector of length 1
> f(df0)
Error in f(df0) : argument must be a character vector of length 1
> f(FALSE)
Error in f(FALSE) : argument must be a character vector of length 1
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  character  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("character", pos = 'package:base')
> f()
character(0)
> f(NULL)
Error in f(NULL) : invalid 'length' argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'length' argument
> f(l0)
Error in f(l0) : invalid 'length' argument
> f(c0)
Error in f(c0) : invalid 'length' argument
> f(m0)
Error in f(m0) : invalid 'length' argument
> f(df0)
Error in f(df0) : invalid 'length' argument
> f(FALSE)
Error in f(FALSE) : invalid 'length' argument
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  charmatch  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("charmatch", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "table" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
integer(0)
> f(list())
Error in f(list()) : argument "table" is missing, with no default
> f(l0)
Error in f(l0) : argument "table" is missing, with no default
> f(c0)
Error in f(c0) : argument "table" is missing, with no default
> f(m0)
Error in f(m0) : argument "table" is missing, with no default
> f(df0)
Error in f(df0) : argument "table" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "table" is missing, with no default
> f(list(),list())
integer(0)
> f(l0,l0)
integer(0)
> f(c0,c0)
integer(0)
> f(df0,df0)
[1] 1
> f(FALSE,FALSE)
[1] 1
> 
> ##  chartr  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("chartr", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "x" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "x" is missing, with no default
> f(list())
Error in f(list()) : argument "x" is missing, with no default
> f(l0)
Error in f(l0) : argument "x" is missing, with no default
> f(c0)
Error in f(c0) : argument "x" is missing, with no default
> f(m0)
Error in f(m0) : argument "x" is missing, with no default
> f(df0)
Error in f(df0) : argument "x" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "x" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "x" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "x" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "x" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "x" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "x" is missing, with no default
> 
> ##  check_tzones  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("check_tzones", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
NULL
> f(l0,l0)
NULL
> f(c0,c0)
NULL
> f(df0,df0)
NULL
> f(FALSE,FALSE)
NULL
> 
> ##  chkDots  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("chkDots", pos = 'package:base')
> f()
> f(NULL)
Warning message:
In NULL :
 extra argument  will be disregarded 
> f(,NULL)
Warning message:
In NULL :
 extra arguments  will be disregarded 
> f(NULL,NULL)
Warning message:
In NULL :
 extra arguments  will be disregarded 
> f(list())
Warning message:
In NULL :
 extra argument  will be disregarded 
> f(l0)
Warning message:
In NULL :
 extra argument  will be disregarded 
> f(c0)
Warning message:
In NULL :
 extra argument  will be disregarded 
> f(m0)
Warning message:
In NULL :
 extra argument  will be disregarded 
> f(df0)
Warning message:
In NULL :
 extra argument  will be disregarded 
> f(FALSE)
Warning message:
In NULL :
 extra argument  will be disregarded 
> f(list(),list())
Warning message:
In NULL :
 extra arguments  will be disregarded 
> f(l0,l0)
Warning message:
In NULL :
 extra arguments  will be disregarded 
> f(c0,c0)
Warning message:
In NULL :
 extra arguments  will be disregarded 
> f(df0,df0)
Warning message:
In NULL :
 extra arguments  will be disregarded 
> f(FALSE,FALSE)
Warning message:
In NULL :
 extra arguments  will be disregarded 
> 
> ##  chol  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("chol", pos = 'package:base')
> f()
Error in chol.default() : argument "x" is missing, with no default
Calls: f -> chol.default
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... chol.default -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in chol.default(, NULL) : argument "x" is missing, with no default
Calls: f -> chol.default
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... chol.default -> as.matrix -> as.matrix.default -> array
> f(list())
Error in chol.default(list()) : 'a' must be a square matrix
Calls: f -> chol.default
> f(l0)
Error in chol.default(l0) : 'a' must be a square matrix
Calls: f -> chol.default
> f(c0)
Error in chol.default(c0) : 'a' must be a square matrix
Calls: f -> chol.default
> f(m0)
Error in chol.default(m0) : 'a' must have dims > 0
Calls: f -> chol.default
> f(df0)
Error in chol.default(df0) : 'a' must be a square matrix
Calls: f -> chol.default
> f(FALSE)
Error in chol.default(FALSE) : 
  the leading minor of order 1 is not positive definite
Calls: f -> chol.default
> f(list(),list())
Error in chol.default(list(), list()) : 'a' must be a square matrix
Calls: f -> chol.default
> f(l0,l0)
Error in chol.default(l0, l0) : 'a' must be a square matrix
Calls: f -> chol.default
> f(c0,c0)
Error in chol.default(c0, c0) : 'a' must be a square matrix
Calls: f -> chol.default
> f(df0,df0)
Error in chol.default(df0, df0) : 'a' must be a square matrix
Calls: f -> chol.default
> f(FALSE,FALSE)
Error in chol.default(FALSE, FALSE) : 
  the leading minor of order 1 is not positive definite
Calls: f -> chol.default
> 
> ##  chol.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("chol.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(list())
Error in f(list()) : 'a' must be a square matrix
> f(l0)
Error in f(l0) : 'a' must be a square matrix
> f(c0)
Error in f(c0) : 'a' must be a square matrix
> f(m0)
Error in f(m0) : 'a' must have dims > 0
> f(df0)
Error in f(df0) : 'a' must be a square matrix
> f(FALSE)
Error in f(FALSE) : the leading minor of order 1 is not positive definite
> f(list(),list())
Error in f(list(), list()) : 'a' must be a square matrix
> f(l0,l0)
Error in f(l0, l0) : 'a' must be a square matrix
> f(c0,c0)
Error in f(c0, c0) : 'a' must be a square matrix
> f(df0,df0)
Error in f(df0, df0) : 'a' must be a square matrix
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  the leading minor of order 1 is not positive definite
> 
> ##  chol2inv  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("chol2inv", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'a' must be a numeric matrix
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'size' argument must be a positive integer
> f(list())
Error in f(list()) : 'a' must be a numeric matrix
> f(l0)
Error in f(l0) : 'a' must be a numeric matrix
> f(c0)
Error in f(c0) : 'a' must be a numeric matrix
> f(m0)
Error in f(m0) : 'size' argument must be a positive integer
> f(df0)
Error in f(df0) : 'a' must be a numeric matrix
> f(FALSE)
Error in f(FALSE) : 'a' must be a numeric matrix
> f(list(),list())
Error in f(list(), list()) : 'size' argument must be a positive integer
> f(l0,l0)
Error in f(l0, l0) : 'size' argument must be a positive integer
> f(c0,c0)
Error in f(c0, c0) : 'size' argument must be a positive integer
> f(df0,df0)
Error in f(df0, df0) : 'size' argument must be a positive integer
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'size' argument must be a positive integer
> 
> ##  choose  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("choose", pos = 'package:base')
> f()
Error in f() : argument "n" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "k" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "n" is missing, with no default
> f(NULL,NULL)
Error in choose(n, k) : non-numeric argument to mathematical function
Calls: f
> f(list())
Error in f(list()) : argument "k" is missing, with no default
> f(l0)
Error in f(l0) : argument "k" is missing, with no default
> f(c0)
Error in f(c0) : argument "k" is missing, with no default
> f(m0)
Error in f(m0) : argument "k" is missing, with no default
> f(df0)
Error in f(df0) : argument "k" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "k" is missing, with no default
> f(list(),list())
Error in choose(n, k) : non-numeric argument to mathematical function
Calls: f
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in choose(n, k) : non-numeric argument to mathematical function
Calls: f
> f(df0,df0)
Error in choose(n, k) : non-numeric argument to mathematical function
Calls: f
> f(FALSE,FALSE)
[1] 1
> 
> ##  class  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("class", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'class' which requires 1
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'class' which requires 1
> f(list())
[1] "list"
> f(l0)
[1] "logical"
> f(c0)
[1] "character"
> f(m0)
[1] "matrix"
> f(df0)
[1] "data.frame"
> f(FALSE)
[1] "logical"
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'class' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'class' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'class' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'class' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'class' which requires 1
> 
> ##  class<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("class<-", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'class<-' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to 'class<-' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : 1 argument passed to 'class<-' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to 'class<-' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to 'class<-' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to 'class<-' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to 'class<-' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'class<-' which requires 2
> f(list(),list())
Error: attempt to set invalid 'class' attribute
> f(l0,l0)
Error: attempt to set invalid 'class' attribute
> f(c0,c0)
character(0)
> f(df0,df0)
$c0
factor(0)
Levels: 

attr(,"row.names")
character(0)
attr(,"class")
          c0 
"integer(0)" 
> f(FALSE,FALSE)
[1] FALSE
attr(,"class")
[1] "FALSE"
> 
> ##  clearPushBack  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("clearPushBack", pos = 'package:base')
> f()
Error in f() : argument "connection" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid connection
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid connection
> f(l0)
Error in f(l0) : invalid connection
> f(c0)
Error in f(c0) : invalid connection
> f(m0)
Error in f(m0) : invalid connection
> f(df0)
Error in f(df0) : invalid connection
> f(FALSE)
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  close  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("close", pos = 'package:base')
> f()
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "character"
Calls: f
> f(df0,df0)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "data.frame"
Calls: f
> f(FALSE,FALSE)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "logical"
Calls: f
> 
> ##  close.connection  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("close.connection", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in f(NULL) : 'con' is not a connection
> f(,NULL)
Error in f(, NULL) : argument "con" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'con' is not a connection
> f(list())
Error in f(list()) : 'con' is not a connection
> f(l0)
Error in f(l0) : 'con' is not a connection
> f(c0)
Error in f(c0) : 'con' is not a connection
> f(m0)
Error in f(m0) : 'con' is not a connection
> f(df0)
Error in f(df0) : 'con' is not a connection
> f(FALSE)
Error in f(FALSE) : 'con' is not a connection
> f(list(),list())
Error in f(list(), list()) : 'con' is not a connection
> f(l0,l0)
Error in f(l0, l0) : 'con' is not a connection
> f(c0,c0)
Error in f(c0, c0) : 'con' is not a connection
> f(df0,df0)
Error in f(df0, df0) : 'con' is not a connection
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'con' is not a connection
> 
> ##  close.srcfile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("close.srcfile", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "con" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
NULL
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
NULL
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
NULL
> f(l0,l0)
Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Error: $ operator is invalid for atomic vectors
> f(df0,df0)
NULL
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  close.srcfilealias  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("close.srcfilealias", pos = 'package:base')
> f()
Error in close(con$original, ...) : 
  argument "con" is missing, with no default
Calls: f -> close
> f(NULL)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "NULL"
Calls: f -> close
> f(,NULL)
Error in close(con$original, ...) : 
  argument "con" is missing, with no default
Calls: f -> close
> f(NULL,NULL)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "NULL"
Calls: f -> close
> f(list())
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "NULL"
Calls: f -> close
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "NULL"
Calls: f -> close
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "NULL"
Calls: f -> close
> f(l0,l0)
Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Error: $ operator is invalid for atomic vectors
> f(df0,df0)
Error in UseMethod("close") : 
  no applicable method for 'close' applied to an object of class "NULL"
Calls: f -> close
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  closeAllConnections  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("closeAllConnections", pos = 'package:base')
> f()
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  col  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("col", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : a matrix-like object is required as argument to 'col'
> f(,NULL)
Error in if (as.factor) { : argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (as.factor) { : argument is of length zero
Calls: f
> f(list())
Error in f(list()) : 
  a matrix-like object is required as argument to 'col'
> f(l0)
Error in f(l0) : a matrix-like object is required as argument to 'col'
> f(c0)
Error in f(c0) : a matrix-like object is required as argument to 'col'
> f(m0)
<0 x 0 matrix>
> f(df0)
     [,1]
> f(FALSE)
Error in f(FALSE) : a matrix-like object is required as argument to 'col'
> f(list(),list())
Error in if (as.factor) { : argument is of length zero
Calls: f
> f(l0,l0)
Error in if (as.factor) { : argument is of length zero
Calls: f
> f(c0,c0)
Error in if (as.factor) { : argument is of length zero
Calls: f
> f(df0,df0)
Error in if (as.factor) { : argument is not interpretable as logical
Calls: f
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  a matrix-like object is required as argument to 'col'
> 
> ##  colMeans  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("colMeans", pos = 'package:base')
> f()
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL)
Error in f(NULL) : 'x' must be an array of at least two dimensions
> f(,NULL)
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL,NULL)
Error in f(NULL, NULL) : 'x' must be an array of at least two dimensions
> f(list())
Error in f(list()) : 'x' must be an array of at least two dimensions
> f(l0)
Error in f(l0) : 'x' must be an array of at least two dimensions
> f(c0)
Error in f(c0) : 'x' must be an array of at least two dimensions
> f(m0)
numeric(0)
> f(df0)
 c0 
NaN 
> f(FALSE)
Error in f(FALSE) : 'x' must be an array of at least two dimensions
> f(list(),list())
Error in f(list(), list()) : 
  'x' must be an array of at least two dimensions
> f(l0,l0)
Error in f(l0, l0) : 'x' must be an array of at least two dimensions
> f(c0,c0)
Error in f(c0, c0) : 'x' must be an array of at least two dimensions
> f(df0,df0)
Error in f(df0, df0) : invalid 'na.rm' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'x' must be an array of at least two dimensions
> 
> ##  colSums  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("colSums", pos = 'package:base')
> f()
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL)
Error in f(NULL) : 'x' must be an array of at least two dimensions
> f(,NULL)
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL,NULL)
Error in f(NULL, NULL) : 'x' must be an array of at least two dimensions
> f(list())
Error in f(list()) : 'x' must be an array of at least two dimensions
> f(l0)
Error in f(l0) : 'x' must be an array of at least two dimensions
> f(c0)
Error in f(c0) : 'x' must be an array of at least two dimensions
> f(m0)
numeric(0)
> f(df0)
c0 
 0 
> f(FALSE)
Error in f(FALSE) : 'x' must be an array of at least two dimensions
> f(list(),list())
Error in f(list(), list()) : 
  'x' must be an array of at least two dimensions
> f(l0,l0)
Error in f(l0, l0) : 'x' must be an array of at least two dimensions
> f(c0,c0)
Error in f(c0, c0) : 'x' must be an array of at least two dimensions
> f(df0,df0)
Error in f(df0, df0) : invalid 'na.rm' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'x' must be an array of at least two dimensions
> 
> ##  colnames  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("colnames", pos = 'package:base')
> f()
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL)
NULL
> f(,NULL)
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL,NULL)
Error in if (do.NULL) NULL else if (nc > 0L) paste0(prefix, seq_len(nc)) else character() : 
  argument is of length zero
Calls: f
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
[1] "c0"
> f(FALSE)
NULL
> f(list(),list())
Error in if (do.NULL) NULL else if (nc > 0L) paste0(prefix, seq_len(nc)) else character() : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (do.NULL) NULL else if (nc > 0L) paste0(prefix, seq_len(nc)) else character() : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (do.NULL) NULL else if (nc > 0L) paste0(prefix, seq_len(nc)) else character() : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in is.data.frame(x) && do.NULL : invalid 'y' type in 'x && y'
Calls: f
> f(FALSE,FALSE)
[1] "col1"
> 
> ##  colnames<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("colnames<-", pos = 'package:base')
> f()
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : 
  attempt to set 'colnames' on an object with less than two dimensions
> f(l0,l0)
Error in f(l0, l0) : 
  attempt to set 'colnames' on an object with less than two dimensions
> f(c0,c0)
Error in f(c0, c0) : 
  attempt to set 'colnames' on an object with less than two dimensions
> f(df0,df0)
[1] integer(0)
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  attempt to set 'colnames' on an object with less than two dimensions
> 
> ##  commandArgs  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("commandArgs", pos = 'package:base')
> f()
[1] "/home/aviral/projects/r/bin/exec/R" "--vanilla"                         
> f(NULL)
Error in if (trailingOnly) { : argument is of length zero
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in if (trailingOnly) { : argument is of length zero
Calls: f
> f(l0)
Error in if (trailingOnly) { : argument is of length zero
Calls: f
> f(c0)
Error in if (trailingOnly) { : argument is of length zero
Calls: f
> f(m0)
Error in if (trailingOnly) { : argument is of length zero
Calls: f
> f(df0)
Error in if (trailingOnly) { : argument is not interpretable as logical
Calls: f
> f(FALSE)
[1] "/home/aviral/projects/r/bin/exec/R" "--vanilla"                         
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  comment  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("comment", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  comment<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("comment<-", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : attempt to set invalid 'comment' attribute
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : attempt to set invalid 'comment' attribute
> 
> ##  complex  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("complex", pos = 'package:base')
> f()
complex(0)
> f(NULL)
Error in f(NULL) : invalid length
> f(,NULL)
complex(0)
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid length
> f(list())
Error in f(list()) : invalid length
> f(l0)
Error in f(l0) : invalid length
> f(c0)
Error in f(c0) : invalid length
> f(m0)
Error in f(m0) : invalid length
> f(df0)
Error in f(df0) : invalid length
> f(FALSE)
complex(0)
> f(list(),list())
Error in f(list(), list()) : invalid length
> f(l0,l0)
Error in f(l0, l0) : invalid length
> f(c0,c0)
Error in f(c0, c0) : invalid length
> f(df0,df0)
Error in f(df0, df0) : invalid length
> f(FALSE,FALSE)
[1] 0+0i
> 
> ##  computeRestarts  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("computeRestarts", pos = 'package:base')
> f()
[[1]]
<restart: abort >

> f(NULL)
[[1]]
<restart: abort >

> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[[1]]
<restart: abort >

> f(l0)
[[1]]
<restart: abort >

> f(c0)
[[1]]
<restart: abort >

> f(m0)
[[1]]
<restart: abort >

> f(df0)
[[1]]
<restart: abort >

> f(FALSE)
[[1]]
<restart: abort >

> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  conditionCall  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("conditionCall", pos = 'package:base')
> f()
Error in UseMethod("conditionCall") : 
  no applicable method for 'conditionCall' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("conditionCall") : 
  no applicable method for 'conditionCall' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in UseMethod("conditionCall") : 
  no applicable method for 'conditionCall' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("conditionCall") : 
  no applicable method for 'conditionCall' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("conditionCall") : 
  no applicable method for 'conditionCall' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("conditionCall") : 
  no applicable method for 'conditionCall' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("conditionCall") : 
  no applicable method for 'conditionCall' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("conditionCall") : 
  no applicable method for 'conditionCall' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  conditionCall.condition  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("conditionCall.condition", pos = 'package:base')
> f()
Error in f() : argument "c" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
NULL
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  conditionMessage  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("conditionMessage", pos = 'package:base')
> f()
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  conditionMessage.condition  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("conditionMessage.condition", pos = 'package:base')
> f()
Error in f() : argument "c" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
NULL
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  conflicts  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("conflicts", pos = 'package:base')
> f()
[1] "c0"        "body<-"    "kronecker"
> f(NULL)
Error in f(NULL) : argument 'where' of length 0
> f(,NULL)
Error in if (detail) { : argument is of length zero
Calls: f
> f(NULL,NULL)
Error in f(NULL, NULL) : argument 'where' of length 0
> f(list())
Error in f(list()) : argument 'where' of length 0
> f(l0)
Error in f(l0) : argument 'where' of length 0
> f(c0)
Error in f(c0) : argument 'where' of length 0
> f(m0)
Error in f(m0) : argument 'where' of length 0
> f(df0)
character(0)
> f(FALSE)
Error in as.environment(pos) : invalid object for 'as.environment'
Calls: f -> objects
> f(list(),list())
Error in f(list(), list()) : argument 'where' of length 0
> f(l0,l0)
Error in f(l0, l0) : argument 'where' of length 0
> f(c0,c0)
Error in f(c0, c0) : argument 'where' of length 0
> f(df0,df0)
Error in if (detail) { : argument is not interpretable as logical
Calls: f
> f(FALSE,FALSE)
Error in as.environment(pos) : invalid object for 'as.environment'
Calls: f -> objects
> 
> ##  contributors  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("contributors", pos = 'package:base')
> f()
R is a project which is attempting to provide a modern piece of
statistical software for the GNU suite of software.

The current R is the result of a collaborative effort with
contributions from all over the world.


Authors of R.

R was initially written by Robert Gentleman and Ross Ihaka—also known as "R & R"
of the Statistics Department of the University of Auckland.

Since mid-1997 there has been a core group with write access to the R
source, currently consisting of

Douglas Bates
John Chambers
Peter Dalgaard
Seth Falcon
Robert Gentleman
Kurt Hornik
Ross Ihaka
Michael Lawrence
Friedrich Leisch
Uwe Ligges
Thomas Lumley
Martin Maechler
Martin Morgan
Duncan Murdoch
Paul Murrell
Martyn Plummer
Brian Ripley
Deepayan Sarkar
Duncan Temple Lang
Luke Tierney
Simon Urbanek

plus Heiner Schwarte up to October 1999, Guido Masarotto up to June 2003 and
Stefano Iacus up to July 2014.

Current R-core members can be contacted via email to R-project.org
with name made up by replacing spaces by dots in the name listed above.

(The authors of code from other projects included in the R distribution
are listed in the COPYRIGHTS file.)

R would not be what it is today without the invaluable help of these
people, who contributed by donating code, bug fixes and documentation:

Valerio Aimale, Thomas Baier, Henrik Bengtsson, Roger Bivand,
Ben Bolker, David Brahm, G"oran Brostr"om, Patrick Burns, Vince Carey,
Saikat DebRoy, Matt Dowle, Brian D'Urso, Lyndon Drake, Dirk Eddelbuettel,
Claus Ekstrom, Sebastian Fischmeister, John Fox, Paul Gilbert,
Yu Gong, Gabor Grothendieck, Frank E Harrell Jr, Torsten Hothorn,
Robert King, Kjetil Kjernsmo, Roger Koenker, Philippe Lambert,
Jan de Leeuw, Jim Lindsey, Patrick Lindsey, Catherine Loader,
Gordon Maclean, John Maindonald, David Meyer, Ei-ji Nakama,
Jens Oehlschaegel, Steve Oncley, Richard O'Keefe, Hubert Palme,
Roger D. Peng, Jose' C. Pinheiro, Tony Plate, Anthony Rossini,
Jonathan Rougier, Petr Savicky, Guenther Sawitzki, Marc Schwartz,
Arun Srinivasan, Detlef Steuer, Bill Simpson, Gordon Smyth, Adrian Trapletti,
Terry Therneau, Rolf Turner, Bill Venables, Gregory R. Warnes,
Andreas Weingessel, Morten Welinder, James Wettenhall, Simon Wood, and
Achim Zeileis.

Others have written code that has been adopted by R and is
acknowledged in the code files, including

J. D. Beasley, David J. Best, Richard Brent, Kevin Buhr, Michael
A. Covington, Bill Cleveland, Robert Cleveland,, G. W. Cran,
C. G. Ding, Ulrich Drepper, Paul Eggert, J. O. Evans, David M. Gay,
H. Frick, G. W. Hill, Richard H. Jones, Eric Grosse, Shelby Haberman,
Bruno Haible, John Hartigan, Andrew Harvey, Trevor Hastie, Min Long
Lam, George Marsaglia, K. J. Martin, Gordon Matzigkeit,
C. R. Mckenzie, Jean McRae, Cyrus Mehta, Fionn Murtagh, John C. Nash,
Finbarr O'Sullivan, R. E. Odeh, William Patefield, Nitin Patel, Alan
Richardson, D. E. Roberts, Patrick Royston, Russell Lenth, Ming-Jen
Shyu, Richard C. Singleton, S. G. Springer, Supoj Sutanthavibul, Irma
Terpenning, G. E. Thomas, Rob Tibshirani, Wai Wan Tsang, Berwin
Turlach, Gary V. Vaughan, Michael Wichura, Jingbo Wang, M. A. Wong,
and the Free Software Foundation (for autoconf code and utilities).
See also files under src/extras.

Many more, too numerous to mention here, have contributed by sending bug
reports and suggesting various improvements.

Simon Davies whilst at the University of Auckland wrote the original
version of glm().

Julian Harris and Wing Kwong (Tiki) Wan whilst at the University of
Auckland assisted Ross Ihaka with the original Macintosh port.

R was inspired by the S environment which has been principally
developed by John Chambers, with substantial input from Douglas Bates,
Rick Becker, Bill Cleveland, Trevor Hastie, Daryl Pregibon and
Allan Wilks.

A special debt is owed to John Chambers who has graciously contributed
advice and encouragement in the early days of R and later became a
member of the core team.



The R Foundation may decide to give out <first.lastname>@R-project.org
email addresses to contributors to the R Project (even without making them
members of the R Foundation) when in the view of the R Foundation this
would help advance the R project.

The R Core Group, Roger Bivand, Dirk Eddelbuettel, John Fox, Torsten
Hothorn, Stefano Iacus, Marc Schwartz, Bill Venables, Hadley Wickham
and Achim Zeileis are the ordinary members of the R Foundation.  In
addition, David Meyer and Simon Wood are also e-addressable by
<Firstname>.<Lastname>@R-project.org.

> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  cos  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cos", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'cos' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'cos' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to 'cos' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'cos' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'cos' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'cos' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'cos' which requires 1
> 
> ##  cosh  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cosh", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'cosh' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'cosh' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'cosh' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'cosh' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'cosh' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'cosh' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'cosh' which requires 1
> 
> ##  cospi  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cospi", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'cospi' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'cospi' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'cospi' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'cospi' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'cospi' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'cospi' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'cospi' which requires 1
> 
> ##  crossprod  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("crossprod", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in crossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in crossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(list())
Error in crossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(l0)
     [,1]
[1,]    0
> f(c0)
Error in crossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in crossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(FALSE)
     [,1]
[1,]    0
> f(list(),list())
Error in crossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(l0,l0)
     [,1]
[1,]    0
> f(c0,c0)
Error in crossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(df0,df0)
Error in crossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(FALSE,FALSE)
     [,1]
[1,]    0
> 
> ##  cummax  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cummax", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'cummax' which requires 1
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'cummax' which requires 1
> f(list())
numeric(0)
> f(l0)
integer(0)
> f(c0)
numeric(0)
> f(m0)
numeric(0)
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'cummax' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'cummax' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'cummax' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'cummax' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'cummax' which requires 1
> 
> ##  cummin  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cummin", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'cummin' which requires 1
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'cummin' which requires 1
> f(list())
numeric(0)
> f(l0)
integer(0)
> f(c0)
numeric(0)
> f(m0)
numeric(0)
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'cummin' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'cummin' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'cummin' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'cummin' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'cummin' which requires 1
> 
> ##  cumprod  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cumprod", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'cumprod' which requires 1
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'cumprod' which requires 1
> f(list())
numeric(0)
> f(l0)
numeric(0)
> f(c0)
numeric(0)
> f(m0)
numeric(0)
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'cumprod' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'cumprod' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'cumprod' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'cumprod' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'cumprod' which requires 1
> 
> ##  cumsum  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cumsum", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'cumsum' which requires 1
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'cumsum' which requires 1
> f(list())
numeric(0)
> f(l0)
integer(0)
> f(c0)
numeric(0)
> f(m0)
numeric(0)
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'cumsum' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'cumsum' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'cumsum' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'cumsum' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'cumsum' which requires 1
> 
> ##  curlGetHeaders  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("curlGetHeaders", pos = 'package:base')
> f()
Error in f() : argument "url" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid url argument
> f(,NULL)
Error in f(, NULL) : argument "url" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid url argument
> f(list())
Error in f(list()) : invalid url argument
> f(l0)
Error in f(l0) : invalid url argument
> f(c0)
Error in f(c0) : invalid url argument
> f(m0)
Error in f(m0) : invalid url argument
> f(df0)
Error in f(df0) : invalid url argument
> f(FALSE)
Error in f(FALSE) : invalid url argument
> f(list(),list())
Error in f(list(), list()) : invalid url argument
> f(l0,l0)
Error in f(l0, l0) : invalid url argument
> f(c0,c0)
Error in f(c0, c0) : invalid url argument
> f(df0,df0)
Error in f(df0, df0) : invalid url argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid url argument
> 
> ##  cut  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cut", pos = 'package:base')
> f()
Error in cut.default() : argument "x" is missing, with no default
Calls: f -> cut.default
> f(NULL)
Error in cut.default(NULL) : 'x' must be numeric
Calls: f -> cut.default
> f(,NULL)
Error in cut.default(, NULL) : argument "x" is missing, with no default
Calls: f -> cut.default
> f(NULL,NULL)
Error in cut.default(NULL, NULL) : 'x' must be numeric
Calls: f -> cut.default
> f(list())
Error in cut.default(list()) : 'x' must be numeric
Calls: f -> cut.default
> f(l0)
Error in cut.default(l0) : 'x' must be numeric
Calls: f -> cut.default
> f(c0)
Error in cut.default(c0) : 'x' must be numeric
Calls: f -> cut.default
> f(m0)
Error in cut.default(m0) : argument "breaks" is missing, with no default
Calls: f -> cut.default
> f(df0)
Error in cut.default(df0) : 'x' must be numeric
Calls: f -> cut.default
> f(FALSE)
Error in cut.default(FALSE) : 'x' must be numeric
Calls: f -> cut.default
> f(list(),list())
Error in cut.default(list(), list()) : 'x' must be numeric
Calls: f -> cut.default
> f(l0,l0)
Error in cut.default(l0, l0) : 'x' must be numeric
Calls: f -> cut.default
> f(c0,c0)
Error in cut.default(c0, c0) : 'x' must be numeric
Calls: f -> cut.default
> f(df0,df0)
Error in cut.default(df0, df0) : 'x' must be numeric
Calls: f -> cut.default
> f(FALSE,FALSE)
Error in cut.default(FALSE, FALSE) : 'x' must be numeric
Calls: f -> cut.default
> 
> ##  cut.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cut.Date", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'x' must be a date-time object
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'x' must be a date-time object
> f(list())
Error in f(list()) : 'x' must be a date-time object
> f(l0)
Error in f(l0) : 'x' must be a date-time object
> f(c0)
Error in f(c0) : 'x' must be a date-time object
> f(m0)
Error in f(m0) : 'x' must be a date-time object
> f(df0)
Error in f(df0) : 'x' must be a date-time object
> f(FALSE)
Error in f(FALSE) : 'x' must be a date-time object
> f(list(),list())
Error in f(list(), list()) : 'x' must be a date-time object
> f(l0,l0)
Error in f(l0, l0) : 'x' must be a date-time object
> f(c0,c0)
Error in f(c0, c0) : 'x' must be a date-time object
> f(df0,df0)
Error in f(df0, df0) : 'x' must be a date-time object
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'x' must be a date-time object
> 
> ##  cut.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cut.POSIXt", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'x' must be a date-time object
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'x' must be a date-time object
> f(list())
Error in f(list()) : 'x' must be a date-time object
> f(l0)
Error in f(l0) : 'x' must be a date-time object
> f(c0)
Error in f(c0) : 'x' must be a date-time object
> f(m0)
Error in f(m0) : 'x' must be a date-time object
> f(df0)
Error in f(df0) : 'x' must be a date-time object
> f(FALSE)
Error in f(FALSE) : 'x' must be a date-time object
> f(list(),list())
Error in f(list(), list()) : 'x' must be a date-time object
> f(l0,l0)
Error in f(l0, l0) : 'x' must be a date-time object
> f(c0,c0)
Error in f(c0, c0) : 'x' must be a date-time object
> f(df0,df0)
Error in f(df0, df0) : 'x' must be a date-time object
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'x' must be a date-time object
> 
> ##  cut.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cut.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'x' must be numeric
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'x' must be numeric
> f(list())
Error in f(list()) : 'x' must be numeric
> f(l0)
Error in f(l0) : 'x' must be numeric
> f(c0)
Error in f(c0) : 'x' must be numeric
> f(m0)
Error in f(m0) : argument "breaks" is missing, with no default
> f(df0)
Error in f(df0) : 'x' must be numeric
> f(FALSE)
Error in f(FALSE) : 'x' must be numeric
> f(list(),list())
Error in f(list(), list()) : 'x' must be numeric
> f(l0,l0)
Error in f(l0, l0) : 'x' must be numeric
> f(c0,c0)
Error in f(c0, c0) : 'x' must be numeric
> f(df0,df0)
Error in f(df0, df0) : 'x' must be numeric
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'x' must be numeric
> 
> ##  dQuote  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dQuote", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "\"integer(0)\""
> f(FALSE)
[1] "\"FALSE\""
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  data.class  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("data.class", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] "list"
> f(l0)
[1] "logical"
> f(c0)
[1] "character"
> f(m0)
[1] "matrix"
> f(df0)
[1] "data.frame"
> f(FALSE)
[1] "logical"
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("data.frame", pos = 'package:base')
> f()
data frame with 0 columns and 0 rows
> f(NULL)
data frame with 0 columns and 0 rows
> f(,NULL)
data frame with 0 columns and 0 rows
> f(NULL,NULL)
data frame with 0 columns and 0 rows
> f(list())
data frame with 0 columns and 0 rows
> f(l0)
[1] l0
<0 rows> (or 0-length row.names)
> f(c0)
[1] c0
<0 rows> (or 0-length row.names)
> f(m0)
data frame with 0 columns and 0 rows
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
  FALSE.
1  FALSE
> f(list(),list())
data frame with 0 columns and 0 rows
> f(l0,l0)
[1] l0   l0.1
<0 rows> (or 0-length row.names)
> f(c0,c0)
[1] c0   c0.1
<0 rows> (or 0-length row.names)
> f(df0,df0)
[1] c0   c0.1
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
  FALSE. FALSE..1
1  FALSE    FALSE
> 
> ##  data.matrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("data.matrix", pos = 'package:base')
> f()
Error in is.data.frame(frame) : 
  argument "frame" is missing, with no default
Calls: f -> is.data.frame
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in is.data.frame(frame) : 
  argument "frame" is missing, with no default
Calls: f -> is.data.frame
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(list())
     [,1]
> f(l0)
     [,1]
> f(c0)
     [,1]
> f(m0)
<0 x 0 matrix>
> f(df0)
     c0
> f(FALSE)
      [,1]
[1,] FALSE
> f(list(),list())
     [,1]
> f(l0,l0)
     [,1]
> f(c0,c0)
     [,1]
> f(df0,df0)
     c0
> f(FALSE,FALSE)
      [,1]
[1,] FALSE
> 
> ##  date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("date", pos = 'package:base')
> f()
[1] "Sun Sep  4 18:08:00 2016"
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  debug  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("debug", pos = 'package:base')
> f()
Error in f() : argument "fun" is missing, with no default
> f(NULL)
Error in debug(fun, text, condition) : argument must be a function
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "fun" is missing, with no default
> f(NULL,NULL)
Error in debug(fun, text, condition) : argument must be a function
Calls: f
> f(list())
Error in debug(fun, text, condition) : argument must be a function
Calls: f
> f(l0)
Error in debug(fun, text, condition) : argument must be a function
Calls: f
> f(c0)
Error in debug(fun, text, condition) : argument must be a function
Calls: f
> f(m0)
Error in debug(fun, text, condition) : argument must be a function
Calls: f
> f(df0)
Error in debug(fun, text, condition) : argument must be a function
Calls: f
> f(FALSE)
Error in debug(fun, text, condition) : argument must be a function
Calls: f
> f(list(),list())
Error in debug(fun, text, condition) : argument must be a function
Calls: f
> f(l0,l0)
Error in debug(fun, text, condition) : argument must be a function
Calls: f
> f(c0,c0)
Error in debug(fun, text, condition) : argument must be a function
Calls: f
> f(df0,df0)
Error in debug(fun, text, condition) : argument must be a function
Calls: f
> f(FALSE,FALSE)
Error in debug(fun, text, condition) : argument must be a function
Calls: f
> 
> ##  debuggingState  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("debuggingState", pos = 'package:base')
> f()
[1] TRUE
> f(NULL)
[1] TRUE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] TRUE
> f(l0)
[1] TRUE
> f(c0)
[1] TRUE
> f(m0)
[1] TRUE
> f(df0)
Error in f(df0) : Value for 'debuggingState' must be TRUE or FALSE
> f(FALSE)
[1] TRUE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  debugonce  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("debugonce", pos = 'package:base')
> f()
Error in f() : argument "fun" is missing, with no default
> f(NULL)
Error in debugonce(fun, text, condition) : argument must be a function
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "fun" is missing, with no default
> f(NULL,NULL)
Error in debugonce(fun, text, condition) : argument must be a function
Calls: f
> f(list())
Error in debugonce(fun, text, condition) : argument must be a function
Calls: f
> f(l0)
Error in debugonce(fun, text, condition) : argument must be a function
Calls: f
> f(c0)
Error in debugonce(fun, text, condition) : argument must be a function
Calls: f
> f(m0)
Error in debugonce(fun, text, condition) : argument must be a function
Calls: f
> f(df0)
Error in debugonce(fun, text, condition) : argument must be a function
Calls: f
> f(FALSE)
Error in debugonce(fun, text, condition) : argument must be a function
Calls: f
> f(list(),list())
Error in debugonce(fun, text, condition) : argument must be a function
Calls: f
> f(l0,l0)
Error in debugonce(fun, text, condition) : argument must be a function
Calls: f
> f(c0,c0)
Error in debugonce(fun, text, condition) : argument must be a function
Calls: f
> f(df0,df0)
Error in debugonce(fun, text, condition) : argument must be a function
Calls: f
> f(FALSE,FALSE)
Error in debugonce(fun, text, condition) : argument must be a function
Calls: f
> 
> ##  default.stringsAsFactors  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("default.stringsAsFactors", pos = 'package:base')
> f()
[1] TRUE
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  delayedAssign  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("delayedAssign", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid first argument
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid first argument
> f(list())
Error in f(list()) : invalid first argument
> f(l0)
Error in f(l0) : invalid first argument
> f(c0)
Error in f(c0) : invalid first argument
> f(m0)
Error in f(m0) : invalid first argument
> f(df0)
Error in f(df0) : invalid first argument
> f(FALSE)
Error in f(FALSE) : invalid first argument
> f(list(),list())
Error in f(list(), list()) : invalid first argument
> f(l0,l0)
Error in f(l0, l0) : invalid first argument
> f(c0,c0)
Error in f(c0, c0) : invalid first argument
> f(df0,df0)
Error in f(df0, df0) : invalid first argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid first argument
> 
> ##  deparse  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("deparse", pos = 'package:base')
> f()
Error in f() : argument "expr" is missing, with no default
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in f(, NULL) : argument "expr" is missing, with no default
> f(NULL,NULL)
[1] "NULL"
> f(list())
[1] "list()"
> f(l0)
[1] "logical(0)"
> f(c0)
[1] "character(0)"
> f(m0)
[1] "structure(numeric(0), .Dim = c(0L, 0L))"
> f(df0)
[1] "structure(list(c0 = structure(integer(0), .Label = character(0), class = \"factor\")), .Names = \"c0\", row.names = character(0), class = \"data.frame\")"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
[1] "list()"
Warning message:
In f(list(), list()) : invalid 'cutoff' value for 'deparse', using default
> f(l0,l0)
[1] "logical(0)"
Warning message:
In f(l0, l0) : invalid 'cutoff' value for 'deparse', using default
> f(c0,c0)
[1] "character(0)"
Warning message:
In f(c0, c0) : invalid 'cutoff' value for 'deparse', using default
> f(df0,df0)
[1] "structure(list(c0 = structure(integer(0), .Label = character(0), class = \"factor\")), .Names = \"c0\", row.names = character(0), class = \"data.frame\")"
Warning message:
In f(df0, df0) : invalid 'cutoff' value for 'deparse', using default
> f(FALSE,FALSE)
[1] "FALSE"
Warning message:
In f(FALSE, FALSE) : invalid 'cutoff' value for 'deparse', using default
> 
> ##  det  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("det", pos = 'package:base')
> f()
Error in determinant(x, logarithm = TRUE, ...) : 
  argument "x" is missing, with no default
Calls: f -> determinant
> f(NULL)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "NULL"
Calls: f -> determinant
> f(,NULL)
Error in determinant(x, logarithm = TRUE, ...) : 
  argument "x" is missing, with no default
Calls: f -> determinant
> f(NULL,NULL)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "NULL"
Calls: f -> determinant
> f(list())
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "list"
Calls: f -> determinant
> f(l0)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "logical"
Calls: f -> determinant
> f(c0)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "character"
Calls: f -> determinant
> f(m0)
[1] 1
> f(df0)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "data.frame"
Calls: f -> determinant
> f(FALSE)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "logical"
Calls: f -> determinant
> f(list(),list())
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "list"
Calls: f -> determinant
> f(l0,l0)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "logical"
Calls: f -> determinant
> f(c0,c0)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "character"
Calls: f -> determinant
> f(df0,df0)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "data.frame"
Calls: f -> determinant
> f(FALSE,FALSE)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "logical"
Calls: f -> determinant
> 
> ##  detach  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("detach", pos = 'package:base')
> f()
> f(NULL)
> f(,NULL)
Error in search()[[pos]] : 
  attempt to select less than one element in get1index
Calls: f
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'name' argument
> f(list())
> f(l0)
Error in f(l0) : invalid 'name' argument
> f(c0)
Error in f(c0) : invalid 'name' argument
> f(m0)
Error in f(m0) : invalid 'name' argument
> f(df0)
Error in f(df0) : invalid 'name' argument
> f(FALSE)
Error in f(FALSE) : invalid 'name' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'name' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'name' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'name' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'name' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'name' argument
> 
> ##  determinant  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("determinant", pos = 'package:base')
> f()
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "character"
Calls: f
> f(m0)
$modulus
[1] 0
attr(,"logarithm")
[1] TRUE

$sign
[1] 1

attr(,"class")
[1] "det"
> f(df0)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "character"
Calls: f
> f(df0,df0)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "data.frame"
Calls: f
> f(FALSE,FALSE)
Error in UseMethod("determinant") : 
  no applicable method for 'determinant' applied to an object of class "logical"
Calls: f
> 
> ##  determinant.matrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("determinant.matrix", pos = 'package:base')
> f()
Error in ncol(x) : argument "x" is missing, with no default
Calls: f -> ncol
> f(NULL)
Error in if ((n <- ncol(x)) != nrow(x)) stop("'x' must be a square matrix") : 
  argument is of length zero
Calls: f
> f(,NULL)
Error in ncol(x) : argument "x" is missing, with no default
Calls: f -> ncol
> f(NULL,NULL)
Error in if ((n <- ncol(x)) != nrow(x)) stop("'x' must be a square matrix") : 
  argument is of length zero
Calls: f
> f(list())
Error in if ((n <- ncol(x)) != nrow(x)) stop("'x' must be a square matrix") : 
  argument is of length zero
Calls: f
> f(l0)
Error in if ((n <- ncol(x)) != nrow(x)) stop("'x' must be a square matrix") : 
  argument is of length zero
Calls: f
> f(c0)
Error in if ((n <- ncol(x)) != nrow(x)) stop("'x' must be a square matrix") : 
  argument is of length zero
Calls: f
> f(m0)
$modulus
[1] 0
attr(,"logarithm")
[1] TRUE

$sign
[1] 1

attr(,"class")
[1] "det"
> f(df0)
Error in f(df0) : 'x' must be a square matrix
> f(FALSE)
Error in if ((n <- ncol(x)) != nrow(x)) stop("'x' must be a square matrix") : 
  argument is of length zero
Calls: f
> f(list(),list())
Error in if ((n <- ncol(x)) != nrow(x)) stop("'x' must be a square matrix") : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if ((n <- ncol(x)) != nrow(x)) stop("'x' must be a square matrix") : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if ((n <- ncol(x)) != nrow(x)) stop("'x' must be a square matrix") : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in f(df0, df0) : 'x' must be a square matrix
> f(FALSE,FALSE)
Error in if ((n <- ncol(x)) != nrow(x)) stop("'x' must be a square matrix") : 
  argument is of length zero
Calls: f
> 
> ##  dget  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dget", pos = 'package:base')
> f()
Error in parse(file = file, keep.source = keep.source) : 
  argument "file" is missing, with no default
Calls: f -> eval -> parse
> f(NULL)
Error in parse(file = file, keep.source = keep.source) : 
  'file' must be a character string or connection
Calls: f -> eval -> parse
> f(,NULL)
Error in parse(file = file, keep.source = keep.source) : 
  argument "file" is missing, with no default
Calls: f -> eval -> parse
> f(NULL,NULL)
Error in parse(file = file, keep.source = keep.source) : 
  'file' must be a character string or connection
Calls: f -> eval -> parse
> f(list())
Error in parse(file = file, keep.source = keep.source) : 
  'file' must be a character string or connection
Calls: f -> eval -> parse
> f(l0)
Error in parse(file = file, keep.source = keep.source) : 
  'file' must be a character string or connection
Calls: f -> eval -> parse
> f(c0)
Error in if (file == "") { : argument is of length zero
Calls: f -> eval -> parse
> f(m0)
Error in parse(file = file, keep.source = keep.source) : 
  'file' must be a character string or connection
Calls: f -> eval -> parse
> f(df0)
Error in parse(file = file, keep.source = keep.source) : 
  'file' must be a character string or connection
Calls: f -> eval -> parse
> f(FALSE)
Error in parse(file = file, keep.source = keep.source) : 
  'file' must be a character string or connection
Calls: f -> eval -> parse
> f(list(),list())
Error in parse(file = file, keep.source = keep.source) : 
  'file' must be a character string or connection
Calls: f -> eval -> parse
> f(l0,l0)
Error in parse(file = file, keep.source = keep.source) : 
  'file' must be a character string or connection
Calls: f -> eval -> parse
> f(c0,c0)
Error in if (file == "") { : argument is of length zero
Calls: f -> eval -> parse
> f(df0,df0)
Error in parse(file = file, keep.source = keep.source) : 
  'file' must be a character string or connection
Calls: f -> eval -> parse
> f(FALSE,FALSE)
Error in parse(file = file, keep.source = keep.source) : 
  'file' must be a character string or connection
Calls: f -> eval -> parse
> 
> ##  diag  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("diag", pos = 'package:base')
> f()
Error in f() : argument "nrow" is missing, with no default
> f(NULL)
<0 x 0 matrix>
> f(,NULL)
Error in f(, NULL) : invalid 'nrow' value (too large or NA)
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'nrow' value (too large or NA)
> f(list())
<0 x 0 matrix>
> f(l0)
<0 x 0 matrix>
> f(c0)
<0 x 0 matrix>
> f(m0)
numeric(0)
> f(df0)
Error in f(df0) : invalid 'nrow' value (too large or NA)
> f(FALSE)
<0 x 0 matrix>
> f(list(),list())
Error in f(list(), list()) : invalid 'nrow' value (too large or NA)
> f(l0,l0)
Error in f(l0, l0) : invalid 'nrow' value (too large or NA)
> f(c0,c0)
Error in f(c0, c0) : invalid 'nrow' value (too large or NA)
> f(df0,df0)
Error in f(df0, df0) : invalid 'nrow' value (too large or NA)
> f(FALSE,FALSE)
<0 x 0 matrix>
> 
> ##  diag<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("diag<-", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : only matrix diagonals can be replaced
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : only matrix diagonals can be replaced
> f(list())
Error in f(list()) : only matrix diagonals can be replaced
> f(l0)
Error in f(l0) : only matrix diagonals can be replaced
> f(c0)
Error in f(c0) : only matrix diagonals can be replaced
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : only matrix diagonals can be replaced
> f(list(),list())
Error in f(list(), list()) : only matrix diagonals can be replaced
> f(l0,l0)
Error in f(l0, l0) : only matrix diagonals can be replaced
> f(c0,c0)
Error in f(c0, c0) : only matrix diagonals can be replaced
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : only matrix diagonals can be replaced
> 
> ##  diff  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("diff", pos = 'package:base')
> f()
Error in diff.default() : argument "x" is missing, with no default
Calls: f -> diff.default
> f(NULL)
NULL
> f(,NULL)
Error in diff.default(, NULL) : argument "x" is missing, with no default
Calls: f -> diff.default
> f(NULL,NULL)
Error in diff.default(NULL, NULL) : 
  'lag' and 'differences' must be integers >= 1
Calls: f -> diff.default
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
data frame with 0 columns and 0 rows
> f(FALSE)
logical(0)
> f(list(),list())
Error in diff.default(list(), list()) : 
  'lag' and 'differences' must be integers >= 1
Calls: f -> diff.default
> f(l0,l0)
Error in diff.default(l0, l0) : 
  'lag' and 'differences' must be integers >= 1
Calls: f -> diff.default
> f(c0,c0)
Error in diff.default(c0, c0) : 
  'lag' and 'differences' must be integers >= 1
Calls: f -> diff.default
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> diff.default -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<' not meaningful for factors
> f(FALSE,FALSE)
Error in diff.default(FALSE, FALSE) : 
  'lag' and 'differences' must be integers >= 1
Calls: f -> diff.default
> 
> ##  diff.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("diff.Date", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Time difference of  days
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'lag' and 'differences' must be integers >= 1
> f(list())
Time difference of  days
> f(l0)
Time difference of  days
> f(c0)
Time difference of  days
> f(m0)
Time difference of  days
> f(df0)
Time difference of  days
> f(FALSE)
Time difference of  days
> f(list(),list())
Error in f(list(), list()) : 
  'lag' and 'differences' must be integers >= 1
> f(l0,l0)
Error in f(l0, l0) : 'lag' and 'differences' must be integers >= 1
> f(c0,c0)
Error in f(c0, c0) : 'lag' and 'differences' must be integers >= 1
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<' not meaningful for factors
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'lag' and 'differences' must be integers >= 1
> 
> ##  diff.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("diff.POSIXt", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Time difference of  secs
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'lag' and 'differences' must be integers >= 1
> f(list())
Time difference of  secs
> f(l0)
Time difference of  secs
> f(c0)
Time difference of  secs
> f(m0)
Time difference of  secs
> f(df0)
Time difference of  secs
> f(FALSE)
Time difference of  secs
> f(list(),list())
Error in f(list(), list()) : 
  'lag' and 'differences' must be integers >= 1
> f(l0,l0)
Error in f(l0, l0) : 'lag' and 'differences' must be integers >= 1
> f(c0,c0)
Error in f(c0, c0) : 'lag' and 'differences' must be integers >= 1
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<' not meaningful for factors
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'lag' and 'differences' must be integers >= 1
> 
> ##  diff.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("diff.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'lag' and 'differences' must be integers >= 1
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
data frame with 0 columns and 0 rows
> f(FALSE)
logical(0)
> f(list(),list())
Error in f(list(), list()) : 
  'lag' and 'differences' must be integers >= 1
> f(l0,l0)
Error in f(l0, l0) : 'lag' and 'differences' must be integers >= 1
> f(c0,c0)
Error in f(c0, c0) : 'lag' and 'differences' must be integers >= 1
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<' not meaningful for factors
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'lag' and 'differences' must be integers >= 1
> 
> ##  difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("difftime", pos = 'package:base')
> f()
Error in as.POSIXct(time1) : argument "time1" is missing, with no default
Calls: f -> as.POSIXct
> f(NULL)
Error in as.POSIXct.default(time1) : 
  do not know how to convert 'time1' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct(time1) : argument "time1" is missing, with no default
Calls: f -> as.POSIXct
> f(NULL,NULL)
Error in as.POSIXct.default(time1) : 
  do not know how to convert 'time1' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(time1) : 
  do not know how to convert 'time1' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(l0)
Error in as.POSIXct(time2) : argument "time2" is missing, with no default
Calls: f -> as.POSIXct
> f(c0)
Error in as.POSIXct(time2) : argument "time2" is missing, with no default
Calls: f -> as.POSIXct
> f(m0)
Error in as.POSIXct.numeric(time1) : 'origin' must be supplied
Calls: f -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(time1) : 
  do not know how to convert 'time1' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(time1) : 
  do not know how to convert 'time1' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(time1) : 
  do not know how to convert 'time1' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(l0,l0)
Time difference of  secs
> f(c0,c0)
Time difference of  secs
> f(df0,df0)
Error in as.POSIXct.default(time1) : 
  do not know how to convert 'time1' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(time1) : 
  do not know how to convert 'time1' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> 
> ##  digamma  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("digamma", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'digamma' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'digamma' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] NaN
Warning message:
In f(FALSE) : NaNs produced
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'digamma' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'digamma' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'digamma' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'digamma' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'digamma' which requires 1
> 
> ##  dim  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dim", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'dim' which requires 1
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'dim' which requires 1
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
[1] 0 0
> f(df0)
[1] 0 1
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to 'dim' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'dim' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'dim' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'dim' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'dim' which requires 1
> 
> ##  dim.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dim.data.frame", pos = 'package:base')
> f()
Error in .row_names_info(x, 2L) : 
  argument "x" is missing, with no default
Calls: f -> .row_names_info
> f(NULL)
[1] 0 0
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] 0 0
> f(l0)
[1] 0 0
> f(c0)
[1] 0 0
> f(m0)
[1] 0 0
> f(df0)
[1] 0 1
> f(FALSE)
[1] 0 1
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dim<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dim<-", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'dim<-' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to 'dim<-' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : 1 argument passed to 'dim<-' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to 'dim<-' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to 'dim<-' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to 'dim<-' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to 'dim<-' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'dim<-' which requires 2
> f(list(),list())
Error: length-0 dimension vector is invalid
> f(l0,l0)
Error: length-0 dimension vector is invalid
> f(c0,c0)
Error: length-0 dimension vector is invalid
> f(df0,df0)
Error: the dims contain missing values
> f(FALSE,FALSE)
Error: dims [product 0] do not match the length of object [1]
> 
> ##  dimnames  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dimnames", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'dimnames' which requires 1
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'dimnames' which requires 1
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
[[1]]
character(0)

[[2]]
[1] "c0"

> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'dimnames' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'dimnames' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'dimnames' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'dimnames' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'dimnames' which requires 1
> 
> ##  dimnames.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dimnames.data.frame", pos = 'package:base')
> f()
Error in row.names(x) : argument "x" is missing, with no default
Calls: f -> row.names
> f(NULL)
[[1]]
NULL

[[2]]
NULL

> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[[1]]
NULL

[[2]]
NULL

> f(l0)
[[1]]
NULL

[[2]]
NULL

> f(c0)
[[1]]
NULL

[[2]]
NULL

> f(m0)
[[1]]
NULL

[[2]]
NULL

> f(df0)
[[1]]
character(0)

[[2]]
[1] "c0"

> f(FALSE)
[[1]]
NULL

[[2]]
NULL

> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dimnames<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dimnames<-", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'dimnames<-' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to 'dimnames<-' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : 1 argument passed to 'dimnames<-' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to 'dimnames<-' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to 'dimnames<-' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to 'dimnames<-' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to 'dimnames<-' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'dimnames<-' which requires 2
> f(list(),list())
Error: 'dimnames' applied to non-array
> f(l0,l0)
Error: 'dimnames' applied to non-array
> f(c0,c0)
Error: 'dimnames' applied to non-array
> f(df0,df0)
Error in `dimnames<-.data.frame`(df0, df0) : 
  invalid 'dimnames' given for data frame
Calls: f -> dimnames<-.data.frame
> f(FALSE,FALSE)
Error: 'dimnames' applied to non-array
> 
> ##  dimnames<-.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dimnames<-.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'dimnames' given for data frame
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'dimnames' given for data frame
> f(l0,l0)
Error in f(l0, l0) : invalid 'dimnames' given for data frame
> f(c0,c0)
Error in f(c0, c0) : invalid 'dimnames' given for data frame
> f(df0,df0)
Error in f(df0, df0) : invalid 'dimnames' given for data frame
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'dimnames' given for data frame
> 
> ##  dir  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dir", pos = 'package:base')
> f()
  [1] "EmbeddedNuls.csv"           "Embedding"                 
  [3] "Examples"                   "FALSE"                     
  [5] "KernSmooth.Rcheck"          "MASS.Rcheck"               
  [7] "Makefile"                   "Makefile.common"           
  [9] "Makefile.in"                "Makefile.install"          
 [11] "Makefile.win"               "Matrix.Rcheck"             
 [13] "Pkgs"                       "R-intro.R"                 
 [15] "R-intro.Rout"               "R-intro.Rout.save"         
 [17] "README"                     "RecPackages"               
 [19] "Rplot.eps"                  "Rplot.pdf"                 
 [21] "Rplot001.bmp"               "Rplots.pdf"                
 [23] "Rplots1.pdf"                "Rplots10.pdf"              
 [25] "Rplots11.pdf"               "Rplots12.pdf"              
 [27] "Rplots13.pdf"               "Rplots14.pdf"              
 [29] "Rplots15.pdf"               "Rplots16.pdf"              
 [31] "Rplots17.pdf"               "Rplots18.pdf"              
 [33] "Rplots19.pdf"               "Rplots2.pdf"               
 [35] "Rplots20.pdf"               "Rplots21.pdf"              
 [37] "Rplots22.pdf"               "Rplots23.pdf"              
 [39] "Rplots24.pdf"               "Rplots25.pdf"              
 [41] "Rplots26.pdf"               "Rplots27.pdf"              
 [43] "Rplots28.pdf"               "Rplots29.pdf"              
 [45] "Rplots3.pdf"                "Rplots30.pdf"              
 [47] "Rplots31.pdf"               "Rplots32.pdf"              
 [49] "Rplots33.pdf"               "Rplots34.pdf"              
 [51] "Rplots35.pdf"               "Rplots36.pdf"              
 [53] "Rplots37.pdf"               "Rplots38.pdf"              
 [55] "Rplots39.pdf"               "Rplots4.pdf"               
 [57] "Rplots40.pdf"               "Rplots41.pdf"              
 [59] "Rplots42.pdf"               "Rplots43.pdf"              
 [61] "Rplots44.pdf"               "Rplots45.pdf"              
 [63] "Rplots5.pdf"                "Rplots6.pdf"               
 [65] "Rplots7.pdf"                "Rplots8.pdf"               
 [67] "Rplots9.pdf"                "WinUnicode.dat"            
 [69] "annotation.R"               "any-all.R"                 
 [71] "any-all.Rout"               "any-all.Rout.save"         
 [73] "arima.rda"                  "arith-true.R"              
 [75] "arith-true.Rout"            "arith-true.Rout.save"      
 [77] "arith.R"                    "arith.Rout"                
 [79] "arith.Rout.save"            "array-subset.R"            
 [81] "array-subset.Rout"          "boot.Rcheck"               
 [83] "class.Rcheck"               "cluster.Rcheck"            
 [85] "codetools.Rcheck"           "complex.R"                 
 [87] "complex.Rout"               "complex.Rout.save"         
 [89] "d-p-q-r-tests.R"            "d-p-q-r-tests.Rout"        
 [91] "d-p-q-r-tests.Rout.save"    "data"                      
 [93] "datasets.R"                 "datasets.Rout"             
 [95] "datasets.Rout.save"         "datetime.R"                
 [97] "datetime.Rout"              "datetime.Rout.save"        
 [99] "datetime2.R"                "datetime2.Rout"            
[101] "datetime2.Rout.save"        "demos.R"                   
[103] "demos.Rout"                 "demos.Rout.save"           
[105] "demos2.R"                   "demos2.Rout"               
[107] "encodings.R"                "eval-etc.R"                
[109] "eval-etc.Rout"              "eval-etc.Rout.save"        
[111] "ex.gz"                      "exNSS4_1.1.tar.gz"         
[113] "foreign.Rcheck"             "gct-foot.R"                
[115] "iec60559.R"                 "iec60559.Rout"             
[117] "iec60559.Rout.save"         "integer(0)"                
[119] "internet.R"                 "internet.Rout"             
[121] "internet.Rout.save"         "internet2.R"               
[123] "internet2.Rout"             "isas-tests.Rin"            
[125] "isas-tests.Rout"            "isas-tests.Rout.save"      
[127] "lapack.R"                   "lapack.Rout"               
[129] "lapack.Rout.save"           "lattice.Rcheck"            
[131] "libcurl.R"                  "libcurl.Rout"              
[133] "lm-tests.R"                 "lm-tests.Rout"             
[135] "lm-tests.Rout.save"         "method-dispatch.R"         
[137] "method-dispatch.Rout"       "method-dispatch.Rout.save" 
[139] "mgcv.Rcheck"                "myTst2"                    
[141] "nanbug.rda"                 "nlme.Rcheck"               
[143] "nnet.Rcheck"                "no-segfault.R"             
[145] "no-segfault.Rin"            "no-segfault.Rout"          
[147] "ok-errors.R"                "ok-errors.Rout"            
[149] "ok-errors.Rout.save"        "p-qbeta-strict-tst.R"      
[151] "p-qbeta-strict-tst.Rout"    "p-r-random-tests.R"        
[153] "p-r-random-tests.Rout"      "p-r-random-tests.Rout.save"
[155] "pkgA_1.2.tar.gz"            "pkgB_1.0.tar.gz"           
[157] "primitives.R"               "primitives.Rout"           
[159] "print-tests.R"              "print-tests.Rout"          
[161] "print-tests.Rout.save"      "r-strict-tst.R"            
[163] "r-strict-tst.Rout"          "reg-BLAS.R"                
[165] "reg-BLAS.Rout"              "reg-IO.R"                  
[167] "reg-IO.Rout"                "reg-IO.Rout.save"          
[169] "reg-IO2.R"                  "reg-IO2.Rout"              
[171] "reg-IO2.Rout.save"          "reg-S4.R"                  
[173] "reg-S4.Rout"                "reg-S4.Rout.save"          
[175] "reg-examples-1.pdf"         "reg-examples-2.pdf"        
[177] "reg-examples-3.pdf"         "reg-examples1.R"           
[179] "reg-examples1.Rout"         "reg-examples2.R"           
[181] "reg-examples2.Rout"         "reg-examples3.R"           
[183] "reg-examples3.Rout"         "reg-examples3.Rout.save"   
[185] "reg-packages.R"             "reg-packages.Rout"         
[187] "reg-plot-latin1.R"          "reg-plot-latin1.Rout"      
[189] "reg-plot-latin1.pdf"        "reg-plot-latin1.pdf.save"  
[191] "reg-plot.R"                 "reg-plot.Rout"             
[193] "reg-plot.Rout.save"         "reg-plot.pdf"              
[195] "reg-plot.pdf.save"          "reg-tests-1a.R"            
[197] "reg-tests-1a.Rout"          "reg-tests-1a.pdf"          
[199] "reg-tests-1b.R"             "reg-tests-1b.Rout"         
[201] "reg-tests-1b.pdf"           "reg-tests-1c.R"            
[203] "reg-tests-1c.Rout"          "reg-tests-1c.pdf"          
[205] "reg-tests-2.R"              "reg-tests-2.Rout"          
[207] "reg-tests-2.Rout.save"      "reg-tests-2.pdf"           
[209] "reg-tests-3.R"              "reg-tests-3.Rout"          
[211] "reg-tests-3.Rout.save"      "reg-tests-3.pdf"           
[213] "reg-win.R"                  "rpart.Rcheck"              
[215] "simple-true.R"              "simple-true.Rout"          
[217] "simple-true.Rout.save"      "spatial.Rcheck"            
[219] "survival.Rcheck"            "test-system.R"             
[221] "test-system.Rout.save"      "test-system2.c"            
[223] "testit-Ex.R.save"           "testit.Rd"                 
[225] "testit.html.save"           "testit.tex.save"           
[227] "testit.txt.save"            "utf8-regex.R"              
[229] "utf8-regex.Rout"            "ver20-Ex.R.save"           
[231] "ver20.Rd"                   "ver20.html.save"           
[233] "ver20.tex.save"             "ver20.txt.save"            
> f(NULL)
Error in f(NULL) : invalid 'path' argument
> f(,NULL)
  [1] "EmbeddedNuls.csv"           "Embedding"                 
  [3] "Examples"                   "FALSE"                     
  [5] "KernSmooth.Rcheck"          "MASS.Rcheck"               
  [7] "Makefile"                   "Makefile.common"           
  [9] "Makefile.in"                "Makefile.install"          
 [11] "Makefile.win"               "Matrix.Rcheck"             
 [13] "Pkgs"                       "R-intro.R"                 
 [15] "R-intro.Rout"               "R-intro.Rout.save"         
 [17] "README"                     "RecPackages"               
 [19] "Rplot.eps"                  "Rplot.pdf"                 
 [21] "Rplot001.bmp"               "Rplots.pdf"                
 [23] "Rplots1.pdf"                "Rplots10.pdf"              
 [25] "Rplots11.pdf"               "Rplots12.pdf"              
 [27] "Rplots13.pdf"               "Rplots14.pdf"              
 [29] "Rplots15.pdf"               "Rplots16.pdf"              
 [31] "Rplots17.pdf"               "Rplots18.pdf"              
 [33] "Rplots19.pdf"               "Rplots2.pdf"               
 [35] "Rplots20.pdf"               "Rplots21.pdf"              
 [37] "Rplots22.pdf"               "Rplots23.pdf"              
 [39] "Rplots24.pdf"               "Rplots25.pdf"              
 [41] "Rplots26.pdf"               "Rplots27.pdf"              
 [43] "Rplots28.pdf"               "Rplots29.pdf"              
 [45] "Rplots3.pdf"                "Rplots30.pdf"              
 [47] "Rplots31.pdf"               "Rplots32.pdf"              
 [49] "Rplots33.pdf"               "Rplots34.pdf"              
 [51] "Rplots35.pdf"               "Rplots36.pdf"              
 [53] "Rplots37.pdf"               "Rplots38.pdf"              
 [55] "Rplots39.pdf"               "Rplots4.pdf"               
 [57] "Rplots40.pdf"               "Rplots41.pdf"              
 [59] "Rplots42.pdf"               "Rplots43.pdf"              
 [61] "Rplots44.pdf"               "Rplots45.pdf"              
 [63] "Rplots5.pdf"                "Rplots6.pdf"               
 [65] "Rplots7.pdf"                "Rplots8.pdf"               
 [67] "Rplots9.pdf"                "WinUnicode.dat"            
 [69] "annotation.R"               "any-all.R"                 
 [71] "any-all.Rout"               "any-all.Rout.save"         
 [73] "arima.rda"                  "arith-true.R"              
 [75] "arith-true.Rout"            "arith-true.Rout.save"      
 [77] "arith.R"                    "arith.Rout"                
 [79] "arith.Rout.save"            "array-subset.R"            
 [81] "array-subset.Rout"          "boot.Rcheck"               
 [83] "class.Rcheck"               "cluster.Rcheck"            
 [85] "codetools.Rcheck"           "complex.R"                 
 [87] "complex.Rout"               "complex.Rout.save"         
 [89] "d-p-q-r-tests.R"            "d-p-q-r-tests.Rout"        
 [91] "d-p-q-r-tests.Rout.save"    "data"                      
 [93] "datasets.R"                 "datasets.Rout"             
 [95] "datasets.Rout.save"         "datetime.R"                
 [97] "datetime.Rout"              "datetime.Rout.save"        
 [99] "datetime2.R"                "datetime2.Rout"            
[101] "datetime2.Rout.save"        "demos.R"                   
[103] "demos.Rout"                 "demos.Rout.save"           
[105] "demos2.R"                   "demos2.Rout"               
[107] "encodings.R"                "eval-etc.R"                
[109] "eval-etc.Rout"              "eval-etc.Rout.save"        
[111] "ex.gz"                      "exNSS4_1.1.tar.gz"         
[113] "foreign.Rcheck"             "gct-foot.R"                
[115] "iec60559.R"                 "iec60559.Rout"             
[117] "iec60559.Rout.save"         "integer(0)"                
[119] "internet.R"                 "internet.Rout"             
[121] "internet.Rout.save"         "internet2.R"               
[123] "internet2.Rout"             "isas-tests.Rin"            
[125] "isas-tests.Rout"            "isas-tests.Rout.save"      
[127] "lapack.R"                   "lapack.Rout"               
[129] "lapack.Rout.save"           "lattice.Rcheck"            
[131] "libcurl.R"                  "libcurl.Rout"              
[133] "lm-tests.R"                 "lm-tests.Rout"             
[135] "lm-tests.Rout.save"         "method-dispatch.R"         
[137] "method-dispatch.Rout"       "method-dispatch.Rout.save" 
[139] "mgcv.Rcheck"                "myTst2"                    
[141] "nanbug.rda"                 "nlme.Rcheck"               
[143] "nnet.Rcheck"                "no-segfault.R"             
[145] "no-segfault.Rin"            "no-segfault.Rout"          
[147] "ok-errors.R"                "ok-errors.Rout"            
[149] "ok-errors.Rout.save"        "p-qbeta-strict-tst.R"      
[151] "p-qbeta-strict-tst.Rout"    "p-r-random-tests.R"        
[153] "p-r-random-tests.Rout"      "p-r-random-tests.Rout.save"
[155] "pkgA_1.2.tar.gz"            "pkgB_1.0.tar.gz"           
[157] "primitives.R"               "primitives.Rout"           
[159] "print-tests.R"              "print-tests.Rout"          
[161] "print-tests.Rout.save"      "r-strict-tst.R"            
[163] "r-strict-tst.Rout"          "reg-BLAS.R"                
[165] "reg-BLAS.Rout"              "reg-IO.R"                  
[167] "reg-IO.Rout"                "reg-IO.Rout.save"          
[169] "reg-IO2.R"                  "reg-IO2.Rout"              
[171] "reg-IO2.Rout.save"          "reg-S4.R"                  
[173] "reg-S4.Rout"                "reg-S4.Rout.save"          
[175] "reg-examples-1.pdf"         "reg-examples-2.pdf"        
[177] "reg-examples-3.pdf"         "reg-examples1.R"           
[179] "reg-examples1.Rout"         "reg-examples2.R"           
[181] "reg-examples2.Rout"         "reg-examples3.R"           
[183] "reg-examples3.Rout"         "reg-examples3.Rout.save"   
[185] "reg-packages.R"             "reg-packages.Rout"         
[187] "reg-plot-latin1.R"          "reg-plot-latin1.Rout"      
[189] "reg-plot-latin1.pdf"        "reg-plot-latin1.pdf.save"  
[191] "reg-plot.R"                 "reg-plot.Rout"             
[193] "reg-plot.Rout.save"         "reg-plot.pdf"              
[195] "reg-plot.pdf.save"          "reg-tests-1a.R"            
[197] "reg-tests-1a.Rout"          "reg-tests-1a.pdf"          
[199] "reg-tests-1b.R"             "reg-tests-1b.Rout"         
[201] "reg-tests-1b.pdf"           "reg-tests-1c.R"            
[203] "reg-tests-1c.Rout"          "reg-tests-1c.pdf"          
[205] "reg-tests-2.R"              "reg-tests-2.Rout"          
[207] "reg-tests-2.Rout.save"      "reg-tests-2.pdf"           
[209] "reg-tests-3.R"              "reg-tests-3.Rout"          
[211] "reg-tests-3.Rout.save"      "reg-tests-3.pdf"           
[213] "reg-win.R"                  "rpart.Rcheck"              
[215] "simple-true.R"              "simple-true.Rout"          
[217] "simple-true.Rout.save"      "spatial.Rcheck"            
[219] "survival.Rcheck"            "test-system.R"             
[221] "test-system.Rout.save"      "test-system2.c"            
[223] "testit-Ex.R.save"           "testit.Rd"                 
[225] "testit.html.save"           "testit.tex.save"           
[227] "testit.txt.save"            "utf8-regex.R"              
[229] "utf8-regex.Rout"            "ver20-Ex.R.save"           
[231] "ver20.Rd"                   "ver20.html.save"           
[233] "ver20.tex.save"             "ver20.txt.save"            
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'path' argument
> f(list())
Error in f(list()) : invalid 'path' argument
> f(l0)
Error in f(l0) : invalid 'path' argument
> f(c0)
character(0)
> f(m0)
Error in f(m0) : invalid 'path' argument
> f(df0)
Error in f(df0) : invalid 'path' argument
> f(FALSE)
Error in f(FALSE) : invalid 'path' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'path' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'path' argument
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : invalid 'path' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'path' argument
> 
> ##  dir.create  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dir.create", pos = 'package:base')
> f()
Error in f() : argument "path" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'path' argument
> f(,NULL)
Error in f(, NULL) : argument "path" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'path' argument
> f(list())
Error in f(list()) : invalid 'path' argument
> f(l0)
Error in f(l0) : invalid 'path' argument
> f(c0)
Error in f(c0) : invalid 'path' argument
> f(m0)
Error in f(m0) : invalid 'path' argument
> f(df0)
Error in f(df0) : invalid 'path' argument
> f(FALSE)
Error in f(FALSE) : invalid 'path' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'path' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'path' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'path' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'path' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'path' argument
> 
> ##  dir.exists  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dir.exists", pos = 'package:base')
> f()
Error in f() : argument "paths" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid filename argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid filename argument
> f(l0)
Error in f(l0) : invalid filename argument
> f(c0)
logical(0)
> f(m0)
Error in f(m0) : invalid filename argument
> f(df0)
Error in f(df0) : invalid filename argument
> f(FALSE)
Error in f(FALSE) : invalid filename argument
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dirname  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dirname", pos = 'package:base')
> f()
Error in f() : argument "path" is missing, with no default
> f(NULL)
Error in f(NULL) : a character vector argument expected
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : a character vector argument expected
> f(l0)
Error in f(l0) : a character vector argument expected
> f(c0)
character(0)
> f(m0)
Error in f(m0) : a character vector argument expected
> f(df0)
Error in f(df0) : a character vector argument expected
> f(FALSE)
Error in f(FALSE) : a character vector argument expected
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  do.call  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("do.call", pos = 'package:base')
> f()
Error in f() : argument "args" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "args" is missing, with no default
> f(,NULL)
Error in f(, NULL) : second argument must be a list
> f(NULL,NULL)
Error in f(NULL, NULL) : second argument must be a list
> f(list())
Error in f(list()) : argument "args" is missing, with no default
> f(l0)
Error in f(l0) : argument "args" is missing, with no default
> f(c0)
Error in f(c0) : argument "args" is missing, with no default
> f(m0)
Error in f(m0) : argument "args" is missing, with no default
> f(df0)
Error in f(df0) : argument "args" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "args" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : 
  'what' must be a function or character string
> f(l0,l0)
Error in f(l0, l0) : second argument must be a list
> f(c0,c0)
Error in f(c0, c0) : second argument must be a list
> f(df0,df0)
Error in f(df0, df0) : 'what' must be a function or character string
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : second argument must be a list
> 
> ##  dontCheck  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dontCheck", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  double  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("double", pos = 'package:base')
> f()
numeric(0)
> f(NULL)
Error in f(NULL) : invalid 'length' argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'length' argument
> f(l0)
Error in f(l0) : invalid 'length' argument
> f(c0)
Error in f(c0) : invalid 'length' argument
> f(m0)
Error in f(m0) : invalid 'length' argument
> f(df0)
Error in f(df0) : invalid 'length' argument
> f(FALSE)
Error in f(FALSE) : invalid 'length' argument
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dput  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dput", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'file' must be a character string or connection
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
structure(numeric(0), .Dim = c(0L, 0L))
> f(df0)
structure(list(c0 = structure(integer(0), .Label = character(0), class = "factor")), .Names = "c0", row.names = character(0), class = "data.frame")
> f(FALSE)
FALSE
> f(list(),list())
Error in f(list(), list()) : 
  'file' must be a character string or connection
> f(l0,l0)
Error in f(l0, l0) : 'file' must be a character string or connection
> f(c0,c0)
Error in if (nzchar(file)) { : argument is of length zero
Calls: f
> f(df0,df0)
Error in f(df0, df0) : 'file' must be a character string or connection
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'file' must be a character string or connection
> 
> ##  drop  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("drop", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  droplevels  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("droplevels", pos = 'package:base')
> f()
Error in UseMethod("droplevels") : 
  no applicable method for 'droplevels' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("droplevels") : 
  no applicable method for 'droplevels' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("droplevels") : 
  no applicable method for 'droplevels' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("droplevels") : 
  no applicable method for 'droplevels' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("droplevels") : 
  no applicable method for 'droplevels' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("droplevels") : 
  no applicable method for 'droplevels' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("droplevels") : 
  no applicable method for 'droplevels' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("droplevels") : 
  no applicable method for 'droplevels' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in UseMethod("droplevels") : 
  no applicable method for 'droplevels' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in UseMethod("droplevels") : 
  no applicable method for 'droplevels' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in UseMethod("droplevels") : 
  no applicable method for 'droplevels' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in UseMethod("droplevels") : 
  no applicable method for 'droplevels' applied to an object of class "character"
Calls: f
> f(df0,df0)
Error in droplevels.data.frame(df0, df0) : invalid subscript type 'list'
Calls: f -> droplevels.data.frame
> f(FALSE,FALSE)
Error in UseMethod("droplevels") : 
  no applicable method for 'droplevels' applied to an object of class "logical"
Calls: f
> 
> ##  droplevels.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("droplevels.data.frame", pos = 'package:base')
> f()
Error in vapply(x, is.factor, NA) : 
  argument "x" is missing, with no default
Calls: f -> vapply
> f(NULL)
NULL
> f(,NULL)
Error in vapply(x, is.factor, NA) : 
  argument "x" is missing, with no default
Calls: f -> vapply
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[[1]]
[1] FALSE

> f(list(),list())
Error in f(list(), list()) : invalid subscript type 'list'
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : invalid subscript type 'list'
> f(FALSE,FALSE)
[[1]]
[1] FALSE

> 
> ##  droplevels.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("droplevels.factor", pos = 'package:base')
> f()
Error in factor(x) : argument "x" is missing, with no default
Calls: f -> factor
> f(NULL)
factor(0)
Levels: 
> f(,NULL)
Error in factor(x) : argument "x" is missing, with no default
Calls: f -> factor
> f(NULL,NULL)
factor(0)
Levels: 
> f(list())
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(l0)
factor(0)
Levels: 
> f(c0)
factor(0)
Levels: 
> f(m0)
factor(0)
Levels: 
> f(df0)
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(FALSE)
[1] FALSE
Levels: FALSE
> f(list(),list())
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(l0,l0)
factor(0)
Levels: 
> f(c0,c0)
factor(0)
Levels: 
> f(df0,df0)
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(FALSE,FALSE)
[1] FALSE
Levels: FALSE
> 
> ##  dump  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dump", pos = 'package:base')
> f()
Error in lapply(X = X, FUN = FUN, ...) : 
  argument "list" is missing, with no default
Calls: f -> sapply -> lapply
> f(NULL)
> f(,NULL)
Error in f(, NULL) : argument "list" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'file' must be a character string or connection
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
Error in FUN(X[[i]], ...) : invalid first argument
Calls: f -> sapply -> lapply -> FUN
> f(FALSE)
Error in FUN(X[[i]], ...) : invalid first argument
Calls: f -> sapply -> lapply -> FUN
> f(list(),list())
Error in f(list(), list()) : 
  'file' must be a character string or connection
> f(l0,l0)
Error in f(l0, l0) : 'file' must be a character string or connection
> f(c0,c0)
> f(df0,df0)
Error in f(df0, df0) : 'file' must be a character string or connection
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'file' must be a character string or connection
> 
> ##  duplicated  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("duplicated", pos = 'package:base')
> f()
Error in duplicated.default() : argument "x" is missing, with no default
Calls: f -> duplicated.default
> f(NULL)
logical(0)
> f(,NULL)
Error in duplicated.default(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> duplicated.default
> f(NULL,NULL)
logical(0)
> f(list())
logical(0)
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
logical(0)
> f(FALSE)
[1] FALSE
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  duplicated.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("duplicated.POSIXlt", pos = 'package:base')
> f()
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXct
> f(NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXct
> f(NULL,NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(l0)
Error in NextMethod("duplicated", x) : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod("duplicated", x) : object not specified
Calls: f -> NextMethod
> f(m0)
Error in as.POSIXct.numeric(x) : 'origin' must be supplied
Calls: f -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(l0,l0)
Error in NextMethod("duplicated", x) : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod("duplicated", x) : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> 
> ##  duplicated.array  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("duplicated.array", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : character(0)
> f(,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(NULL,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(list())
Error in f(list()) : character(0)
> f(l0)
Error in f(l0) : character(0)
> f(c0)
Error in f(c0) : character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : dims [product 0] do not match the length of object [1]
> f(FALSE)
Error in f(FALSE) : character(0)
> f(list(),list())
Error: argument 'incomparables != FALSE' is not used (yet)
> f(l0,l0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(c0,c0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : character(0)
> 
> ##  duplicated.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("duplicated.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in do.call("paste", c(x, sep = "\r")) : 
  second argument must be a list
Calls: f -> duplicated -> do.call
> f(,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(NULL,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(list())
logical(0)
> f(l0)
Error in do.call("paste", c(x, sep = "\r")) : 
  second argument must be a list
Calls: f -> duplicated -> do.call
> f(c0)
Error in do.call("paste", c(x, sep = "\r")) : 
  second argument must be a list
Calls: f -> duplicated -> do.call
> f(m0)
Error in do.call("paste", c(x, sep = "\r")) : 
  second argument must be a list
Calls: f -> duplicated -> do.call
> f(df0)
logical(0)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error: argument 'incomparables != FALSE' is not used (yet)
> f(l0,l0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(c0,c0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  duplicated.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("duplicated.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
logical(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
logical(0)
> f(list())
logical(0)
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
logical(0)
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
[1] FALSE
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  duplicated.matrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("duplicated.matrix", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : character(0)
> f(,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(NULL,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(list())
Error in f(list()) : character(0)
> f(l0)
Error in f(l0) : character(0)
> f(c0)
Error in f(c0) : character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : dims [product 0] do not match the length of object [1]
> f(FALSE)
Error in f(FALSE) : character(0)
> f(list(),list())
Error: argument 'incomparables != FALSE' is not used (yet)
> f(l0,l0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(c0,c0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : character(0)
> 
> ##  duplicated.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("duplicated.numeric_version", pos = 'package:base')
> f()
Error in is.numeric_version(x) : argument "x" is missing, with no default
Calls: f -> .encode_numeric_version -> is.numeric_version
> f(NULL)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(,NULL)
Error in is.numeric_version(x) : argument "x" is missing, with no default
Calls: f -> .encode_numeric_version -> is.numeric_version
> f(NULL,NULL)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(list())
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(l0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(c0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(m0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(df0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(FALSE)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(list(),list())
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(l0,l0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(c0,c0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(df0,df0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(FALSE,FALSE)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> 
> ##  dyn.load  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dyn.load", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : character argument expected
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : character argument expected
> f(list())
Error in f(list()) : character argument expected
> f(l0)
Error in f(l0) : character argument expected
> f(c0)
Error in f(c0) : character argument expected
> f(m0)
Error in f(m0) : character argument expected
> f(df0)
Error in f(df0) : character argument expected
> f(FALSE)
Error in f(FALSE) : character argument expected
> f(list(),list())
Error in f(list(), list()) : character argument expected
> f(l0,l0)
Error in f(l0, l0) : character argument expected
> f(c0,c0)
Error in f(c0, c0) : character argument expected
> f(df0,df0)
Error in f(df0, df0) : character argument expected
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : character argument expected
> 
> ##  dyn.unload  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dyn.unload", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : character argument expected
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : character argument expected
> f(l0)
Error in f(l0) : character argument expected
> f(c0)
Error in f(c0) : character argument expected
> f(m0)
Error in f(m0) : character argument expected
> f(df0)
Error in f(df0) : character argument expected
> f(FALSE)
Error in f(FALSE) : character argument expected
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dynGet  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dynGet", pos = 'package:base')
> f()
Error in sQuote(x) : argument "x" is missing, with no default
Calls: f
> f(NULL)
Error in f(NULL) : character(0)
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : character(0)
> f(l0)
Error in f(l0) : character(0)
> f(c0)
Error in f(c0) : character(0)
> f(m0)
Error in f(m0) : character(0)
> f(df0)
Error in f(df0) : 'integer(0)' not found
> f(FALSE)
Error in f(FALSE) : 'FALSE' not found
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  eapply  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("eapply", pos = 'package:base')
> f()
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(NULL)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(,NULL)
Error in match.fun(FUN) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(NULL,NULL)
Error in match.fun(FUN) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(list())
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(l0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(c0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(m0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(df0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(FALSE)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(list(),list())
Error in match.fun(FUN) : 'list()' is not a function, character or symbol
Calls: f -> match.fun
> f(l0,l0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'l0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(c0,c0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'c0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(df0,df0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'df0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(FALSE,FALSE)
Error in match.fun(FUN) : 'FALSE' is not a function, character or symbol
Calls: f -> match.fun
> 
> ##  eigen  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("eigen", pos = 'package:base')
> f()
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> unname -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> unname -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> unname -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> unname -> as.matrix -> as.matrix.default -> array
> f(list())
Error in f(list()) : 0 x 0 matrix
> f(l0)
Error in f(l0) : 0 x 0 matrix
> f(c0)
Error in f(c0) : 0 x 0 matrix
> f(m0)
Error in f(m0) : 0 x 0 matrix
> f(df0)
Error in f(df0) : 0 x 0 matrix
> f(FALSE)
$values
[1] 0

$vectors
     [,1]
[1,]    1

> f(list(),list())
Error in f(list(), list()) : 0 x 0 matrix
> f(l0,l0)
Error in f(l0, l0) : 0 x 0 matrix
> f(c0,c0)
Error in f(c0, c0) : 0 x 0 matrix
> f(df0,df0)
Error in f(df0, df0) : 0 x 0 matrix
> f(FALSE,FALSE)
$values
[1] 0

$vectors
     [,1]
[1,]    1

> 
> ##  emptyenv  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("emptyenv", pos = 'package:base')
> f()
<environment: R_EmptyEnv>
> f(NULL)
Error in f(NULL) : 1 argument passed to 'emptyenv' which requires 0
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'emptyenv' which requires 0
> f(list())
Error in f(list()) : 1 argument passed to 'emptyenv' which requires 0
> f(l0)
Error in f(l0) : 1 argument passed to 'emptyenv' which requires 0
> f(c0)
Error in f(c0) : 1 argument passed to 'emptyenv' which requires 0
> f(m0)
Error in f(m0) : 1 argument passed to 'emptyenv' which requires 0
> f(df0)
Error in f(df0) : 1 argument passed to 'emptyenv' which requires 0
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'emptyenv' which requires 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'emptyenv' which requires 0
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'emptyenv' which requires 0
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'emptyenv' which requires 0
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'emptyenv' which requires 0
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'emptyenv' which requires 0
> 
> ##  enc2native  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("enc2native", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'enc2native' which requires 1
> f(NULL)
Error in f(NULL) : argumemt is not a character vector
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'enc2native' which requires 1
> f(list())
Error in f(list()) : argumemt is not a character vector
> f(l0)
Error in f(l0) : argumemt is not a character vector
> f(c0)
character(0)
> f(m0)
Error in f(m0) : argumemt is not a character vector
> f(df0)
Error in f(df0) : argumemt is not a character vector
> f(FALSE)
Error in f(FALSE) : argumemt is not a character vector
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'enc2native' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'enc2native' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'enc2native' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'enc2native' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'enc2native' which requires 1
> 
> ##  enc2utf8  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("enc2utf8", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'enc2utf8' which requires 1
> f(NULL)
Error in f(NULL) : argumemt is not a character vector
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'enc2utf8' which requires 1
> f(list())
Error in f(list()) : argumemt is not a character vector
> f(l0)
Error in f(l0) : argumemt is not a character vector
> f(c0)
character(0)
> f(m0)
Error in f(m0) : argumemt is not a character vector
> f(df0)
Error in f(df0) : argumemt is not a character vector
> f(FALSE)
Error in f(FALSE) : argumemt is not a character vector
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'enc2utf8' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'enc2utf8' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'enc2utf8' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'enc2utf8' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'enc2utf8' which requires 1
> 
> ##  encodeString  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("encodeString", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
          c0 
"integer(0)" 
attr(,"row.names")
character(0)
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
          c0 
"integer(0)" 
attr(,"row.names")
character(0)
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  endsWith  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("endsWith", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "suffix" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : non-character object(s)
> f(list())
Error in f(list()) : argument "suffix" is missing, with no default
> f(l0)
Error in f(l0) : argument "suffix" is missing, with no default
> f(c0)
Error in f(c0) : argument "suffix" is missing, with no default
> f(m0)
Error in f(m0) : argument "suffix" is missing, with no default
> f(df0)
Error in f(df0) : argument "suffix" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "suffix" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : non-character object(s)
> f(l0,l0)
Error in f(l0, l0) : non-character object(s)
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in f(df0, df0) : non-character object(s)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : non-character object(s)
> 
> ##  enquote  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("enquote", pos = 'package:base')
> f()
Error in f() : argument "cl" is missing, with no default
> f(NULL)
quote(NULL)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
quote(list())
> f(l0)
quote(logical(0))
> f(c0)
quote(character(0))
> f(m0)
quote(numeric(0))
> f(df0)
quote(list(c0 = integer(0)))
> f(FALSE)
quote(FALSE)
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  env.profile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("env.profile", pos = 'package:base')
> f()
Error in f() : argument "env" is missing, with no default
> f(NULL)
Error in f(NULL) : argument must be a hashed environment
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : argument must be a hashed environment
> f(l0)
Error in f(l0) : argument must be a hashed environment
> f(c0)
Error in f(c0) : argument must be a hashed environment
> f(m0)
Error in f(m0) : argument must be a hashed environment
> f(df0)
Error in f(df0) : argument must be a hashed environment
> f(FALSE)
Error in f(FALSE) : argument must be a hashed environment
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  environment  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("environment", pos = 'package:base')
> f()
<environment: R_GlobalEnv>
> f(NULL)
<environment: R_GlobalEnv>
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  environment<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("environment<-", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'environment<-' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to 'environment<-' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : 
  1 argument passed to 'environment<-' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to 'environment<-' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to 'environment<-' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to 'environment<-' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to 'environment<-' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'environment<-' which requires 2
> f(list(),list())
Error: replacement object is not an environment
> f(l0,l0)
Error: replacement object is not an environment
> f(c0,c0)
Error: replacement object is not an environment
> f(df0,df0)
Error: replacement object is not an environment
> f(FALSE,FALSE)
Error: replacement object is not an environment
> 
> ##  environmentIsLocked  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("environmentIsLocked", pos = 'package:base')
> f()
Error in f() : argument "env" is missing, with no default
> f(NULL)
Error in f(NULL) : use of NULL environment is defunct
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : not an environment
> f(l0)
Error in f(l0) : not an environment
> f(c0)
Error in f(c0) : not an environment
> f(m0)
Error in f(m0) : not an environment
> f(df0)
Error in f(df0) : not an environment
> f(FALSE)
Error in f(FALSE) : not an environment
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  environmentName  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("environmentName", pos = 'package:base')
> f()
Error in f() : argument "env" is missing, with no default
> f(NULL)
[1] ""
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] ""
> f(l0)
[1] ""
> f(c0)
[1] ""
> f(m0)
[1] ""
> f(df0)
[1] ""
> f(FALSE)
[1] ""
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  eval  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("eval", pos = 'package:base')
> f()
Error in f() : argument "expr" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "expr" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
Error in f(l0, l0) : invalid 'envir' argument of type 'logical'
> f(c0,c0)
Error in f(c0, c0) : invalid 'envir' argument of type 'character'
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'envir' argument of type 'logical'
> 
> ##  eval.parent  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("eval.parent", pos = 'package:base')
> f()
Error in eval(expr, p) : argument "expr" is missing, with no default
Calls: f -> eval
> f(NULL)
NULL
> f(,NULL)
Error in parent.frame(n + 1) : invalid 'n' value
Calls: f -> parent.frame
> f(NULL,NULL)
Error in parent.frame(n + 1) : invalid 'n' value
Calls: f -> parent.frame
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in n + 1 : non-numeric argument to binary operator
Calls: f -> parent.frame
> f(l0,l0)
Error in parent.frame(n + 1) : invalid 'n' value
Calls: f -> parent.frame
> f(c0,c0)
Error in n + 1 : non-numeric argument to binary operator
Calls: f -> parent.frame
> f(df0,df0)
Error in parent.frame(n + 1) : invalid 'n' value
Calls: f -> parent.frame
In addition: Warning message:
In Ops.factor(left, right) : '+' not meaningful for factors
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  evalq  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("evalq", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
Error in f(l0, l0) : invalid 'envir' argument of type 'logical'
> f(c0,c0)
Error in f(c0, c0) : invalid 'envir' argument of type 'character'
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'envir' argument of type 'logical'
> 
> ##  exists  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("exists", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid first argument
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in as.environment(where) : using 'as.environment(NULL)' is defunct
Calls: f
> f(list())
Error in f(list()) : invalid first argument
> f(l0)
Error in f(l0) : invalid first argument
> f(c0)
Error in f(c0) : invalid first argument
> f(m0)
Error in f(m0) : invalid first argument
> f(df0)
Error in f(df0) : invalid first argument
> f(FALSE)
Error in f(FALSE) : invalid first argument
> f(list(),list())
Error in f(list(), list()) : invalid first argument
> f(l0,l0)
Error in as.environment(where) : invalid object for 'as.environment'
Calls: f
> f(c0,c0)
Error in as.environment(where) : no item called "NA" on the search list
Calls: f
> f(df0,df0)
Error in f(df0, df0) : invalid first argument
> f(FALSE,FALSE)
Error in as.environment(where) : invalid object for 'as.environment'
Calls: f
> 
> ##  exp  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("exp", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'exp' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'exp' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to 'exp' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'exp' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'exp' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'exp' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'exp' which requires 1
> 
> ##  expand.grid  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("expand.grid", pos = 'package:base')
> f()
data frame with 0 columns and 0 rows
> f(NULL)
data frame with 0 columns and 0 rows
> f(,NULL)
[1] Var2
<0 rows> (or 0-length row.names)
> f(NULL,NULL)
[1] Var2
<0 rows> (or 0-length row.names)
> f(list())
data frame with 0 columns and 0 rows
> f(l0)
[1] Var1
<0 rows> (or 0-length row.names)
> f(c0)
[1] Var1
<0 rows> (or 0-length row.names)
> f(m0)
[1] Var1
<0 rows> (or 0-length row.names)
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
   Var1
1 FALSE
> f(list(),list())
[1] Var1 Var2
<0 rows> (or 0-length row.names)
> f(l0,l0)
[1] Var1 Var2
<0 rows> (or 0-length row.names)
> f(c0,c0)
[1] Var1 Var2
<0 rows> (or 0-length row.names)
> f(df0,df0)
  V1 V1
1 NA NA
Warning message:
In format.data.frame(x, digits = digits, na.encode = FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(FALSE,FALSE)
   Var1  Var2
1 FALSE FALSE
> 
> ##  expm1  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("expm1", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'expm1' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'expm1' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'expm1' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'expm1' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'expm1' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'expm1' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'expm1' which requires 1
> 
> ##  expression  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("expression", pos = 'package:base')
> f()
expression()
> f(NULL)
expression(NULL)
> f(,NULL)
expression(, NULL)
> f(NULL,NULL)
expression(NULL, NULL)
> f(list())
expression(list())
> f(l0)
expression(l0)
> f(c0)
expression(c0)
> f(m0)
expression(m0)
> f(df0)
expression(df0)
> f(FALSE)
expression(FALSE)
> f(list(),list())
expression(list(), list())
> f(l0,l0)
expression(l0, l0)
> f(c0,c0)
expression(c0, c0)
> f(df0,df0)
expression(df0, df0)
> f(FALSE,FALSE)
expression(FALSE, FALSE)
> 
> ##  extSoftVersion  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("extSoftVersion", pos = 'package:base')
> f()
                     zlib                     bzlib                        xz 
                  "1.2.8"      "1.0.6, 6-Sept-2010"              "5.1.0alpha" 
                     PCRE                       ICU                       TRE 
        "8.38 2015-11-23"                    "55.1" "TRE 0.8.0 R_fixes (BSD)" 
                    iconv 
             "glibc 2.23" 
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("factor", pos = 'package:base')
> f()
factor(0)
Levels: 
> f(NULL)
factor(0)
Levels: 
> f(,NULL)
factor(0)
Levels: 
> f(NULL,NULL)
factor(0)
Levels: 
> f(list())
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> sort.list
> f(l0)
factor(0)
Levels: 
> f(c0)
factor(0)
Levels: 
> f(m0)
factor(0)
Levels: 
> f(df0)
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> sort.list
> f(FALSE)
[1] FALSE
Levels: FALSE
> f(list(),list())
factor(0)
Levels: 
> f(l0,l0)
factor(0)
Levels: 
> f(c0,c0)
factor(0)
Levels: 
> f(df0,df0)
        c0 
integer(0) 
Levels: integer(0)
> f(FALSE,FALSE)
[1] FALSE
Levels: FALSE
> 
> ##  factorial  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("factorial", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in x + 1 : non-numeric argument to binary operator
Calls: f
> f(l0)
numeric(0)
> f(c0)
Error in x + 1 : non-numeric argument to binary operator
Calls: f
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(x + 1) : non-numeric variable in data frame: c0
Calls: f -> Math.data.frame
In addition: Warning message:
In Ops.factor(left, right) : '+' not meaningful for factors
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  fifo  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("fifo", pos = 'package:base')
> f()
Error in f() : argument "description" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'description' argument
> f(,NULL)
Error in f(, NULL) : argument "description" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'description' argument
> f(list())
Error in f(list()) : invalid 'description' argument
> f(l0)
Error in f(l0) : invalid 'description' argument
> f(c0)
Error in f(c0) : invalid 'description' argument
> f(m0)
Error in f(m0) : invalid 'description' argument
> f(df0)
Error in f(df0) : invalid 'description' argument
> f(FALSE)
Error in f(FALSE) : invalid 'description' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'description' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'description' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'description' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'description' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'description' argument
> 
> ##  file  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file", pos = 'package:base')
> f()
description       class        mode        text      opened    can read 
         ""      "file"        "w+"      "text"    "opened"       "yes" 
  can write 
      "yes" 
> f(NULL)
Error in f(NULL) : invalid 'description' argument
> f(,NULL)
Error in f(, NULL) : invalid 'open' argument
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'description' argument
> f(list())
Error in f(list()) : invalid 'description' argument
> f(l0)
Error in f(l0) : invalid 'description' argument
> f(c0)
Error in f(c0) : invalid 'description' argument
> f(m0)
Error in f(m0) : invalid 'description' argument
> f(df0)
Error in f(df0) : invalid 'description' argument
> f(FALSE)
Error in f(FALSE) : invalid 'description' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'description' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'description' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'description' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'description' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'description' argument
> 
> ##  file.access  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.access", pos = 'package:base')
> f()
Error in f() : argument "names" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'names' argument
> f(,NULL)
Error in f(, NULL) : argument "names" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'names' argument
> f(list())
Error in f(list()) : invalid 'names' argument
> f(l0)
Error in f(l0) : invalid 'names' argument
> f(c0)
named integer(0)
> f(m0)
Error in f(m0) : invalid 'names' argument
> f(df0)
Error in f(df0) : invalid 'names' argument
> f(FALSE)
Error in f(FALSE) : invalid 'names' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'names' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'names' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'mode' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'names' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'names' argument
> 
> ##  file.append  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.append", pos = 'package:base')
> f()
Error in f() : argument "file1" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "file2" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "file1" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'file1' argument
> f(list())
Error in f(list()) : argument "file2" is missing, with no default
> f(l0)
Error in f(l0) : argument "file2" is missing, with no default
> f(c0)
Error in f(c0) : argument "file2" is missing, with no default
> f(m0)
Error in f(m0) : argument "file2" is missing, with no default
> f(df0)
Error in f(df0) : argument "file2" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "file2" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'file1' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'file1' argument
> f(c0,c0)
Error in f(c0, c0) : nothing to append to
> f(df0,df0)
Error in f(df0, df0) : invalid 'file1' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'file1' argument
> 
> ##  file.choose  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.choose", pos = 'package:base')
> f()
Enter file name: f(NULL)
[1] "f(NULL)"
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Enter file name: f(l0)
[1] "f(l0)"
> f(c0)
Enter file name: f(m0)
[1] "f(m0)"
> f(df0)
Enter file name: f(FALSE)
[1] "f(FALSE)"
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  file.copy  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.copy", pos = 'package:base')
> f()
Error in f() : argument "from" is missing, with no default
> f(NULL)
logical(0)
> f(,NULL)
Error in f(, NULL) : argument "from" is missing, with no default
> f(NULL,NULL)
logical(0)
> f(list())
logical(0)
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
logical(0)
> f(df0)
Error in f(df0) : argument "to" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "to" is missing, with no default
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in dir.exists(to) : invalid filename argument
Calls: f -> dir.exists
> f(FALSE,FALSE)
Error in dir.exists(to) : invalid filename argument
Calls: f -> dir.exists
> 
> ##  file.create  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.create", pos = 'package:base')
> f()
Error in f() : invalid filename argument
> f(NULL)
Error in f(NULL) : invalid filename argument
> f(,NULL)
Error in f(, NULL) : invalid filename argument
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid filename argument
> f(list())
Error in f(list()) : invalid filename argument
> f(l0)
Error in f(l0) : invalid filename argument
> f(c0)
logical(0)
> f(m0)
Error in f(m0) : invalid filename argument
> f(df0)
Error in f(df0) : invalid filename argument
> f(FALSE)
Error in f(FALSE) : invalid filename argument
> f(list(),list())
Error in f(list(), list()) : invalid filename argument
> f(l0,l0)
Error in f(l0, l0) : invalid filename argument
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in f(df0, df0) : invalid filename argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid filename argument
> 
> ##  file.exists  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.exists", pos = 'package:base')
> f()
Error in f() : invalid 'file' argument
> f(NULL)
Error in f(NULL) : invalid 'file' argument
> f(,NULL)
Error in f(, NULL) : invalid 'file' argument
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'file' argument
> f(list())
Error in f(list()) : invalid 'file' argument
> f(l0)
Error in f(l0) : invalid 'file' argument
> f(c0)
logical(0)
> f(m0)
Error in f(m0) : invalid 'file' argument
> f(df0)
Error in f(df0) : invalid 'file' argument
> f(FALSE)
Error in f(FALSE) : invalid 'file' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'file' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'file' argument
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in f(df0, df0) : invalid 'file' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'file' argument
> 
> ##  file.info  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.info", pos = 'package:base')
> f()
Error in f() : invalid filename argument
> f(NULL)
Error in f(NULL) : invalid filename argument
> f(,NULL)
Error in f(, NULL) : invalid filename argument
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid filename argument
> f(list())
Error in f(list()) : invalid filename argument
> f(l0)
Error in f(l0) : invalid filename argument
> f(c0)
 [1] size   isdir  mode   mtime  ctime  atime  uid    gid    uname  grname
<0 rows> (or 0-length row.names)
> f(m0)
Error in f(m0) : invalid filename argument
> f(df0)
Error in f(df0) : invalid filename argument
> f(FALSE)
Error in f(FALSE) : invalid filename argument
> f(list(),list())
Error in f(list(), list()) : invalid filename argument
> f(l0,l0)
Error in f(l0, l0) : invalid filename argument
> f(c0,c0)
 [1] size   isdir  mode   mtime  ctime  atime  uid    gid    uname  grname
<0 rows> (or 0-length row.names)
> f(df0,df0)
Error in f(df0, df0) : invalid filename argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid filename argument
> 
> ##  file.link  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.link", pos = 'package:base')
> f()
Error in f() : argument "from" is missing, with no default
> f(NULL)
Error in f(NULL) : no files to link from
> f(,NULL)
Error in f(, NULL) : argument "from" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : no files to link from
> f(list())
Error in f(list()) : no files to link from
> f(l0)
Error in f(l0) : no files to link from
> f(c0)
Error in f(c0) : no files to link from
> f(m0)
Error in f(m0) : no files to link from
> f(df0)
Error in f(df0) : argument "to" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "to" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : no files to link from
> f(l0,l0)
Error in f(l0, l0) : no files to link from
> f(c0,c0)
Error in f(c0, c0) : no files to link from
> f(df0,df0)
Error in f(df0, df0) : invalid first filename
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid first filename
> 
> ##  file.mode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.mode", pos = 'package:base')
> f()
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(NULL)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(,NULL)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(NULL,NULL)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(list())
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(l0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(c0)
character(0)
> f(m0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(df0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(FALSE)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(list(),list())
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(l0,l0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(c0,c0)
character(0)
> f(df0,df0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(FALSE,FALSE)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> 
> ##  file.mtime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.mtime", pos = 'package:base')
> f()
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(NULL)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(,NULL)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(NULL,NULL)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(list())
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(l0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(c0)
character(0)
> f(m0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(df0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(FALSE)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(list(),list())
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(l0,l0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(c0,c0)
character(0)
> f(df0,df0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(FALSE,FALSE)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> 
> ##  file.path  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.path", pos = 'package:base')
> f()
character(0)
> f(NULL)
character(0)
> f(,NULL)
character(0)
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[1] "integer(0)/integer(0)"
> f(FALSE,FALSE)
[1] "FALSE/FALSE"
> 
> ##  file.remove  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.remove", pos = 'package:base')
> f()
Error in f() : invalid first filename
> f(NULL)
Error in f(NULL) : invalid first filename
> f(,NULL)
Error in f(, NULL) : invalid first filename
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid first filename
> f(list())
Error in f(list()) : invalid first filename
> f(l0)
Error in f(l0) : invalid first filename
> f(c0)
logical(0)
> f(m0)
Error in f(m0) : invalid first filename
> f(df0)
Error in f(df0) : invalid first filename
> f(FALSE)
Error in f(FALSE) : invalid first filename
> f(list(),list())
Error in f(list(), list()) : invalid first filename
> f(l0,l0)
Error in f(l0, l0) : invalid first filename
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in f(df0, df0) : invalid first filename
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid first filename
> 
> ##  file.rename  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.rename", pos = 'package:base')
> f()
Error in f() : argument "from" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "to" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "from" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'from' argument
> f(list())
Error in f(list()) : argument "to" is missing, with no default
> f(l0)
Error in f(l0) : argument "to" is missing, with no default
> f(c0)
Error in f(c0) : argument "to" is missing, with no default
> f(m0)
Error in f(m0) : argument "to" is missing, with no default
> f(df0)
Error in f(df0) : argument "to" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "to" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'from' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'from' argument
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in f(df0, df0) : invalid 'from' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'from' argument
> 
> ##  file.show  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.show", pos = 'package:base')
> f()
Error in path.expand(c(...)) : invalid 'path' argument
Calls: f -> path.expand
> f(NULL)
Error in path.expand(c(...)) : invalid 'path' argument
Calls: f -> path.expand
> f(,NULL)
Error in path.expand(c(...)) : invalid 'path' argument
Calls: f -> path.expand
> f(NULL,NULL)
Error in path.expand(c(...)) : invalid 'path' argument
Calls: f -> path.expand
> f(list())
Error in path.expand(c(...)) : invalid 'path' argument
Calls: f -> path.expand
> f(l0)
Error in path.expand(c(...)) : invalid 'path' argument
Calls: f -> path.expand
> f(c0)
> f(m0)
Error in path.expand(c(...)) : invalid 'path' argument
Calls: f -> path.expand
> f(df0)
Error in path.expand(c(...)) : invalid 'path' argument
Calls: f -> path.expand
> f(FALSE)
Error in path.expand(c(...)) : invalid 'path' argument
Calls: f -> path.expand
> f(list(),list())
Error in path.expand(c(...)) : invalid 'path' argument
Calls: f -> path.expand
> f(l0,l0)
Error in path.expand(c(...)) : invalid 'path' argument
Calls: f -> path.expand
> f(c0,c0)
> f(df0,df0)
Error in path.expand(c(...)) : invalid 'path' argument
Calls: f -> path.expand
> f(FALSE,FALSE)
Error in path.expand(c(...)) : invalid 'path' argument
Calls: f -> path.expand
> 
> ##  file.size  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.size", pos = 'package:base')
> f()
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(NULL)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(,NULL)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(NULL,NULL)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(list())
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(l0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(c0)
numeric(0)
> f(m0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(df0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(FALSE)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(list(),list())
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(l0,l0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(c0,c0)
numeric(0)
> f(df0,df0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> f(FALSE,FALSE)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.info
> 
> ##  file.symlink  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("file.symlink", pos = 'package:base')
> f()
Error in f() : argument "from" is missing, with no default
> f(NULL)
Error in f(NULL) : no files to link from
> f(,NULL)
Error in f(, NULL) : argument "from" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : no files to link from
> f(list())
Error in f(list()) : no files to link from
> f(l0)
Error in f(l0) : no files to link from
> f(c0)
Error in f(c0) : no files to link from
> f(m0)
Error in f(m0) : no files to link from
> f(df0)
Error in f(df0) : argument "to" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "to" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : no files to link from
In addition: Warning message:
closing unused connection 3 () 
> f(l0,l0)
Error in f(l0, l0) : no files to link from
> f(c0,c0)
Error in f(c0, c0) : no files to link from
> f(df0,df0)
Error in file.exists(to) : invalid 'file' argument
Calls: f -> file.exists
> f(FALSE,FALSE)
Error in file.exists(to) : invalid 'file' argument
Calls: f -> file.exists
> 
> ##  find.package  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("find.package", pos = 'package:base')
> f()
[1] "/home/aviral/projects/r/library/stats"    
[2] "/home/aviral/projects/r/library/graphics" 
[3] "/home/aviral/projects/r/library/grDevices"
[4] "/home/aviral/projects/r/library/utils"    
[5] "/home/aviral/projects/r/library/datasets" 
[6] "/home/aviral/projects/r/library/methods"  
[7] "/home/aviral/projects/r/library/base"     
> f(NULL)
[1] "/home/aviral/projects/r/library/stats"    
[2] "/home/aviral/projects/r/library/graphics" 
[3] "/home/aviral/projects/r/library/grDevices"
[4] "/home/aviral/projects/r/library/utils"    
[5] "/home/aviral/projects/r/library/datasets" 
[6] "/home/aviral/projects/r/library/methods"  
[7] "/home/aviral/projects/r/library/base"     
> f(,NULL)
[1] "/home/aviral/projects/r/library/stats"    
[2] "/home/aviral/projects/r/library/graphics" 
[3] "/home/aviral/projects/r/library/grDevices"
[4] "/home/aviral/projects/r/library/utils"    
[5] "/home/aviral/projects/r/library/datasets" 
[6] "/home/aviral/projects/r/library/methods"  
[7] "/home/aviral/projects/r/library/base"     
> f(NULL,NULL)
[1] "/home/aviral/projects/r/library/stats"    
[2] "/home/aviral/projects/r/library/graphics" 
[3] "/home/aviral/projects/r/library/grDevices"
[4] "/home/aviral/projects/r/library/utils"    
[5] "/home/aviral/projects/r/library/datasets" 
[6] "/home/aviral/projects/r/library/methods"  
[7] "/home/aviral/projects/r/library/base"     
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
Error in isNamespaceLoaded(pkg) : 
  invalid data of mode 'integer' (too short)
Calls: f -> isNamespaceLoaded
> f(FALSE)
Error in f(FALSE) : there is no package called 'FALSE'
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
character(0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : there is no package called 'FALSE'
> 
> ##  findInterval  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("findInterval", pos = 'package:base')
> f()
Error in is.unsorted(vec) : argument "vec" is missing, with no default
Calls: f -> is.unsorted
> f(NULL)
Error in is.unsorted(vec) : argument "vec" is missing, with no default
Calls: f -> is.unsorted
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
integer(0)
> f(list())
Error in is.unsorted(vec) : argument "vec" is missing, with no default
Calls: f -> is.unsorted
> f(l0)
Error in is.unsorted(vec) : argument "vec" is missing, with no default
Calls: f -> is.unsorted
> f(c0)
Error in is.unsorted(vec) : argument "vec" is missing, with no default
Calls: f -> is.unsorted
> f(m0)
Error in is.unsorted(vec) : argument "vec" is missing, with no default
Calls: f -> is.unsorted
> f(df0)
Error in is.unsorted(vec) : argument "vec" is missing, with no default
Calls: f -> is.unsorted
> f(FALSE)
Error in is.unsorted(vec) : argument "vec" is missing, with no default
Calls: f -> is.unsorted
> f(list(),list())
integer(0)
> f(l0,l0)
integer(0)
> f(c0,c0)
integer(0)
> f(df0,df0)
[1] NA
> f(FALSE,FALSE)
[1] 1
> 
> ##  findPackageEnv  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("findPackageEnv", pos = 'package:base')
> f()
Error in match(x, table, nomatch = 0L) : 
  argument "info" is missing, with no default
Calls: f -> %in% -> match
> f(NULL)
Error in if (info %in% search()) return(as.environment(info)) : 
  argument is of length zero
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in if (info %in% search()) return(as.environment(info)) : 
  argument is of length zero
Calls: f
> f(l0)
Error in if (info %in% search()) return(as.environment(info)) : 
  argument is of length zero
Calls: f
> f(c0)
Error in if (info %in% search()) return(as.environment(info)) : 
  argument is of length zero
Calls: f
> f(m0)
Error in if (info %in% search()) return(as.environment(info)) : 
  argument is of length zero
Calls: f
> f(df0)
Attempting to load the environment 'integer(0)'
Specified environment not found: using '.GlobalEnv' instead
<environment: R_GlobalEnv>
Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called '0)'
> f(FALSE)
Attempting to load the environment 'FALSE'
Specified environment not found: using '.GlobalEnv' instead
<environment: R_GlobalEnv>
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  findRestart  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("findRestart", pos = 'package:base')
> f()
Error in f() : argument "name" is missing, with no default
> f(NULL)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "name" is missing, with no default
> f(NULL,NULL)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(list())
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(m0)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE)
NULL
> f(list(),list())
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0,l0)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0,c0)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
NULL
> 
> ##  floor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("floor", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'floor' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'floor' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'floor' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'floor' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'floor' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'floor' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'floor' which requires 1
> 
> ##  flush  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("flush", pos = 'package:base')
> f()
Error in UseMethod("flush") : 
  no applicable method for 'flush' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("flush") : 
  no applicable method for 'flush' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in UseMethod("flush") : 
  no applicable method for 'flush' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("flush") : 
  no applicable method for 'flush' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("flush") : 
  no applicable method for 'flush' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("flush") : 
  no applicable method for 'flush' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("flush") : 
  no applicable method for 'flush' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("flush") : 
  no applicable method for 'flush' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  flush.connection  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("flush.connection", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in f(NULL) : 'con' is not a connection
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : 'con' is not a connection
> f(l0)
Error in f(l0) : 'con' is not a connection
> f(c0)
Error in f(c0) : 'con' is not a connection
> f(m0)
Error in f(m0) : 'con' is not a connection
> f(df0)
Error in f(df0) : 'con' is not a connection
> f(FALSE)
Error in f(FALSE) : 'con' is not a connection
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  for  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("for", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'for' which requires 3
> f(NULL)
Error in f(NULL) : 1 argument passed to 'for' which requires 3
> f(,NULL)
Error in f(, NULL) : 2 arguments passed to 'for' which requires 3
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'for' which requires 3
> f(list())
Error in f(list()) : 1 argument passed to 'for' which requires 3
> f(l0)
Error in f(l0) : 1 argument passed to 'for' which requires 3
> f(c0)
Error in f(c0) : 1 argument passed to 'for' which requires 3
> f(m0)
Error in f(m0) : 1 argument passed to 'for' which requires 3
> f(df0)
Error in f(df0) : 1 argument passed to 'for' which requires 3
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'for' which requires 3
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to 'for' which requires 3
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'for' which requires 3
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'for' which requires 3
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'for' which requires 3
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'for' which requires 3
> 
> ##  force  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("force", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  forceAndCall  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("forceAndCall", pos = 'package:base')
> f()
Error: attempt to apply non-function
> f(NULL)
Error: attempt to apply non-function
> f(,NULL)
Error: attempt to apply non-function
> f(NULL,NULL)
Error: attempt to apply non-function
> f(list())
Error: attempt to apply non-function
> f(l0)
Error: attempt to apply non-function
> f(c0)
Error: attempt to apply non-function
> f(m0)
Error: attempt to apply non-function
> f(df0)
Error: attempt to apply non-function
> f(FALSE)
Error: attempt to apply non-function
> f(list(),list())
Error: attempt to apply non-function
> f(l0,l0)
Error: could not find function "l0"
> f(c0,c0)
Error: could not find function "c0"
> f(df0,df0)
Error: could not find function "df0"
> f(FALSE,FALSE)
Error: attempt to apply non-function
> 
> ##  formals  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("formals", pos = 'package:base')
> f()
$fun
sys.function(sys.parent())

> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
NULL
> f(c0)
Error in get(fun, mode = "function", envir = parent.frame()) : 
  invalid first argument
Calls: f -> get
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  formals<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("formals<-", pos = 'package:base')
> f()
Error in body(fun) : argument "fun" is missing, with no default
Calls: f -> body
> f(NULL)
Error in as.function(c(value, if (is.null(bd) || is.list(bd)) list(bd) else bd),  : 
  argument "value" is missing, with no default
Calls: f -> as.function
> f(,NULL)
Error in body(fun) : argument "fun" is missing, with no default
Calls: f -> body
> f(NULL,NULL)
Error in as.function(c(value, if (is.null(bd) || is.list(bd)) list(bd) else bd),  : 
  argument "value" is missing, with no default
Calls: f -> as.function
> f(list())
Error in as.function(c(value, if (is.null(bd) || is.list(bd)) list(bd) else bd),  : 
  argument "value" is missing, with no default
Calls: f -> as.function
> f(l0)
Error in as.function(c(value, if (is.null(bd) || is.list(bd)) list(bd) else bd),  : 
  argument "value" is missing, with no default
Calls: f -> as.function
> f(c0)
Error in get(fun, mode = "function", envir = parent.frame()) : 
  invalid first argument
Calls: f -> body -> get
> f(m0)
Error in as.function(c(value, if (is.null(bd) || is.list(bd)) list(bd) else bd),  : 
  argument "value" is missing, with no default
Calls: f -> as.function
> f(df0)
Error in as.function(c(value, if (is.null(bd) || is.list(bd)) list(bd) else bd),  : 
  argument "value" is missing, with no default
Calls: f -> as.function
> f(FALSE)
Error in as.function(c(value, if (is.null(bd) || is.list(bd)) list(bd) else bd),  : 
  argument "value" is missing, with no default
Calls: f -> as.function
> f(list(),list())
Error in as.function(c(value, if (is.null(bd) || is.list(bd)) list(bd) else bd),  : 
  argument "value" is missing, with no default
Calls: f -> as.function
> f(l0,l0)
Error in as.function(c(value, if (is.null(bd) || is.list(bd)) list(bd) else bd),  : 
  argument "value" is missing, with no default
Calls: f -> as.function
> f(c0,c0)
Error in get(fun, mode = "function", envir = parent.frame()) : 
  invalid first argument
Calls: f -> body -> get
> f(df0,df0)
Error in as.function(c(value, if (is.null(bd) || is.list(bd)) list(bd) else bd),  : 
  argument "value" is missing, with no default
Calls: f -> as.function
> f(FALSE,FALSE)
Error in as.function(c(value, if (is.null(bd) || is.list(bd)) list(bd) else bd),  : 
  argument "value" is missing, with no default
Calls: f -> as.function
> 
> ##  format  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format", pos = 'package:base')
> f()
Error in format.default() : argument "x" is missing, with no default
Calls: f -> format.default
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in format.default(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> format.default
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format.default -> prettyNum
> f(c0,c0)
Error in format.default(c0, c0) : invalid 'trim' argument
Calls: f -> format.default
> f(df0,df0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f ... format -> format.factor -> format -> format.default
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  format.AsIs  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.AsIs", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : dims [product 0] do not match the length of object [1]
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f ... toString -> toString.default -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  format.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.Date", pos = 'package:base')
> f()
Error in as.POSIXlt(x) : argument "x" is missing, with no default
Calls: f -> format -> as.POSIXlt
> f(NULL)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(,NULL)
Error in as.POSIXlt(x) : argument "x" is missing, with no default
Calls: f -> format -> as.POSIXlt
> f(NULL,NULL)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(list())
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
Error in as.POSIXlt.numeric(x) : 'origin' must be supplied
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.numeric
> f(df0)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(FALSE)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(list(),list())
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(l0,l0)
Error in format.POSIXlt(as.POSIXlt(x), ...) : invalid 'format' argument
Calls: f -> format -> format.POSIXlt
> f(c0,c0)
Error in format.POSIXlt(as.POSIXlt(x), ...) : invalid 'format' argument
Calls: f -> format -> format.POSIXlt
> f(df0,df0)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(FALSE,FALSE)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> 
> ##  format.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.POSIXct", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : wrong class
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : wrong class
> f(list())
Error in f(list()) : wrong class
> f(l0)
Error in f(l0) : wrong class
> f(c0)
Error in f(c0) : wrong class
> f(m0)
Error in f(m0) : wrong class
> f(df0)
Error in f(df0) : wrong class
> f(FALSE)
Error in f(FALSE) : wrong class
> f(list(),list())
Error in f(list(), list()) : wrong class
> f(l0,l0)
Error in f(l0, l0) : wrong class
> f(c0,c0)
Error in f(c0, c0) : wrong class
> f(df0,df0)
Error in f(df0, df0) : wrong class
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : wrong class
> 
> ##  format.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.POSIXlt", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : wrong class
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : wrong class
> f(list())
Error in f(list()) : wrong class
> f(l0)
Error in f(l0) : wrong class
> f(c0)
Error in f(c0) : wrong class
> f(m0)
Error in f(m0) : wrong class
> f(df0)
Error in f(df0) : wrong class
> f(FALSE)
Error in f(FALSE) : wrong class
> f(list(),list())
Error in f(list(), list()) : wrong class
> f(l0,l0)
Error in f(l0, l0) : wrong class
> f(c0,c0)
Error in f(c0, c0) : wrong class
> f(df0,df0)
Error in f(df0, df0) : wrong class
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : wrong class
> 
> ##  format.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] 
<0 rows> (or 0-length row.names)
Warning message:
In f(FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f ... format -> format.factor -> format -> format.default
> f(FALSE,FALSE)
[1] 
<0 rows> (or 0-length row.names)
Warning message:
In f(FALSE, FALSE) :
  corrupt data frame: columns will be truncated or padded with NAs
> 
> ##  format.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
c0 
"" 
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> prettyNum
> f(c0,c0)
Error in f(c0, c0) : invalid 'trim' argument
> f(df0,df0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> lapply -> FUN -> format.default -> prettyNum
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  format.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.difftime", pos = 'package:base')
> f()
Error in format(unclass(x), ...) : 
  argument "x" is missing, with no default
Calls: f -> paste -> format
> f(NULL)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "NULL"
Calls: f -> paste -> units
> f(,NULL)
Error in format(unclass(x), ...) : 
  argument "x" is missing, with no default
Calls: f -> paste -> format
> f(NULL,NULL)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "NULL"
Calls: f -> paste -> units
> f(list())
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "list"
Calls: f -> paste -> units
> f(l0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "logical"
Calls: f -> paste -> units
> f(c0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "character"
Calls: f -> paste -> units
> f(m0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f -> paste -> units
> f(df0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "data.frame"
Calls: f -> paste -> units
> f(FALSE)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "logical"
Calls: f -> paste -> units
> f(list(),list())
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "list"
Calls: f -> paste -> units
> f(l0,l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> paste -> format -> format.default -> prettyNum
> f(c0,c0)
Error in format.default(unclass(x), ...) : invalid 'trim' argument
Calls: f -> paste -> format -> format.default
> f(df0,df0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f ... format.default -> lapply -> FUN -> format.default -> prettyNum
> f(FALSE,FALSE)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "logical"
Calls: f -> paste -> units
> 
> ##  format.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.factor", pos = 'package:base')
> f()
Error in structure(as.character(x), names = names(x), dim = dim(x), dimnames = dimnames(x)) : 
  argument "x" is missing, with no default
Calls: f -> format -> structure
> f(NULL)
character(0)
> f(,NULL)
Error in structure(as.character(x), names = names(x), dim = dim(x), dimnames = dimnames(x)) : 
  argument "x" is missing, with no default
Calls: f -> format -> structure
> f(NULL,NULL)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f -> format -> format.default
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in structure(as.character(x), names = names(x), dim = dim(x), dimnames = dimnames(x)) : 
  dims [product 0] do not match the length of object [1]
Calls: f -> format -> structure
> f(FALSE)
[1] "FALSE"
> f(list(),list())
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f -> format -> format.default
> f(l0,l0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f -> format -> format.default
> f(c0,c0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f -> format -> format.default
> f(df0,df0)
Error in structure(as.character(x), names = names(x), dim = dim(x), dimnames = dimnames(x)) : 
  dims [product 0] do not match the length of object [1]
Calls: f -> format -> structure
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  format.hexmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.hexmode", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
character(0)
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : dims [product 0] do not match the length of object [1]
> f(FALSE)
[1] "0"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : 
  dims [product 0] do not match the length of object [1]
> f(FALSE,FALSE)
Error in sprintf(fmt, y) : 
  invalid format '%0FA'; use format %d, %i, %o, %x or %X for integer objects
Calls: f -> sprintf
> 
> ##  format.info  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.info", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : atomic vector arguments only
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : atomic vector arguments only
> f(list())
Error in f(list()) : atomic vector arguments only
> f(l0)
[1] 1
> f(c0)
[1] 0
> f(m0)
[1] 0 0 0
> f(df0)
Error in f(df0) : atomic vector arguments only
> f(FALSE)
[1] 5
> f(list(),list())
Error in f(list(), list()) : invalid 'digits' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'digits' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'digits' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'digits' argument
> f(FALSE,FALSE)
[1] 5
> 
> ##  format.libraryIQR  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.libraryIQR", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in !nrow(db) : invalid argument type
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in !nrow(db) : invalid argument type
Calls: f
> f(list())
Error in !nrow(db) : invalid argument type
Calls: f
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
Error in !nrow(db) : invalid argument type
Calls: f
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in !nrow(db) : invalid argument type
Calls: f
> f(l0,l0)
Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Error: $ operator is invalid for atomic vectors
> f(df0,df0)
Error in !nrow(db) : invalid argument type
Calls: f
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  format.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.numeric_version", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
c0 
NA 
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
c0 
NA 
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  format.octmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.octmode", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
character(0)
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : dims [product 0] do not match the length of object [1]
> f(FALSE)
[1] "0"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : 
  dims [product 0] do not match the length of object [1]
> f(FALSE,FALSE)
Error in sprintf(fmt, y) : 
  invalid format '%0FA'; use format %d, %i, %o, %x or %X for integer objects
Calls: f -> sprintf
> 
> ##  format.packageInfo  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.packageInfo", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : wrong class
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : wrong class
> f(list())
Error in f(list()) : wrong class
> f(l0)
Error in f(l0) : wrong class
> f(c0)
Error in f(c0) : wrong class
> f(m0)
Error in f(m0) : wrong class
> f(df0)
Error in f(df0) : wrong class
> f(FALSE)
Error in f(FALSE) : wrong class
> f(list(),list())
Error in f(list(), list()) : wrong class
> f(l0,l0)
Error in f(l0, l0) : wrong class
> f(c0,c0)
Error in f(c0, c0) : wrong class
> f(df0,df0)
Error in f(df0, df0) : wrong class
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : wrong class
> 
> ##  format.pval  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.pval", pos = 'package:base')
> f()
Error in f() : argument "pv" is missing, with no default
> f(NULL)
character(0)
Warning message:
In is.na(pv) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : argument "pv" is missing, with no default
> f(NULL,NULL)
character(0)
Warning message:
In is.na(pv) : is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> character -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<' not meaningful for factors
> f(FALSE)
[1] "< 2.22e-16"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> character -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<' not meaningful for factors
> f(FALSE,FALSE)
[1] "<2e-16"
> 
> ##  format.summaryDefault  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("format.summaryDefault", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : attempt to set an attribute on NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : attempt to set an attribute on NULL
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
c0 
"" 
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(c0,c0)
Error in format.default(xx, ...) : invalid 'trim' argument
Calls: f -> format -> format.default
> f(df0,df0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f ... format.default -> lapply -> FUN -> format.default -> prettyNum
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  formatC  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("formatC", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] ""
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] ""
> f(list())
[1] ""
> f(l0)
[1] ""
> f(c0)
[1] ""
> f(m0)
[1] ""
> f(df0)
Error in is.finite(x) : default method not implemented for type 'list'
Calls: f
In addition: Warning message:
In f(df0) : class of 'x' was discarded
> f(FALSE)
Error in f(FALSE) : unsupported type 
> f(list(),list())
[1] ""
> f(l0,l0)
[1] ""
> f(c0,c0)
[1] ""
> f(df0,df0)
Error in is.finite(x) : default method not implemented for type 'list'
Calls: f
In addition: Warning message:
In f(df0, df0) : class of 'x' was discarded
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unsupported type 
> 
> ##  formatDL  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("formatDL", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "y" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
Error in f(list()) : incorrect value for 'x'
> f(l0)
Error in f(l0) : argument "y" is missing, with no default
> f(c0)
Error in f(c0) : argument "y" is missing, with no default
> f(m0)
Error in f(m0) : incorrect value for 'x'
> f(df0)
Error in f(df0) : incorrect value for 'x'
> f(FALSE)
Error in f(FALSE) : argument "y" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : incorrect value for 'x'
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : incorrect value for 'x'
> f(FALSE,FALSE)
[1] "FALSE                   FALSE"
> 
> ##  forwardsolve  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("forwardsolve", pos = 'package:base')
> f()
Error in as.matrix(l) : argument "l" is missing, with no default
Calls: f -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(l) : argument "l" is missing, with no default
Calls: f -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(list())
Error in f(list()) : argument "x" is missing, with no default
> f(l0)
Error in f(l0) : argument "x" is missing, with no default
> f(c0)
Error in f(c0) : argument "x" is missing, with no default
> f(m0)
Error in f(m0) : argument "x" is missing, with no default
> f(df0)
Error in f(df0) : argument "x" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "x" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'k' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'k' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'k' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'k' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  singular matrix in 'backsolve'. First zero in diagonal [1]
> 
> ##  function  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("function", pos = 'package:base')
> f()
Error: incorrect number of arguments to "function"
> f(NULL)
Error: incorrect number of arguments to "function"
> f(,NULL)
Error: invalid formal argument list for "function"
> f(NULL,NULL)
function () 
NULL
> f(list())
Error: incorrect number of arguments to "function"
> f(l0)
Error: incorrect number of arguments to "function"
> f(c0)
Error: incorrect number of arguments to "function"
> f(m0)
Error: incorrect number of arguments to "function"
> f(df0)
Error: incorrect number of arguments to "function"
> f(FALSE)
Error: incorrect number of arguments to "function"
> f(list(),list())
Error: invalid formal argument list for "function"
> f(l0,l0)
Error: invalid formal argument list for "function"
> f(c0,c0)
Error: invalid formal argument list for "function"
> f(df0,df0)
Error: invalid formal argument list for "function"
> f(FALSE,FALSE)
Error: invalid formal argument list for "function"
> 
> ##  gamma  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("gamma", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'gamma' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'gamma' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] NaN
Warning message:
In f(FALSE) : NaNs produced
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'gamma' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'gamma' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'gamma' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'gamma' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'gamma' which requires 1
> 
> ##  gc  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("gc", pos = 'package:base')
> f()
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283020 15.2     460000 24.6   350000 18.7
Vcells 441530  3.4    1023718  7.9   783837  6.0
> f(NULL)
Garbage collection 29 = 24+2+3 (level 2) ... 
15.2 Mbytes of cons cells used (48%)
3.4 Mbytes of vectors used (43%)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283028 15.2     592000 31.7   350000 18.7
Vcells 441558  3.4    1023718  7.9   783837  6.0
> f(,NULL)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283031 15.2     592000 31.7   283031 15.2
Vcells 441559  3.4    1023718  7.9   441559  3.4
> f(NULL,NULL)
Garbage collection 31 = 24+2+5 (level 2) ... 
15.2 Mbytes of cons cells used (48%)
3.4 Mbytes of vectors used (43%)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283030 15.2     592000 31.7   283030 15.2
Vcells 441558  3.4    1023718  7.9   441558  3.4
> f(list())
Garbage collection 32 = 24+2+6 (level 2) ... 
15.2 Mbytes of cons cells used (48%)
3.4 Mbytes of vectors used (43%)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283030 15.2     592000 31.7   283121 15.2
Vcells 441558  3.4    1023718  7.9   441646  3.4
> f(l0)
Garbage collection 33 = 24+2+7 (level 2) ... 
15.2 Mbytes of cons cells used (48%)
3.4 Mbytes of vectors used (43%)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283028 15.2     592000 31.7   283121 15.2
Vcells 441558  3.4    1023718  7.9   441646  3.4
> f(c0)
Garbage collection 34 = 24+2+8 (level 2) ... 
15.2 Mbytes of cons cells used (48%)
3.4 Mbytes of vectors used (43%)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283028 15.2     592000 31.7   283121 15.2
Vcells 441558  3.4    1023718  7.9   441646  3.4
> f(m0)
Garbage collection 35 = 24+2+9 (level 2) ... 
15.2 Mbytes of cons cells used (48%)
3.4 Mbytes of vectors used (43%)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283028 15.2     592000 31.7   283121 15.2
Vcells 441558  3.4    1023718  7.9   441646  3.4
> f(df0)
Garbage collection 36 = 24+2+10 (level 2) ... 
15.2 Mbytes of cons cells used (48%)
3.4 Mbytes of vectors used (43%)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283028 15.2     592000 31.7   283121 15.2
Vcells 441558  3.4    1023718  7.9   441646  3.4
> f(FALSE)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283029 15.2     592000 31.7   283121 15.2
Vcells 441559  3.4    1023718  7.9   441647  3.4
> f(list(),list())
Garbage collection 38 = 24+2+12 (level 2) ... 
15.2 Mbytes of cons cells used (48%)
3.4 Mbytes of vectors used (43%)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283034 15.2     592000 31.7   283034 15.2
Vcells 441558  3.4    1023718  7.9   441558  3.4
> f(l0,l0)
Garbage collection 39 = 24+2+13 (level 2) ... 
15.2 Mbytes of cons cells used (48%)
3.4 Mbytes of vectors used (43%)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283030 15.2     592000 31.7   283030 15.2
Vcells 441558  3.4    1023718  7.9   441558  3.4
> f(c0,c0)
Garbage collection 40 = 24+2+14 (level 2) ... 
15.2 Mbytes of cons cells used (48%)
3.4 Mbytes of vectors used (43%)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283030 15.2     592000 31.7   283030 15.2
Vcells 441558  3.4    1023718  7.9   441558  3.4
> f(df0,df0)
Garbage collection 41 = 24+2+15 (level 2) ... 
15.2 Mbytes of cons cells used (48%)
3.4 Mbytes of vectors used (43%)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283030 15.2     592000 31.7   283030 15.2
Vcells 441558  3.4    1023718  7.9   441558  3.4
> f(FALSE,FALSE)
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 283032 15.2     592000 31.7   283121 15.2
Vcells 441560  3.4    1023718  7.9   441648  3.4
> 
> ##  gc.time  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("gc.time", pos = 'package:base')
> f()
[1] 0 0 0 0 0
> f(NULL)
[1] 0 0 0 0 0
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
[1] 0 0 0 0 0
> f(list())
[1] 0 0 0 0 0
> f(l0)
[1] 0 0 0 0 0
> f(c0)
[1] 0 0 0 0 0
> f(m0)
[1] 0 0 0 0 0
> f(df0)
[1] 0 0 0 0 0
> f(FALSE)
[1] 0 0 0 0 0
> f(list(),list())
[1] 0 0 0 0 0
> f(l0,l0)
[1] 0 0 0 0 0
> f(c0,c0)
[1] 0 0 0 0 0
> f(df0,df0)
[1] 0 0 0 0 0
> f(FALSE,FALSE)
[1] 0 0 0 0 0
> 
> ##  gcinfo  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("gcinfo", pos = 'package:base')
> f()
Error in f() : argument "verbose" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  gctorture2  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("gctorture2", pos = 'package:base')
> f()
Error in f() : argument "step" is missing, with no default
> f(NULL)
[1] 0
> f(,NULL)
Error in f(, NULL) : argument "step" is missing, with no default
> f(NULL,NULL)
[1] 0
> f(list())
[1] 0
> f(l0)
[1] 0
> f(c0)
[1] 0
> f(m0)
[1] 0
> f(df0)
[1] 0
> f(FALSE)
[1] 0
> f(list(),list())
[1] 0
> f(l0,l0)
[1] 0
> f(c0,c0)
[1] 0
> f(df0,df0)
[1] 0
> f(FALSE,FALSE)
[1] 0
> 
> ##  get  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("get", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid first argument
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in as.environment(pos) : using 'as.environment(NULL)' is defunct
Calls: f
> f(list())
Error in f(list()) : invalid first argument
> f(l0)
Error in f(l0) : invalid first argument
> f(c0)
Error in f(c0) : invalid first argument
> f(m0)
Error in f(m0) : invalid first argument
> f(df0)
Error in f(df0) : invalid first argument
> f(FALSE)
Error in f(FALSE) : invalid first argument
> f(list(),list())
Error in f(list(), list()) : invalid first argument
> f(l0,l0)
Error in as.environment(pos) : invalid object for 'as.environment'
Calls: f
> f(c0,c0)
Error in as.environment(pos) : no item called "NA" on the search list
Calls: f
> f(df0,df0)
Error in f(df0, df0) : invalid first argument
> f(FALSE,FALSE)
Error in as.environment(pos) : invalid object for 'as.environment'
Calls: f
> 
> ##  get0  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("get0", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid first argument
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid first argument
> f(list())
Error in f(list()) : invalid first argument
> f(l0)
Error in f(l0) : invalid first argument
> f(c0)
Error in f(c0) : invalid first argument
> f(m0)
Error in f(m0) : invalid first argument
> f(df0)
Error in f(df0) : invalid first argument
> f(FALSE)
Error in f(FALSE) : invalid first argument
> f(list(),list())
Error in f(list(), list()) : invalid first argument
> f(l0,l0)
Error in f(l0, l0) : invalid first argument
> f(c0,c0)
Error in f(c0, c0) : invalid first argument
> f(df0,df0)
Error in f(df0, df0) : invalid first argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid first argument
> 
> ##  getAllConnections  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getAllConnections", pos = 'package:base')
> f()
[1] 0 1 2
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  getCallingDLL  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getCallingDLL", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
Error in if (doStop) stop("function is not in a namespace, so cannot locate associated DLL") else return(NULL) : 
  argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (doStop) stop("function is not in a namespace, so cannot locate associated DLL") else return(NULL) : 
  argument is of length zero
Calls: f
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
Error in if (doStop) stop("function is not in a namespace, so cannot locate associated DLL") else return(NULL) : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (doStop) stop("function is not in a namespace, so cannot locate associated DLL") else return(NULL) : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (doStop) stop("function is not in a namespace, so cannot locate associated DLL") else return(NULL) : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in if (doStop) stop("function is not in a namespace, so cannot locate associated DLL") else return(NULL) : 
  argument is not interpretable as logical
Calls: f
> f(FALSE,FALSE)
NULL
> 
> ##  getCallingDLLe  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getCallingDLLe", pos = 'package:base')
> f()
Error in f() : argument "e" is missing, with no default
> f(NULL)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  getConnection  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getConnection", pos = 'package:base')
> f()
Error in f() : argument "what" is missing, with no default
> f(NULL)
Error in f(NULL) : there is no connection NA
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : there is no connection NA
> f(l0)
Error in f(l0) : there is no connection NA
> f(c0)
Error in f(c0) : there is no connection NA
> f(m0)
Error in f(m0) : there is no connection NA
> f(df0)
Error in f(df0) : there is no connection NA
> f(FALSE)
description       class        mode        text      opened    can read 
    "stdin"  "terminal"         "r"      "text"    "opened"       "yes" 
  can write 
       "no" 
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  getDLLRegisteredRoutines  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getDLLRegisteredRoutines", pos = 'package:base')
> f()
Error in UseMethod("getDLLRegisteredRoutines") : 
  no applicable method for 'getDLLRegisteredRoutines' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("getDLLRegisteredRoutines") : 
  no applicable method for 'getDLLRegisteredRoutines' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("getDLLRegisteredRoutines") : 
  no applicable method for 'getDLLRegisteredRoutines' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("getDLLRegisteredRoutines") : 
  no applicable method for 'getDLLRegisteredRoutines' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("getDLLRegisteredRoutines") : 
  no applicable method for 'getDLLRegisteredRoutines' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("getDLLRegisteredRoutines") : 
  no applicable method for 'getDLLRegisteredRoutines' applied to an object of class "logical"
Calls: f
> f(c0)
Error in if (!any(w)) stop(gettextf("No DLL currently loaded with name or path %s",  : 
  missing value where TRUE/FALSE needed
Calls: f -> getDLLRegisteredRoutines.character
> f(m0)
Error in UseMethod("getDLLRegisteredRoutines") : 
  no applicable method for 'getDLLRegisteredRoutines' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("getDLLRegisteredRoutines") : 
  no applicable method for 'getDLLRegisteredRoutines' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("getDLLRegisteredRoutines") : 
  no applicable method for 'getDLLRegisteredRoutines' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in UseMethod("getDLLRegisteredRoutines") : 
  no applicable method for 'getDLLRegisteredRoutines' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in UseMethod("getDLLRegisteredRoutines") : 
  no applicable method for 'getDLLRegisteredRoutines' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in if (!any(w)) stop(gettextf("No DLL currently loaded with name or path %s",  : 
  missing value where TRUE/FALSE needed
Calls: f -> getDLLRegisteredRoutines.character
> f(df0,df0)
Error in UseMethod("getDLLRegisteredRoutines") : 
  no applicable method for 'getDLLRegisteredRoutines' applied to an object of class "data.frame"
Calls: f
> f(FALSE,FALSE)
Error in UseMethod("getDLLRegisteredRoutines") : 
  no applicable method for 'getDLLRegisteredRoutines' applied to an object of class "logical"
Calls: f
> 
> ##  getDLLRegisteredRoutines.DLLInfo  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getDLLRegisteredRoutines.DLLInfo", pos = 'package:base')
> f()
Error in f() : argument "dll" is missing, with no default
> f(NULL)
Error in f(NULL) : 
  must specify DLL via a "DLLInfo" object. See getLoadedDLLs()
> f(,NULL)
Error in f(, NULL) : argument "dll" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  must specify DLL via a "DLLInfo" object. See getLoadedDLLs()
> f(list())
Error in f(list()) : 
  must specify DLL via a "DLLInfo" object. See getLoadedDLLs()
> f(l0)
Error in f(l0) : 
  must specify DLL via a "DLLInfo" object. See getLoadedDLLs()
> f(c0)
Error in f(c0) : 
  must specify DLL via a "DLLInfo" object. See getLoadedDLLs()
> f(m0)
Error in f(m0) : 
  must specify DLL via a "DLLInfo" object. See getLoadedDLLs()
> f(df0)
Error in f(df0) : 
  must specify DLL via a "DLLInfo" object. See getLoadedDLLs()
> f(FALSE)
Error in f(FALSE) : 
  must specify DLL via a "DLLInfo" object. See getLoadedDLLs()
> f(list(),list())
Error in f(list(), list()) : 
  must specify DLL via a "DLLInfo" object. See getLoadedDLLs()
> f(l0,l0)
Error in f(l0, l0) : 
  must specify DLL via a "DLLInfo" object. See getLoadedDLLs()
> f(c0,c0)
Error in f(c0, c0) : 
  must specify DLL via a "DLLInfo" object. See getLoadedDLLs()
> f(df0,df0)
Error in f(df0, df0) : 
  must specify DLL via a "DLLInfo" object. See getLoadedDLLs()
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  must specify DLL via a "DLLInfo" object. See getLoadedDLLs()
> 
> ##  getDLLRegisteredRoutines.character  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getDLLRegisteredRoutines.character", pos = 'package:base')
> f()
Error in FUN(X[[i]], ...) : argument "dll" is missing, with no default
Calls: f -> vapply -> FUN
> f(NULL)
Error in if (!any(w)) stop(gettextf("No DLL currently loaded with name or path %s",  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(,NULL)
Error in FUN(X[[i]], ...) : argument "dll" is missing, with no default
Calls: f -> vapply -> FUN
> f(NULL,NULL)
Error in if (!any(w)) stop(gettextf("No DLL currently loaded with name or path %s",  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(list())
Error in if (!any(w)) stop(gettextf("No DLL currently loaded with name or path %s",  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0)
Error in if (!any(w)) stop(gettextf("No DLL currently loaded with name or path %s",  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0)
Error in if (!any(w)) stop(gettextf("No DLL currently loaded with name or path %s",  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(m0)
Error in if (!any(w)) stop(gettextf("No DLL currently loaded with name or path %s",  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> vapply -> FUN -> Ops.data.frame -> matrix
> f(FALSE)
Error in f(FALSE) : No DLL currently loaded with name or path 'FALSE'
> f(list(),list())
Error in if (!any(w)) stop(gettextf("No DLL currently loaded with name or path %s",  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0,l0)
Error in if (!any(w)) stop(gettextf("No DLL currently loaded with name or path %s",  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0,c0)
Error in if (!any(w)) stop(gettextf("No DLL currently loaded with name or path %s",  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> vapply -> FUN -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  No DLL currently loaded with name or path 'FALSE'
> 
> ##  getElement  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getElement", pos = 'package:base')
> f()
Error in f() : argument "object" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
Error in object[[name, exact = TRUE]] : invalid subscript type 'symbol'
Calls: f
> f(l0)
Error in object[[name, exact = TRUE]] : invalid subscript type 'symbol'
Calls: f
> f(c0)
Error in object[[name, exact = TRUE]] : invalid subscript type 'symbol'
Calls: f
> f(m0)
Error in object[[name, exact = TRUE]] : invalid subscript type 'symbol'
Calls: f
> f(df0)
Error in (function(x, i, exact) if (is.matrix(i)) as.matrix(x)[[i]] else .subset2(x,  : 
  argument "name" is missing, with no default
Calls: f -> [[ -> [[.data.frame -> <Anonymous>
> f(FALSE)
Error in object[[name, exact = TRUE]] : invalid subscript type 'symbol'
Calls: f
> f(list(),list())
Error in object[[name, exact = TRUE]] : 
  attempt to select less than one element in get1index
Calls: f
> f(l0,l0)
Error in object[[name, exact = TRUE]] : 
  attempt to select less than one element in get1index
Calls: f
> f(c0,c0)
Error in object[[name, exact = TRUE]] : 
  attempt to select less than one element in get1index
Calls: f
> f(df0,df0)
Error in .subset2(x, i, exact = exact) : invalid subscript type 'list'
Calls: f -> [[ -> [[.data.frame -> <Anonymous>
> f(FALSE,FALSE)
Error in object[[name, exact = TRUE]] : 
  attempt to select less than one element in integerOneIndex
Calls: f
> 
> ##  getExportedValue  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getExportedValue", pos = 'package:base')
> f()
Error in asNamespace(ns) : argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(NULL)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(,NULL)
Error in asNamespace(ns) : argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(NULL,NULL)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(list())
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(l0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> asNamespace -> getNamespace
> f(m0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(df0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(FALSE)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(list(),list())
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(l0,l0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(c0,c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> asNamespace -> getNamespace
> f(df0,df0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(FALSE,FALSE)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> 
> ##  getHook  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getHook", pos = 'package:base')
> f()
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  argument "hookName" is missing, with no default
Calls: f -> get0
> f(NULL)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> get0
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> get0
> f(l0)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> get0
> f(c0)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> get0
> f(m0)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> get0
> f(df0)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> get0
> f(FALSE)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> get0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  getLoadedDLLs  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getLoadedDLLs", pos = 'package:base')
> f()
                                                             Filename
base                                                             base
methods       /home/aviral/projects/r/library/methods/libs/methods.so
utils             /home/aviral/projects/r/library/utils/libs/utils.so
grDevices /home/aviral/projects/r/library/grDevices/libs/grDevices.so
graphics    /home/aviral/projects/r/library/graphics/libs/graphics.so
stats             /home/aviral/projects/r/library/stats/libs/stats.so
lapack                     /home/aviral/projects/r/modules//lapack.so
R_X11                       /home/aviral/projects/r/modules//R_X11.so
internet                 /home/aviral/projects/r/modules//internet.so
          Dynamic.Lookup
base               FALSE
methods            FALSE
utils              FALSE
grDevices          FALSE
graphics           FALSE
stats              FALSE
lapack              TRUE
R_X11               TRUE
internet            TRUE
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  getNamespace  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getNamespace", pos = 'package:base')
> f()
Error in f() : argument "name" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid type/length (symbol/0) in vector allocation
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid type/length (symbol/0) in vector allocation
> f(l0)
Error in f(l0) : invalid data of mode 'logical' (too short)
> f(c0)
Error in f(c0) : invalid data of mode 'character' (too short)
> f(m0)
Error in f(m0) : invalid data of mode 'double' (too short)
> f(df0)
Error in f(df0) : invalid type/length (symbol/1) in vector allocation
> f(FALSE)
Error in loadNamespace(name) : there is no package called 'FALSE'
Calls: f ... tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  getNamespaceExports  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getNamespaceExports", pos = 'package:base')
> f()
Error in asNamespace(ns) : argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(NULL)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(l0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> asNamespace -> getNamespace
> f(m0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(df0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(FALSE)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  getNamespaceImports  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getNamespaceImports", pos = 'package:base')
> f()
Error in asNamespace(ns) : argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(NULL)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(l0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> asNamespace -> getNamespace
> f(m0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(df0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(FALSE)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  getNamespaceInfo  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getNamespaceInfo", pos = 'package:base')
> f()
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(NULL)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(,NULL)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(NULL,NULL)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(list())
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(l0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> asNamespace -> getNamespace
> f(m0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(df0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(FALSE)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(list(),list())
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(l0,l0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(c0,c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> asNamespace -> getNamespace
> f(df0,df0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(FALSE,FALSE)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> 
> ##  getNamespaceName  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getNamespaceName", pos = 'package:base')
> f()
Error in asNamespace(ns) : argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(NULL)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(l0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> asNamespace -> getNamespace
> f(m0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(df0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(FALSE)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  getNamespaceUsers  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getNamespaceUsers", pos = 'package:base')
> f()
Error in asNamespace(ns) : argument "ns" is missing, with no default
Calls: f -> getNamespaceName -> asNamespace -> asNamespace
> f(NULL)
Error in asNamespace(ns) : not a namespace
Calls: f -> getNamespaceName -> asNamespace -> asNamespace
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in asNamespace(ns) : not a namespace
Calls: f -> getNamespaceName -> asNamespace -> asNamespace
> f(l0)
Error in asNamespace(ns) : not a namespace
Calls: f -> getNamespaceName -> asNamespace -> asNamespace
> f(c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f ... getNamespaceName -> asNamespace -> asNamespace -> getNamespace
> f(m0)
Error in asNamespace(ns) : not a namespace
Calls: f -> getNamespaceName -> asNamespace -> asNamespace
> f(df0)
Error in asNamespace(ns) : not a namespace
Calls: f -> getNamespaceName -> asNamespace -> asNamespace
> f(FALSE)
Error in asNamespace(ns) : not a namespace
Calls: f -> getNamespaceName -> asNamespace -> asNamespace
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  getNamespaceVersion  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getNamespaceVersion", pos = 'package:base')
> f()
Error in asNamespace(ns) : argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(NULL)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(l0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> asNamespace -> getNamespace
> f(m0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(df0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(FALSE)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  getNativeSymbolInfo  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getNativeSymbolInfo", pos = 'package:base')
> f()
Error in lapply(name, function(id) { : 
  argument "name" is missing, with no default
Calls: f -> lapply
> f(NULL)
list()
> f(,NULL)
Error in f(, NULL) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
> f(list())
named list()
> f(l0)
named list()
> f(c0)
named list()
> f(m0)
named list()
> f(df0)
Error in FUN(X[[i]], ...) : 'translateChar' must be called on a CHARSXP
Calls: f -> lapply -> FUN
> f(FALSE)
Error in FUN(X[[i]], ...) : no such symbol FALSE
Calls: f -> lapply -> FUN
> f(list(),list())
Error in f(list(), list()) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
> f(l0,l0)
Error in f(l0, l0) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
> f(c0,c0)
named list()
> f(df0,df0)
Error in f(df0, df0) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  must pass a package name, "DLLInfo" or "DllInfoReference" object
> 
> ##  getOption  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getOption", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'x' must be a character string
> f(,NULL)
Error in match(x, table, nomatch = 0L) : 
  argument "x" is missing, with no default
Calls: f -> %in% -> match
> f(NULL,NULL)
Error in if (missing(default) || x %in% names(options())) .Internal(getOption(x)) else default : 
  missing value where TRUE/FALSE needed
Calls: f
> f(list())
Error in f(list()) : 'x' must be a character string
> f(l0)
Error in f(l0) : 'x' must be a character string
> f(c0)
Error in f(c0) : 'x' must be a character string
> f(m0)
Error in f(m0) : 'x' must be a character string
> f(df0)
Error in f(df0) : 'x' must be a character string
> f(FALSE)
Error in f(FALSE) : 'x' must be a character string
> f(list(),list())
Error in if (missing(default) || x %in% names(options())) .Internal(getOption(x)) else default : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0,l0)
Error in if (missing(default) || x %in% names(options())) .Internal(getOption(x)) else default : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0,c0)
Error in if (missing(default) || x %in% names(options())) .Internal(getOption(x)) else default : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  getRversion  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getRversion", pos = 'package:base')
> f()
[1] '3.3.0'
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  getSrcLines  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getSrcLines", pos = 'package:base')
> f()
Error in f() : argument "first" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "first" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "last" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "last" is missing, with no default
> f(list())
Error in f(list()) : argument "first" is missing, with no default
> f(l0)
Error in f(l0) : argument "first" is missing, with no default
> f(c0)
Error in f(c0) : argument "first" is missing, with no default
> f(m0)
Error in f(m0) : argument "first" is missing, with no default
> f(df0)
Error in f(df0) : argument "first" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "first" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "last" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "last" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "last" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "last" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "last" is missing, with no default
> 
> ##  getTaskCallbackNames  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getTaskCallbackNames", pos = 'package:base')
> f()
character(0)
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  geterrmessage  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("geterrmessage", pos = 'package:base')
> f()
[1] "Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)\n"
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  gettext  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("gettext", pos = 'package:base')
> f()
NULL
> f(NULL)
character(0)
> f(,NULL)
character(0)
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[1] "integer(0)" "integer(0)"
> f(FALSE,FALSE)
[1] "FALSE" "FALSE"
> 
> ##  gettextf  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("gettextf", pos = 'package:base')
> f()
Error in lapply(list(...), as.character) : 
  argument "fmt" is missing, with no default
Calls: f -> sprintf -> gettext -> lapply
> f(NULL)
character(0)
> f(,NULL)
Error in lapply(list(...), as.character) : 
  argument "fmt" is missing, with no default
Calls: f -> sprintf -> gettext -> lapply
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[1] "integer(0)"
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  getwd  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getwd", pos = 'package:base')
> f()
[1] "/home/aviral/projects/r/tests"
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  gl  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("gl", pos = 'package:base')
> f()
Error in rep.int(seq_len(n), rep.int(k, n)) : 
  argument "n" is missing, with no default
Calls: f -> rep_len -> rep.int
> f(NULL)
Error in seq_len(n) : argument must be coercible to non-negative integer
Calls: f -> rep_len -> rep.int
In addition: Warning message:
In seq_len(n) : first element used of 'length.out' argument
> f(,NULL)
Error in rep.int(seq_len(n), rep.int(k, n)) : 
  argument "n" is missing, with no default
Calls: f -> rep_len -> rep.int
> f(NULL,NULL)
Error in seq_len(n) : argument must be coercible to non-negative integer
Calls: f -> rep_len -> rep.int
In addition: Warning message:
In seq_len(n) : first element used of 'length.out' argument
> f(list())
Error in seq_len(n) : argument must be coercible to non-negative integer
Calls: f -> rep_len -> rep.int
In addition: Warning message:
In seq_len(n) : first element used of 'length.out' argument
> f(l0)
Error in seq_len(n) : argument must be coercible to non-negative integer
Calls: f -> rep_len -> rep.int
In addition: Warning message:
In seq_len(n) : first element used of 'length.out' argument
> f(c0)
Error in seq_len(n) : argument must be coercible to non-negative integer
Calls: f -> rep_len -> rep.int
In addition: Warning message:
In seq_len(n) : first element used of 'length.out' argument
> f(m0)
Error in seq_len(n) : argument must be coercible to non-negative integer
Calls: f -> rep_len -> rep.int
In addition: Warning message:
In seq_len(n) : first element used of 'length.out' argument
> f(df0)
Error in seq_len(n) : argument must be coercible to non-negative integer
Calls: f -> rep_len -> rep.int
> f(FALSE)
Error in rep.int(k, n) : argument "k" is missing, with no default
Calls: f -> rep_len -> rep.int -> rep.int
> f(list(),list())
Error in seq_len(n) : argument must be coercible to non-negative integer
Calls: f -> rep_len -> rep.int
In addition: Warning message:
In seq_len(n) : first element used of 'length.out' argument
> f(l0,l0)
Error in seq_len(n) : argument must be coercible to non-negative integer
Calls: f -> rep_len -> rep.int
In addition: Warning message:
In seq_len(n) : first element used of 'length.out' argument
> f(c0,c0)
Error in seq_len(n) : argument must be coercible to non-negative integer
Calls: f -> rep_len -> rep.int
In addition: Warning message:
In seq_len(n) : first element used of 'length.out' argument
> f(df0,df0)
Error in seq_len(n) : argument must be coercible to non-negative integer
Calls: f -> rep_len -> rep.int
> f(FALSE,FALSE)
factor(0)
Levels: 
> 
> ##  globalenv  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("globalenv", pos = 'package:base')
> f()
<environment: R_GlobalEnv>
> f(NULL)
Error in f(NULL) : 1 argument passed to 'globalenv' which requires 0
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'globalenv' which requires 0
> f(list())
Error in f(list()) : 1 argument passed to 'globalenv' which requires 0
> f(l0)
Error in f(l0) : 1 argument passed to 'globalenv' which requires 0
> f(c0)
Error in f(c0) : 1 argument passed to 'globalenv' which requires 0
> f(m0)
Error in f(m0) : 1 argument passed to 'globalenv' which requires 0
> f(df0)
Error in f(df0) : 1 argument passed to 'globalenv' which requires 0
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'globalenv' which requires 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'globalenv' which requires 0
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'globalenv' which requires 0
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'globalenv' which requires 0
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'globalenv' which requires 0
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'globalenv' which requires 0
> 
> ##  gregexpr  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("gregexpr", pos = 'package:base')
> f()
Error in f() : argument "text" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "text" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "pattern" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'pattern' argument
> f(list())
Error in f(list()) : argument "text" is missing, with no default
> f(l0)
Error in f(l0) : argument "text" is missing, with no default
> f(c0)
Error in f(c0) : argument "text" is missing, with no default
> f(m0)
Error in f(m0) : argument "text" is missing, with no default
> f(df0)
Error in f(df0) : argument "text" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "text" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'pattern' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'pattern' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'pattern' argument
> f(df0,df0)
[[1]]
[1] -1
attr(,"match.length")
[1] -1
attr(,"useBytes")
[1] TRUE

> f(FALSE,FALSE)
[[1]]
[1] 1
attr(,"match.length")
[1] 5
attr(,"useBytes")
[1] TRUE

> 
> ##  grep  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("grep", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "x" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "pattern" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'pattern' argument
> f(list())
Error in f(list()) : argument "x" is missing, with no default
> f(l0)
Error in f(l0) : argument "x" is missing, with no default
> f(c0)
Error in f(c0) : argument "x" is missing, with no default
> f(m0)
Error in f(m0) : argument "x" is missing, with no default
> f(df0)
Error in f(df0) : argument "x" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "x" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'pattern' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'pattern' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'pattern' argument
> f(df0,df0)
integer(0)
> f(FALSE,FALSE)
[1] 1
> 
> ##  grepRaw  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("grepRaw", pos = 'package:base')
> f()
Error in f() : argument "pattern" is missing, with no default
> f(NULL)
Error in charToRaw(as.character(pattern)) : 
  argument must be a character vector of length 1
Calls: f -> charToRaw
> f(,NULL)
Error in f(, NULL) : argument "pattern" is missing, with no default
> f(NULL,NULL)
Error in charToRaw(as.character(pattern)) : 
  argument must be a character vector of length 1
Calls: f -> charToRaw
> f(list())
Error in charToRaw(as.character(pattern)) : 
  argument must be a character vector of length 1
Calls: f -> charToRaw
> f(l0)
Error in charToRaw(as.character(pattern)) : 
  argument must be a character vector of length 1
Calls: f -> charToRaw
> f(c0)
Error in charToRaw(as.character(pattern)) : 
  argument must be a character vector of length 1
Calls: f -> charToRaw
> f(m0)
Error in charToRaw(as.character(pattern)) : 
  argument must be a character vector of length 1
Calls: f -> charToRaw
> f(df0)
Error in f(df0) : argument "x" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "x" is missing, with no default
> f(list(),list())
Error in charToRaw(as.character(pattern)) : 
  argument must be a character vector of length 1
Calls: f -> charToRaw
> f(l0,l0)
Error in charToRaw(as.character(pattern)) : 
  argument must be a character vector of length 1
Calls: f -> charToRaw
> f(c0,c0)
Error in charToRaw(as.character(pattern)) : 
  argument must be a character vector of length 1
Calls: f -> charToRaw
> f(df0,df0)
integer(0)
> f(FALSE,FALSE)
[1] 1
> 
> ##  grepl  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("grepl", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "x" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "pattern" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'pattern' argument
> f(list())
Error in f(list()) : argument "x" is missing, with no default
> f(l0)
Error in f(l0) : argument "x" is missing, with no default
> f(c0)
Error in f(c0) : argument "x" is missing, with no default
> f(m0)
Error in f(m0) : argument "x" is missing, with no default
> f(df0)
Error in f(df0) : argument "x" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "x" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'pattern' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'pattern' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'pattern' argument
> f(df0,df0)
[1] FALSE
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  grouping  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("grouping", pos = 'package:base')
> f()
NULL
> f(NULL)
Error in f(NULL) : argument 1 is not a vector
> f(,NULL)
Error in f(, NULL) : argument 1 is not a vector
> f(NULL,NULL)
Error in f(NULL, NULL) : argument 1 is not a vector
> f(list())
Error in f(list()) : First arg is type 'list', not yet supported
> f(l0)
integer(0)
attr(,"ends")
integer(0)
attr(,"maxgrpn")
[1] NA
attr(,"class")
[1] "grouping"
> f(c0)
integer(0)
attr(,"ends")
integer(0)
attr(,"maxgrpn")
[1] NA
attr(,"class")
[1] "grouping"
> f(m0)
integer(0)
attr(,"ends")
integer(0)
attr(,"maxgrpn")
[1] NA
attr(,"class")
[1] "grouping"
> f(df0)
integer(0)
attr(,"ends")
integer(0)
attr(,"maxgrpn")
[1] NA
attr(,"class")
[1] "grouping"
> f(FALSE)
[1] 1
attr(,"ends")
[1] 1
attr(,"maxgrpn")
[1] 1
attr(,"class")
[1] "grouping"
> f(list(),list())
Error in f(list(), list()) : First arg is type 'list', not yet supported
> f(l0,l0)
integer(0)
attr(,"ends")
integer(0)
attr(,"maxgrpn")
[1] NA
attr(,"class")
[1] "grouping"
> f(c0,c0)
integer(0)
attr(,"ends")
integer(0)
attr(,"maxgrpn")
[1] NA
attr(,"class")
[1] "grouping"
> f(df0,df0)
integer(0)
attr(,"ends")
integer(0)
attr(,"maxgrpn")
[1] NA
attr(,"class")
[1] "grouping"
> f(FALSE,FALSE)
[1] 1
attr(,"ends")
[1] 1
attr(,"maxgrpn")
[1] 1
attr(,"class")
[1] "grouping"
> 
> ##  gsub  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("gsub", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "x" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "x" is missing, with no default
> f(list())
Error in f(list()) : argument "x" is missing, with no default
> f(l0)
Error in f(l0) : argument "x" is missing, with no default
> f(c0)
Error in f(c0) : argument "x" is missing, with no default
> f(m0)
Error in f(m0) : argument "x" is missing, with no default
> f(df0)
Error in f(df0) : argument "x" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "x" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "x" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "x" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "x" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "x" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "x" is missing, with no default
> 
> ##  gzcon  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("gzcon", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in f(NULL) : 'con' is not a connection
> f(,NULL)
Error in f(, NULL) : argument "con" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'con' is not a connection
> f(list())
Error in f(list()) : 'con' is not a connection
> f(l0)
Error in f(l0) : 'con' is not a connection
> f(c0)
Error in f(c0) : 'con' is not a connection
> f(m0)
Error in f(m0) : 'con' is not a connection
> f(df0)
Error in f(df0) : 'con' is not a connection
> f(FALSE)
Error in f(FALSE) : 'con' is not a connection
> f(list(),list())
Error in f(list(), list()) : 'con' is not a connection
> f(l0,l0)
Error in f(l0, l0) : 'con' is not a connection
> f(c0,c0)
Error in f(c0, c0) : 'con' is not a connection
> f(df0,df0)
Error in f(df0, df0) : 'con' is not a connection
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'con' is not a connection
> 
> ##  gzfile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("gzfile", pos = 'package:base')
> f()
Error in f() : argument "description" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'description' argument
> f(,NULL)
Error in f(, NULL) : argument "description" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'description' argument
> f(list())
Error in f(list()) : invalid 'description' argument
> f(l0)
Error in f(l0) : invalid 'description' argument
> f(c0)
Error in f(c0) : invalid 'description' argument
> f(m0)
Error in f(m0) : invalid 'description' argument
> f(df0)
Error in f(df0) : invalid 'description' argument
> f(FALSE)
Error in f(FALSE) : invalid 'description' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'description' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'description' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'description' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'description' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'description' argument
> 
> ##  iconv  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("iconv", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'from' argument
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
Error in f(list(), list()) : invalid 'from' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'from' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'from' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'from' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'from' argument
> 
> ##  iconvlist  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("iconvlist", pos = 'package:base')
> f()
   [1] "1026"                   "1046"                  
   [3] "1047"                   "10646-1:1993"          
   [5] "437"                    "500"                   
   [7] "500V1"                  "850"                   
   [9] "851"                    "852"                   
  [11] "855"                    "856"                   
  [13] "857"                    "860"                   
  [15] "861"                    "862"                   
  [17] "863"                    "864"                   
  [19] "865"                    "866"                   
  [21] "866NAV"                 "869"                   
  [23] "874"                    "8859_1"                
  [25] "8859_2"                 "8859_3"                
  [27] "8859_4"                 "8859_5"                
  [29] "8859_6"                 "8859_7"                
  [31] "8859_8"                 "8859_9"                
  [33] "904"                    "ANSI_X3.110"           
  [35] "ANSI_X3.110-1983"       "ANSI_X3.4"             
  [37] "ANSI_X3.4-1968"         "ANSI_X3.4-1986"        
  [39] "ARABIC"                 "ARABIC7"               
  [41] "ARMSCII-8"              "ASCII"                 
  [43] "ASMO-708"               "ASMO_449"              
  [45] "BALTIC"                 "BIG-5"                 
  [47] "BIG-FIVE"               "BIG5"                  
  [49] "BIG5-HKSCS"             "BIG5HKSCS"             
  [51] "BIGFIVE"                "BRF"                   
  [53] "BS_4730"                "CA"                    
  [55] "CN"                     "CN-BIG5"               
  [57] "CN-GB"                  "CP-AR"                 
  [59] "CP-GR"                  "CP-HU"                 
  [61] "CP037"                  "CP038"                 
  [63] "CP10007"                "CP1004"                
  [65] "CP1008"                 "CP1025"                
  [67] "CP1026"                 "CP1046"                
  [69] "CP1047"                 "CP1070"                
  [71] "CP1079"                 "CP1081"                
  [73] "CP1084"                 "CP1089"                
  [75] "CP1097"                 "CP1112"                
  [77] "CP1122"                 "CP1123"                
  [79] "CP1124"                 "CP1125"                
  [81] "CP1129"                 "CP1130"                
  [83] "CP1132"                 "CP1133"                
  [85] "CP1137"                 "CP1140"                
  [87] "CP1141"                 "CP1142"                
  [89] "CP1143"                 "CP1144"                
  [91] "CP1145"                 "CP1146"                
  [93] "CP1147"                 "CP1148"                
  [95] "CP1149"                 "CP1153"                
  [97] "CP1154"                 "CP1155"                
  [99] "CP1156"                 "CP1157"                
 [101] "CP1158"                 "CP1160"                
 [103] "CP1161"                 "CP1162"                
 [105] "CP1163"                 "CP1164"                
 [107] "CP1166"                 "CP1167"                
 [109] "CP1250"                 "CP1251"                
 [111] "CP1252"                 "CP1253"                
 [113] "CP1254"                 "CP1255"                
 [115] "CP1256"                 "CP1257"                
 [117] "CP1258"                 "CP12712"               
 [119] "CP1282"                 "CP1361"                
 [121] "CP1364"                 "CP1371"                
 [123] "CP1388"                 "CP1390"                
 [125] "CP1399"                 "CP16804"               
 [127] "CP273"                  "CP274"                 
 [129] "CP275"                  "CP278"                 
 [131] "CP280"                  "CP281"                 
 [133] "CP282"                  "CP284"                 
 [135] "CP285"                  "CP290"                 
 [137] "CP297"                  "CP367"                 
 [139] "CP420"                  "CP423"                 
 [141] "CP424"                  "CP437"                 
 [143] "CP4517"                 "CP4899"                
 [145] "CP4909"                 "CP4971"                
 [147] "CP500"                  "CP5347"                
 [149] "CP737"                  "CP770"                 
 [151] "CP771"                  "CP772"                 
 [153] "CP773"                  "CP774"                 
 [155] "CP775"                  "CP803"                 
 [157] "CP813"                  "CP819"                 
 [159] "CP850"                  "CP851"                 
 [161] "CP852"                  "CP855"                 
 [163] "CP856"                  "CP857"                 
 [165] "CP860"                  "CP861"                 
 [167] "CP862"                  "CP863"                 
 [169] "CP864"                  "CP865"                 
 [171] "CP866"                  "CP866NAV"              
 [173] "CP868"                  "CP869"                 
 [175] "CP870"                  "CP871"                 
 [177] "CP874"                  "CP875"                 
 [179] "CP880"                  "CP891"                 
 [181] "CP901"                  "CP902"                 
 [183] "CP903"                  "CP9030"                
 [185] "CP904"                  "CP905"                 
 [187] "CP9066"                 "CP912"                 
 [189] "CP915"                  "CP916"                 
 [191] "CP918"                  "CP920"                 
 [193] "CP921"                  "CP922"                 
 [195] "CP930"                  "CP932"                 
 [197] "CP933"                  "CP935"                 
 [199] "CP936"                  "CP937"                 
 [201] "CP939"                  "CP9448"                
 [203] "CP949"                  "CP950"                 
 [205] "CPIBM861"               "CSA7-1"                
 [207] "CSA7-2"                 "CSASCII"               
 [209] "CSA_T500"               "CSA_T500-1983"         
 [211] "CSA_Z243.4-1985-1"      "CSA_Z243.4-1985-2"     
 [213] "CSA_Z243.419851"        "CSA_Z243.419852"       
 [215] "CSDECMCS"               "CSEBCDICATDE"          
 [217] "CSEBCDICATDEA"          "CSEBCDICCAFR"          
 [219] "CSEBCDICDKNO"           "CSEBCDICDKNOA"         
 [221] "CSEBCDICES"             "CSEBCDICESA"           
 [223] "CSEBCDICESS"            "CSEBCDICFISE"          
 [225] "CSEBCDICFISEA"          "CSEBCDICFR"            
 [227] "CSEBCDICIT"             "CSEBCDICPT"            
 [229] "CSEBCDICUK"             "CSEBCDICUS"            
 [231] "CSEUCKR"                "CSEUCPKDFMTJAPANESE"   
 [233] "CSGB2312"               "CSHPROMAN8"            
 [235] "CSIBM037"               "CSIBM038"              
 [237] "CSIBM1008"              "CSIBM1025"             
 [239] "CSIBM1026"              "CSIBM1097"             
 [241] "CSIBM1112"              "CSIBM1122"             
 [243] "CSIBM1123"              "CSIBM1124"             
 [245] "CSIBM1129"              "CSIBM1130"             
 [247] "CSIBM1132"              "CSIBM1133"             
 [249] "CSIBM1137"              "CSIBM1140"             
 [251] "CSIBM1141"              "CSIBM1142"             
 [253] "CSIBM1143"              "CSIBM1144"             
 [255] "CSIBM1145"              "CSIBM1146"             
 [257] "CSIBM1147"              "CSIBM1148"             
 [259] "CSIBM1149"              "CSIBM1153"             
 [261] "CSIBM1154"              "CSIBM1155"             
 [263] "CSIBM1156"              "CSIBM1157"             
 [265] "CSIBM1158"              "CSIBM1160"             
 [267] "CSIBM1161"              "CSIBM11621162"         
 [269] "CSIBM1163"              "CSIBM1164"             
 [271] "CSIBM1166"              "CSIBM1167"             
 [273] "CSIBM12712"             "CSIBM1364"             
 [275] "CSIBM1371"              "CSIBM1388"             
 [277] "CSIBM1390"              "CSIBM1399"             
 [279] "CSIBM16804"             "CSIBM273"              
 [281] "CSIBM274"               "CSIBM275"              
 [283] "CSIBM277"               "CSIBM278"              
 [285] "CSIBM280"               "CSIBM281"              
 [287] "CSIBM284"               "CSIBM285"              
 [289] "CSIBM290"               "CSIBM297"              
 [291] "CSIBM420"               "CSIBM423"              
 [293] "CSIBM424"               "CSIBM4517"             
 [295] "CSIBM4899"              "CSIBM4909"             
 [297] "CSIBM4971"              "CSIBM500"              
 [299] "CSIBM5347"              "CSIBM803"              
 [301] "CSIBM851"               "CSIBM855"              
 [303] "CSIBM856"               "CSIBM857"              
 [305] "CSIBM860"               "CSIBM863"              
 [307] "CSIBM864"               "CSIBM865"              
 [309] "CSIBM866"               "CSIBM868"              
 [311] "CSIBM869"               "CSIBM870"              
 [313] "CSIBM871"               "CSIBM880"              
 [315] "CSIBM891"               "CSIBM901"              
 [317] "CSIBM902"               "CSIBM903"              
 [319] "CSIBM9030"              "CSIBM904"              
 [321] "CSIBM905"               "CSIBM9066"             
 [323] "CSIBM918"               "CSIBM921"              
 [325] "CSIBM922"               "CSIBM930"              
 [327] "CSIBM932"               "CSIBM933"              
 [329] "CSIBM935"               "CSIBM937"              
 [331] "CSIBM939"               "CSIBM943"              
 [333] "CSIBM9448"              "CSISO10367BOX"         
 [335] "CSISO103T618BIT"        "CSISO10SWEDISH"        
 [337] "CSISO111ECMACYRILLIC"   "CSISO11SWEDISHFORNAMES"
 [339] "CSISO121CANADIAN1"      "CSISO122CANADIAN2"     
 [341] "CSISO139CSN369103"      "CSISO141JUSIB1002"     
 [343] "CSISO143IECP271"        "CSISO14JISC6220RO"     
 [345] "CSISO150"               "CSISO150GREEKCCITT"    
 [347] "CSISO151CUBA"           "CSISO153GOST1976874"   
 [349] "CSISO15ITALIAN"         "CSISO16PORTUGESE"      
 [351] "CSISO17SPANISH"         "CSISO18GREEK7OLD"      
 [353] "CSISO19LATINGREEK"      "CSISO2022CN"           
 [355] "CSISO2022JP"            "CSISO2022JP2"          
 [357] "CSISO2022KR"            "CSISO2033"             
 [359] "CSISO21GERMAN"          "CSISO25FRENCH"         
 [361] "CSISO27LATINGREEK1"     "CSISO49INIS"           
 [363] "CSISO4UNITEDKINGDOM"    "CSISO50INIS8"          
 [365] "CSISO51INISCYRILLIC"    "CSISO5427CYRILLIC"     
 [367] "CSISO5427CYRILLIC1981"  "CSISO5428GREEK"        
 [369] "CSISO58GB1988"          "CSISO60DANISHNORWEGIAN"
 [371] "CSISO60NORWEGIAN1"      "CSISO61NORWEGIAN2"     
 [373] "CSISO646DANISH"         "CSISO69FRENCH"         
 [375] "CSISO84PORTUGUESE2"     "CSISO85SPANISH2"       
 [377] "CSISO86HUNGARIAN"       "CSISO88GREEK7"         
 [379] "CSISO89ASMO449"         "CSISO90"               
 [381] "CSISO92JISC62991984B"   "CSISO99NAPLPS"         
 [383] "CSISOLATIN1"            "CSISOLATIN2"           
 [385] "CSISOLATIN3"            "CSISOLATIN4"           
 [387] "CSISOLATIN5"            "CSISOLATIN6"           
 [389] "CSISOLATINARABIC"       "CSISOLATINCYRILLIC"    
 [391] "CSISOLATINGREEK"        "CSISOLATINHEBREW"      
 [393] "CSKOI8R"                "CSKSC5636"             
 [395] "CSMACINTOSH"            "CSNATSDANO"            
 [397] "CSNATSSEFI"             "CSN_369103"            
 [399] "CSPC775BALTIC"          "CSPC850MULTILINGUAL"   
 [401] "CSPC862LATINHEBREW"     "CSPC8CODEPAGE437"      
 [403] "CSPCP852"               "CSSHIFTJIS"            
 [405] "CSUCS4"                 "CSUNICODE"             
 [407] "CSWINDOWS31J"           "CUBA"                  
 [409] "CWI"                    "CWI-2"                 
 [411] "CYRILLIC"               "DE"                    
 [413] "DEC"                    "DEC-MCS"               
 [415] "DECMCS"                 "DIN_66003"             
 [417] "DK"                     "DS2089"                
 [419] "DS_2089"                "E13B"                  
 [421] "EBCDIC-AT-DE"           "EBCDIC-AT-DE-A"        
 [423] "EBCDIC-BE"              "EBCDIC-BR"             
 [425] "EBCDIC-CA-FR"           "EBCDIC-CP-AR1"         
 [427] "EBCDIC-CP-AR2"          "EBCDIC-CP-BE"          
 [429] "EBCDIC-CP-CA"           "EBCDIC-CP-CH"          
 [431] "EBCDIC-CP-DK"           "EBCDIC-CP-ES"          
 [433] "EBCDIC-CP-FI"           "EBCDIC-CP-FR"          
 [435] "EBCDIC-CP-GB"           "EBCDIC-CP-GR"          
 [437] "EBCDIC-CP-HE"           "EBCDIC-CP-IS"          
 [439] "EBCDIC-CP-IT"           "EBCDIC-CP-NL"          
 [441] "EBCDIC-CP-NO"           "EBCDIC-CP-ROECE"       
 [443] "EBCDIC-CP-SE"           "EBCDIC-CP-TR"          
 [445] "EBCDIC-CP-US"           "EBCDIC-CP-WT"          
 [447] "EBCDIC-CP-YU"           "EBCDIC-CYRILLIC"       
 [449] "EBCDIC-DK-NO"           "EBCDIC-DK-NO-A"        
 [451] "EBCDIC-ES"              "EBCDIC-ES-A"           
 [453] "EBCDIC-ES-S"            "EBCDIC-FI-SE"          
 [455] "EBCDIC-FI-SE-A"         "EBCDIC-FR"             
 [457] "EBCDIC-GREEK"           "EBCDIC-INT"            
 [459] "EBCDIC-INT1"            "EBCDIC-IS-FRISS"       
 [461] "EBCDIC-IT"              "EBCDIC-JP-E"           
 [463] "EBCDIC-JP-KANA"         "EBCDIC-PT"             
 [465] "EBCDIC-UK"              "EBCDIC-US"             
 [467] "EBCDICATDE"             "EBCDICATDEA"           
 [469] "EBCDICCAFR"             "EBCDICDKNO"            
 [471] "EBCDICDKNOA"            "EBCDICES"              
 [473] "EBCDICESA"              "EBCDICESS"             
 [475] "EBCDICFISE"             "EBCDICFISEA"           
 [477] "EBCDICFR"               "EBCDICISFRISS"         
 [479] "EBCDICIT"               "EBCDICPT"              
 [481] "EBCDICUK"               "EBCDICUS"              
 [483] "ECMA-114"               "ECMA-118"              
 [485] "ECMA-128"               "ECMA-CYRILLIC"         
 [487] "ECMACYRILLIC"           "ELOT_928"              
 [489] "ES"                     "ES2"                   
 [491] "EUC-CN"                 "EUC-JISX0213"          
 [493] "EUC-JP"                 "EUC-JP-MS"             
 [495] "EUC-KR"                 "EUC-TW"                
 [497] "EUCCN"                  "EUCJP"                 
 [499] "EUCJP-MS"               "EUCJP-OPEN"            
 [501] "EUCJP-WIN"              "EUCKR"                 
 [503] "EUCTW"                  "FI"                    
 [505] "FR"                     "GB"                    
 [507] "GB13000"                "GB18030"               
 [509] "GB2312"                 "GBK"                   
 [511] "GB_1988-80"             "GB_198880"             
 [513] "GEORGIAN-ACADEMY"       "GEORGIAN-PS"           
 [515] "GOST_19768"             "GOST_19768-74"         
 [517] "GOST_1976874"           "GREEK"                 
 [519] "GREEK-CCITT"            "GREEK7"                
 [521] "GREEK7-OLD"             "GREEK7OLD"             
 [523] "GREEK8"                 "GREEKCCITT"            
 [525] "HEBREW"                 "HP-GREEK8"             
 [527] "HP-ROMAN8"              "HP-ROMAN9"             
 [529] "HP-THAI8"               "HP-TURKISH8"           
 [531] "HPGREEK8"               "HPROMAN8"              
 [533] "HPROMAN9"               "HPTHAI8"               
 [535] "HPTURKISH8"             "HU"                    
 [537] "IBM-1008"               "IBM-1025"              
 [539] "IBM-1046"               "IBM-1047"              
 [541] "IBM-1097"               "IBM-1112"              
 [543] "IBM-1122"               "IBM-1123"              
 [545] "IBM-1124"               "IBM-1129"              
 [547] "IBM-1130"               "IBM-1132"              
 [549] "IBM-1133"               "IBM-1137"              
 [551] "IBM-1140"               "IBM-1141"              
 [553] "IBM-1142"               "IBM-1143"              
 [555] "IBM-1144"               "IBM-1145"              
 [557] "IBM-1146"               "IBM-1147"              
 [559] "IBM-1148"               "IBM-1149"              
 [561] "IBM-1153"               "IBM-1154"              
 [563] "IBM-1155"               "IBM-1156"              
 [565] "IBM-1157"               "IBM-1158"              
 [567] "IBM-1160"               "IBM-1161"              
 [569] "IBM-1162"               "IBM-1163"              
 [571] "IBM-1164"               "IBM-1166"              
 [573] "IBM-1167"               "IBM-12712"             
 [575] "IBM-1364"               "IBM-1371"              
 [577] "IBM-1388"               "IBM-1390"              
 [579] "IBM-1399"               "IBM-16804"             
 [581] "IBM-4517"               "IBM-4899"              
 [583] "IBM-4909"               "IBM-4971"              
 [585] "IBM-5347"               "IBM-803"               
 [587] "IBM-856"                "IBM-901"               
 [589] "IBM-902"                "IBM-9030"              
 [591] "IBM-9066"               "IBM-921"               
 [593] "IBM-922"                "IBM-930"               
 [595] "IBM-932"                "IBM-933"               
 [597] "IBM-935"                "IBM-937"               
 [599] "IBM-939"                "IBM-943"               
 [601] "IBM-9448"               "IBM037"                
 [603] "IBM038"                 "IBM1004"               
 [605] "IBM1008"                "IBM1025"               
 [607] "IBM1026"                "IBM1046"               
 [609] "IBM1047"                "IBM1089"               
 [611] "IBM1097"                "IBM1112"               
 [613] "IBM1122"                "IBM1123"               
 [615] "IBM1124"                "IBM1129"               
 [617] "IBM1130"                "IBM1132"               
 [619] "IBM1133"                "IBM1137"               
 [621] "IBM1140"                "IBM1141"               
 [623] "IBM1142"                "IBM1143"               
 [625] "IBM1144"                "IBM1145"               
 [627] "IBM1146"                "IBM1147"               
 [629] "IBM1148"                "IBM1149"               
 [631] "IBM1153"                "IBM1154"               
 [633] "IBM1155"                "IBM1156"               
 [635] "IBM1157"                "IBM1158"               
 [637] "IBM1160"                "IBM1161"               
 [639] "IBM1162"                "IBM1163"               
 [641] "IBM1164"                "IBM1166"               
 [643] "IBM1167"                "IBM12712"              
 [645] "IBM1364"                "IBM1371"               
 [647] "IBM1388"                "IBM1390"               
 [649] "IBM1399"                "IBM16804"              
 [651] "IBM256"                 "IBM273"                
 [653] "IBM274"                 "IBM275"                
 [655] "IBM277"                 "IBM278"                
 [657] "IBM280"                 "IBM281"                
 [659] "IBM284"                 "IBM285"                
 [661] "IBM290"                 "IBM297"                
 [663] "IBM367"                 "IBM420"                
 [665] "IBM423"                 "IBM424"                
 [667] "IBM437"                 "IBM4517"               
 [669] "IBM4899"                "IBM4909"               
 [671] "IBM4971"                "IBM500"                
 [673] "IBM5347"                "IBM775"                
 [675] "IBM803"                 "IBM813"                
 [677] "IBM819"                 "IBM848"                
 [679] "IBM850"                 "IBM851"                
 [681] "IBM852"                 "IBM855"                
 [683] "IBM856"                 "IBM857"                
 [685] "IBM860"                 "IBM861"                
 [687] "IBM862"                 "IBM863"                
 [689] "IBM864"                 "IBM865"                
 [691] "IBM866"                 "IBM866NAV"             
 [693] "IBM868"                 "IBM869"                
 [695] "IBM870"                 "IBM871"                
 [697] "IBM874"                 "IBM875"                
 [699] "IBM880"                 "IBM891"                
 [701] "IBM901"                 "IBM902"                
 [703] "IBM903"                 "IBM9030"               
 [705] "IBM904"                 "IBM905"                
 [707] "IBM9066"                "IBM912"                
 [709] "IBM915"                 "IBM916"                
 [711] "IBM918"                 "IBM920"                
 [713] "IBM921"                 "IBM922"                
 [715] "IBM930"                 "IBM932"                
 [717] "IBM933"                 "IBM935"                
 [719] "IBM937"                 "IBM939"                
 [721] "IBM943"                 "IBM9448"               
 [723] "IEC_P27-1"              "IEC_P271"              
 [725] "INIS"                   "INIS-8"                
 [727] "INIS-CYRILLIC"          "INIS8"                 
 [729] "INISCYRILLIC"           "ISIRI-3342"            
 [731] "ISIRI3342"              "ISO-10646"             
 [733] "ISO-2022-CN"            "ISO-2022-CN-EXT"       
 [735] "ISO-2022-JP"            "ISO-2022-JP-2"         
 [737] "ISO-2022-JP-3"          "ISO-2022-KR"           
 [739] "ISO-8859-1"             "ISO-8859-10"           
 [741] "ISO-8859-11"            "ISO-8859-13"           
 [743] "ISO-8859-14"            "ISO-8859-15"           
 [745] "ISO-8859-16"            "ISO-8859-2"            
 [747] "ISO-8859-3"             "ISO-8859-4"            
 [749] "ISO-8859-5"             "ISO-8859-6"            
 [751] "ISO-8859-7"             "ISO-8859-8"            
 [753] "ISO-8859-9"             "ISO-8859-9E"           
 [755] "ISO-CELTIC"             "ISO-IR-10"             
 [757] "ISO-IR-100"             "ISO-IR-101"            
 [759] "ISO-IR-103"             "ISO-IR-109"            
 [761] "ISO-IR-11"              "ISO-IR-110"            
 [763] "ISO-IR-111"             "ISO-IR-121"            
 [765] "ISO-IR-122"             "ISO-IR-126"            
 [767] "ISO-IR-127"             "ISO-IR-138"            
 [769] "ISO-IR-139"             "ISO-IR-14"             
 [771] "ISO-IR-141"             "ISO-IR-143"            
 [773] "ISO-IR-144"             "ISO-IR-148"            
 [775] "ISO-IR-15"              "ISO-IR-150"            
 [777] "ISO-IR-151"             "ISO-IR-153"            
 [779] "ISO-IR-155"             "ISO-IR-156"            
 [781] "ISO-IR-157"             "ISO-IR-16"             
 [783] "ISO-IR-166"             "ISO-IR-17"             
 [785] "ISO-IR-179"             "ISO-IR-18"             
 [787] "ISO-IR-19"              "ISO-IR-193"            
 [789] "ISO-IR-197"             "ISO-IR-199"            
 [791] "ISO-IR-203"             "ISO-IR-209"            
 [793] "ISO-IR-21"              "ISO-IR-226"            
 [795] "ISO-IR-25"              "ISO-IR-27"             
 [797] "ISO-IR-37"              "ISO-IR-4"              
 [799] "ISO-IR-49"              "ISO-IR-50"             
 [801] "ISO-IR-51"              "ISO-IR-54"             
 [803] "ISO-IR-55"              "ISO-IR-57"             
 [805] "ISO-IR-6"               "ISO-IR-60"             
 [807] "ISO-IR-61"              "ISO-IR-69"             
 [809] "ISO-IR-8-1"             "ISO-IR-84"             
 [811] "ISO-IR-85"              "ISO-IR-86"             
 [813] "ISO-IR-88"              "ISO-IR-89"             
 [815] "ISO-IR-9-1"             "ISO-IR-90"             
 [817] "ISO-IR-92"              "ISO-IR-98"             
 [819] "ISO-IR-99"              "ISO11548-1"            
 [821] "ISO2022CN"              "ISO2022CNEXT"          
 [823] "ISO2022JP"              "ISO2022JP2"            
 [825] "ISO2022KR"              "ISO646-CA"             
 [827] "ISO646-CA2"             "ISO646-CN"             
 [829] "ISO646-CU"              "ISO646-DE"             
 [831] "ISO646-DK"              "ISO646-ES"             
 [833] "ISO646-ES2"             "ISO646-FI"             
 [835] "ISO646-FR"              "ISO646-FR1"            
 [837] "ISO646-GB"              "ISO646-HU"             
 [839] "ISO646-IT"              "ISO646-JP"             
 [841] "ISO646-JP-OCR-B"        "ISO646-KR"             
 [843] "ISO646-NO"              "ISO646-NO2"            
 [845] "ISO646-PT"              "ISO646-PT2"            
 [847] "ISO646-SE"              "ISO646-SE2"            
 [849] "ISO646-US"              "ISO646-YU"             
 [851] "ISO6937"                "ISO8859-1"             
 [853] "ISO8859-10"             "ISO8859-11"            
 [855] "ISO8859-13"             "ISO8859-14"            
 [857] "ISO8859-15"             "ISO8859-16"            
 [859] "ISO8859-2"              "ISO8859-3"             
 [861] "ISO8859-4"              "ISO8859-5"             
 [863] "ISO8859-6"              "ISO8859-7"             
 [865] "ISO8859-8"              "ISO8859-9"             
 [867] "ISO8859-9E"             "ISO88591"              
 [869] "ISO885910"              "ISO885911"             
 [871] "ISO885913"              "ISO885914"             
 [873] "ISO885915"              "ISO885916"             
 [875] "ISO88592"               "ISO88593"              
 [877] "ISO88594"               "ISO88595"              
 [879] "ISO88596"               "ISO88597"              
 [881] "ISO88598"               "ISO88599"              
 [883] "ISO88599E"              "ISO_10367-BOX"         
 [885] "ISO_10367BOX"           "ISO_11548-1"           
 [887] "ISO_2033"               "ISO_2033-1983"         
 [889] "ISO_5427"               "ISO_5427-EXT"          
 [891] "ISO_5427:1981"          "ISO_5427EXT"           
 [893] "ISO_5428"               "ISO_5428:1980"         
 [895] "ISO_646.IRV:1991"       "ISO_6937"              
 [897] "ISO_6937-2"             "ISO_6937-2:1983"       
 [899] "ISO_69372"              "ISO_6937:1992"         
 [901] "ISO_8859-1"             "ISO_8859-10"           
 [903] "ISO_8859-10:1992"       "ISO_8859-14"           
 [905] "ISO_8859-14:1998"       "ISO_8859-15"           
 [907] "ISO_8859-15:1998"       "ISO_8859-16"           
 [909] "ISO_8859-16:2001"       "ISO_8859-1:1987"       
 [911] "ISO_8859-2"             "ISO_8859-2:1987"       
 [913] "ISO_8859-3"             "ISO_8859-3:1988"       
 [915] "ISO_8859-4"             "ISO_8859-4:1988"       
 [917] "ISO_8859-5"             "ISO_8859-5:1988"       
 [919] "ISO_8859-6"             "ISO_8859-6:1987"       
 [921] "ISO_8859-7"             "ISO_8859-7:1987"       
 [923] "ISO_8859-7:2003"        "ISO_8859-8"            
 [925] "ISO_8859-8:1988"        "ISO_8859-9"            
 [927] "ISO_8859-9:1989"        "ISO_8859-9E"           
 [929] "ISO_9036"               "IT"                    
 [931] "JIS_C6220-1969-RO"      "JIS_C62201969RO"       
 [933] "JIS_C6229-1984-B"       "JIS_C62291984B"        
 [935] "JOHAB"                  "JP"                    
 [937] "JP-OCR-B"               "JS"                    
 [939] "JUS_I.B1.002"           "KOI-7"                 
 [941] "KOI-8"                  "KOI8"                  
 [943] "KOI8-R"                 "KOI8-RU"               
 [945] "KOI8-T"                 "KOI8-U"                
 [947] "KOI8R"                  "KOI8U"                 
 [949] "KSC5636"                "L1"                    
 [951] "L10"                    "L2"                    
 [953] "L3"                     "L4"                    
 [955] "L5"                     "L6"                    
 [957] "L7"                     "L8"                    
 [959] "LATIN-9"                "LATIN-GREEK"           
 [961] "LATIN-GREEK-1"          "LATIN1"                
 [963] "LATIN10"                "LATIN2"                
 [965] "LATIN3"                 "LATIN4"                
 [967] "LATIN5"                 "LATIN6"                
 [969] "LATIN7"                 "LATIN8"                
 [971] "LATIN9"                 "LATINGREEK"            
 [973] "LATINGREEK1"            "MAC"                   
 [975] "MAC-CENTRALEUROPE"      "MAC-CYRILLIC"          
 [977] "MAC-IS"                 "MAC-SAMI"              
 [979] "MAC-UK"                 "MACCYRILLIC"           
 [981] "MACINTOSH"              "MACIS"                 
 [983] "MACUK"                  "MACUKRAINIAN"          
 [985] "MIK"                    "MS-ANSI"               
 [987] "MS-ARAB"                "MS-CYRL"               
 [989] "MS-EE"                  "MS-GREEK"              
 [991] "MS-HEBR"                "MS-MAC-CYRILLIC"       
 [993] "MS-TURK"                "MS932"                 
 [995] "MS936"                  "MSCP1361"              
 [997] "MSCP949"                "MSMACCYRILLIC"         
 [999] "MSZ_7795.3"             "MS_KANJI"              
[1001] "NAPLPS"                 "NATS-DANO"             
[1003] "NATS-SEFI"              "NATSDANO"              
[1005] "NATSSEFI"               "NC_NC00-10"            
[1007] "NC_NC00-10:81"          "NC_NC0010"             
[1009] "NF_Z_62-010"            "NF_Z_62-010_(1973)"    
[1011] "NF_Z_62-010_1973"       "NF_Z_62010"            
[1013] "NF_Z_62010_1973"        "NO"                    
[1015] "NO2"                    "NS_4551-1"             
[1017] "NS_4551-2"              "NS_45511"              
[1019] "NS_45512"               "OS2LATIN1"             
[1021] "OSF00010001"            "OSF00010002"           
[1023] "OSF00010003"            "OSF00010004"           
[1025] "OSF00010005"            "OSF00010006"           
[1027] "OSF00010007"            "OSF00010008"           
[1029] "OSF00010009"            "OSF0001000A"           
[1031] "OSF00010020"            "OSF00010100"           
[1033] "OSF00010101"            "OSF00010102"           
[1035] "OSF00010104"            "OSF00010105"           
[1037] "OSF00010106"            "OSF00030010"           
[1039] "OSF0004000A"            "OSF0005000A"           
[1041] "OSF05010001"            "OSF10010001"           
[1043] "OSF10010004"            "OSF10010006"           
[1045] "OSF10020025"            "OSF10020111"           
[1047] "OSF10020115"            "OSF10020116"           
[1049] "OSF10020118"            "OSF1002011C"           
[1051] "OSF1002011D"            "OSF10020122"           
[1053] "OSF10020129"            "OSF100201A4"           
[1055] "OSF100201A8"            "OSF100201B5"           
[1057] "OSF100201F4"            "OSF10020352"           
[1059] "OSF10020354"            "OSF10020357"           
[1061] "OSF10020359"            "OSF1002035D"           
[1063] "OSF1002035E"            "OSF1002035F"           
[1065] "OSF10020360"            "OSF10020364"           
[1067] "OSF10020365"            "OSF10020366"           
[1069] "OSF10020367"            "OSF1002036B"           
[1071] "OSF10020370"            "OSF1002037B"           
[1073] "OSF10020387"            "OSF10020388"           
[1075] "OSF10020396"            "OSF100203B5"           
[1077] "OSF10020402"            "OSF10020417"           
[1079] "PT"                     "PT154"                 
[1081] "PT2"                    "R8"                    
[1083] "R9"                     "RK1048"                
[1085] "ROMAN8"                 "ROMAN9"                
[1087] "RUSCII"                 "SE"                    
[1089] "SE2"                    "SEN_850200_B"          
[1091] "SEN_850200_C"           "SHIFT-JIS"             
[1093] "SHIFT_JIS"              "SHIFT_JISX0213"        
[1095] "SJIS"                   "SJIS-OPEN"             
[1097] "SJIS-WIN"               "SS636127"              
[1099] "STRK1048-2002"          "ST_SEV_358-88"         
[1101] "T.61"                   "T.61-8BIT"             
[1103] "T.618BIT"               "TCVN"                  
[1105] "TCVN-5712"              "TCVN5712-1"            
[1107] "TCVN5712-1:1993"        "THAI8"                 
[1109] "TIS-620"                "TIS620"                
[1111] "TIS620-0"               "TIS620.2529-1"         
[1113] "TIS620.2533-0"          "TS-5881"               
[1115] "TSCII"                  "TURKISH8"              
[1117] "UCS-2"                  "UCS-2BE"               
[1119] "UCS-2LE"                "UCS-4"                 
[1121] "UCS-4BE"                "UCS-4LE"               
[1123] "UCS2"                   "UCS4"                  
[1125] "UHC"                    "UJIS"                  
[1127] "UK"                     "UNICODE"               
[1129] "UNICODEBIG"             "UNICODELITTLE"         
[1131] "US"                     "US-ASCII"              
[1133] "UTF-16"                 "UTF-16BE"              
[1135] "UTF-16LE"               "UTF-32"                
[1137] "UTF-32BE"               "UTF-32LE"              
[1139] "UTF-7"                  "UTF-8"                 
[1141] "UTF16"                  "UTF16BE"               
[1143] "UTF16LE"                "UTF32"                 
[1145] "UTF32BE"                "UTF32LE"               
[1147] "UTF7"                   "UTF8"                  
[1149] "VISCII"                 "WCHAR_T"               
[1151] "WIN-SAMI-2"             "WINBALTRIM"            
[1153] "WINDOWS-1250"           "WINDOWS-1251"          
[1155] "WINDOWS-1252"           "WINDOWS-1253"          
[1157] "WINDOWS-1254"           "WINDOWS-1255"          
[1159] "WINDOWS-1256"           "WINDOWS-1257"          
[1161] "WINDOWS-1258"           "WINDOWS-31J"           
[1163] "WINDOWS-874"            "WINDOWS-936"           
[1165] "WINSAMI2"               "WS2"                   
[1167] "YU"                    
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  icuGetCollate  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("icuGetCollate", pos = 'package:base')
> f()
[1] "ICU not in use"
> f(NULL)
[1] "ICU not in use"
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(l0)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(c0)
Error in match.arg(type) : 'arg' should be one of "actual", "valid"
Calls: f -> match.arg
> f(m0)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(df0)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(FALSE)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  icuSetCollate  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("icuSetCollate", pos = 'package:base')
> f()
> f(NULL)
Error in f(NULL) : all arguments must be named
> f(,NULL)
Error in f(, NULL) : all arguments must be named
> f(NULL,NULL)
Error in f(NULL, NULL) : all arguments must be named
> f(list())
Error in f(list()) : all arguments must be named
> f(l0)
Error in f(l0) : all arguments must be named
> f(c0)
Error in f(c0) : all arguments must be named
> f(m0)
Error in f(m0) : all arguments must be named
> f(df0)
Error in f(df0) : all arguments must be named
> f(FALSE)
Error in f(FALSE) : all arguments must be named
> f(list(),list())
Error in f(list(), list()) : all arguments must be named
> f(l0,l0)
Error in f(l0, l0) : all arguments must be named
> f(c0,c0)
Error in f(c0, c0) : all arguments must be named
> f(df0,df0)
Error in f(df0, df0) : all arguments must be named
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : all arguments must be named
> 
> ##  identical  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("identical", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "y" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] TRUE
> f(list())
Error in f(list()) : argument "y" is missing, with no default
> f(l0)
Error in f(l0) : argument "y" is missing, with no default
> f(c0)
Error in f(c0) : argument "y" is missing, with no default
> f(m0)
Error in f(m0) : argument "y" is missing, with no default
> f(df0)
Error in f(df0) : argument "y" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "y" is missing, with no default
> f(list(),list())
[1] TRUE
> f(l0,l0)
[1] TRUE
> f(c0,c0)
[1] TRUE
> f(df0,df0)
[1] TRUE
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  identity  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("identity", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  if  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("if", pos = 'package:base')
> f()
Error in f() : argument is of length zero
> f(NULL)
Error in f(NULL) : argument is of length zero
> f(,NULL)
Error in f(, NULL) : argument is of length zero
> f(NULL,NULL)
Error in f(NULL, NULL) : argument is of length zero
> f(list())
Error in f(list()) : argument is of length zero
> f(l0)
Error in f(l0) : argument is of length zero
> f(c0)
Error in f(c0) : argument is of length zero
> f(m0)
Error in f(m0) : argument is of length zero
> f(df0)
Error in f(df0) : argument is not interpretable as logical
> f(FALSE)
> f(list(),list())
Error in f(list(), list()) : argument is of length zero
> f(l0,l0)
Error in f(l0, l0) : argument is of length zero
> f(c0,c0)
Error in f(c0, c0) : argument is of length zero
> f(df0,df0)
Error in f(df0, df0) : argument is not interpretable as logical
> f(FALSE,FALSE)
> 
> ##  ifelse  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("ifelse", pos = 'package:base')
> f()
Error in f() : argument "test" is missing, with no default
> f(NULL)
logical(0)
> f(,NULL)
Error in f(, NULL) : argument "test" is missing, with no default
> f(NULL,NULL)
logical(0)
> f(list())
logical(0)
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] NA
> f(FALSE)
Error in f(FALSE) : argument "no" is missing, with no default
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
[1] NA
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "no" is missing, with no default
> 
> ##  importIntoEnv  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("importIntoEnv", pos = 'package:base')
> f()
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(NULL)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(,NULL)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(NULL,NULL)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(list())
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(l0)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(c0)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(m0)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(df0)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(FALSE)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(list(),list())
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(l0,l0)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(c0,c0)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(df0,df0)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> f(FALSE,FALSE)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "expenv" is missing, with no default
Calls: f -> getNamespaceInfo -> asNamespace
> 
> ##  inherits  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("inherits", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "what" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'what' must be a character vector
> f(list())
Error in f(list()) : argument "what" is missing, with no default
> f(l0)
Error in f(l0) : argument "what" is missing, with no default
> f(c0)
Error in f(c0) : argument "what" is missing, with no default
> f(m0)
Error in f(m0) : argument "what" is missing, with no default
> f(df0)
Error in f(df0) : argument "what" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "what" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : 'what' must be a character vector
> f(l0,l0)
Error in f(l0, l0) : 'what' must be a character vector
> f(c0,c0)
[1] FALSE
> f(df0,df0)
Error in f(df0, df0) : 'what' must be a character vector
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'what' must be a character vector
> 
> ##  intToBits  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("intToBits", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
raw(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
raw(0)
> f(l0)
raw(0)
> f(c0)
raw(0)
> f(m0)
raw(0)
> f(df0)
 [1] 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[26] 00 00 00 00 00 00 01
> f(FALSE)
 [1] 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[26] 00 00 00 00 00 00 00
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  intToUtf8  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("intToUtf8", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] ""
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument 'multiple' must be TRUE or FALSE
> f(list())
[1] ""
> f(l0)
[1] ""
> f(c0)
[1] ""
> f(m0)
[1] ""
> f(df0)
[1] NA
> f(FALSE)
[1] ""
> f(list(),list())
Error in f(list(), list()) : argument 'multiple' must be TRUE or FALSE
> f(l0,l0)
Error in f(l0, l0) : argument 'multiple' must be TRUE or FALSE
> f(c0,c0)
Error in f(c0, c0) : argument 'multiple' must be TRUE or FALSE
> f(df0,df0)
Error in f(df0, df0) : argument 'multiple' must be TRUE or FALSE
> f(FALSE,FALSE)
[1] ""
> 
> ##  integer  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("integer", pos = 'package:base')
> f()
integer(0)
> f(NULL)
Error in f(NULL) : invalid 'length' argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'length' argument
> f(l0)
Error in f(l0) : invalid 'length' argument
> f(c0)
Error in f(c0) : invalid 'length' argument
> f(m0)
Error in f(m0) : invalid 'length' argument
> f(df0)
Error in f(df0) : invalid 'length' argument
> f(FALSE)
Error in f(FALSE) : invalid 'length' argument
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  interaction  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("interaction", pos = 'package:base')
> f()
Error in f() : No factors specified
> f(NULL)
factor(0)
Levels: 
> f(,NULL)
factor(0)
Levels: 
> f(NULL,NULL)
factor(0)
Levels: 
> f(list())
Error in args[[i]] : 
  attempt to select less than one element in integerOneIndex
Calls: f -> as.factor -> is.factor
> f(l0)
factor(0)
Levels: 
> f(c0)
factor(0)
Levels: 
> f(m0)
factor(0)
Levels: 
> f(df0)
factor(0)
Levels: 
> f(FALSE)
[1] FALSE
Levels: FALSE
> f(list(),list())
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> as.factor -> factor -> sort.list
> f(l0,l0)
factor(0)
Levels: 
> f(c0,c0)
factor(0)
Levels: 
> f(df0,df0)
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> as.factor -> factor -> sort.list
> f(FALSE,FALSE)
[1] FALSE.FALSE
Levels: FALSE.FALSE
> 
> ##  interactive  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("interactive", pos = 'package:base')
> f()
[1] FALSE
> f(NULL)
Error in f(NULL) : 1 argument passed to 'interactive' which requires 0
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'interactive' which requires 0
> f(list())
Error in f(list()) : 1 argument passed to 'interactive' which requires 0
> f(l0)
Error in f(l0) : 1 argument passed to 'interactive' which requires 0
> f(c0)
Error in f(c0) : 1 argument passed to 'interactive' which requires 0
> f(m0)
Error in f(m0) : 1 argument passed to 'interactive' which requires 0
> f(df0)
Error in f(df0) : 1 argument passed to 'interactive' which requires 0
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'interactive' which requires 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'interactive' which requires 0
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'interactive' which requires 0
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'interactive' which requires 0
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'interactive' which requires 0
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'interactive' which requires 0
> 
> ##  intersect  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("intersect", pos = 'package:base')
> f()
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(NULL)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(,NULL)
Error in as.vector(x) : argument "x" is missing, with no default
Calls: f -> unique -> match -> as.vector
> f(NULL,NULL)
NULL
> f(list())
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(l0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(c0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(m0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(df0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(FALSE)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  inverse.rle  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("inverse.rle", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'rle' structure
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'rle' structure
> f(list())
Error in f(list()) : invalid 'rle' structure
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
Error in f(df0) : invalid 'rle' structure
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in f(list(), list()) : invalid 'rle' structure
> f(l0,l0)
Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Error: $ operator is invalid for atomic vectors
> f(df0,df0)
Error in f(df0, df0) : invalid 'rle' structure
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  invisible  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("invisible", pos = 'package:base')
> f()
> f(NULL)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'invisible' which requires 1
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
> f(FALSE)
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'invisible' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'invisible' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'invisible' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'invisible' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'invisible' which requires 1
> 
> ##  invokeRestart  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("invokeRestart", pos = 'package:base')
> f()
Error in isRestart(r) : argument "r" is missing, with no default
Calls: f -> isRestart
> f(NULL)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f -> findRestart
> f(,NULL)
Error in isRestart(r) : argument "r" is missing, with no default
Calls: f -> isRestart
> f(NULL,NULL)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f -> findRestart
> f(list())
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f -> findRestart
> f(l0)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f -> findRestart
> f(c0)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f -> findRestart
> f(m0)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f -> findRestart
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> findRestart -> Ops.data.frame -> matrix
> f(FALSE)
Error in f(FALSE) : no 'restart' 'FALSE' found
> f(list(),list())
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f -> findRestart
> f(l0,l0)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f -> findRestart
> f(c0,c0)
Error in if (name == r[[1L]] && (is.null(cond) || is.null(r$test) || r$test(cond))) return(r) else i <- i +  : 
  missing value where TRUE/FALSE needed
Calls: f -> findRestart
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> findRestart -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : no 'restart' 'FALSE' found
> 
> ##  invokeRestartInteractively  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("invokeRestartInteractively", pos = 'package:base')
> f()
Error in f() : not an interactive session
> f(NULL)
Error in f(NULL) : not an interactive session
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : not an interactive session
> f(l0)
Error in f(l0) : not an interactive session
> f(c0)
Error in f(c0) : not an interactive session
> f(m0)
Error in f(m0) : not an interactive session
> f(df0)
Error in f(df0) : not an interactive session
> f(FALSE)
Error in f(FALSE) : not an interactive session
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.R  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.R", pos = 'package:base')
> f()
[1] TRUE
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  is.array  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.array", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.array' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.array' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] TRUE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.array' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.array' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.array' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.array' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.array' which requires 1
> 
> ##  is.atomic  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.atomic", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.atomic' which requires 1
> f(NULL)
[1] TRUE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.atomic' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] TRUE
> f(c0)
[1] TRUE
> f(m0)
[1] TRUE
> f(df0)
[1] FALSE
> f(FALSE)
[1] TRUE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.atomic' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.atomic' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.atomic' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.atomic' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.atomic' which requires 1
> 
> ##  is.call  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.call", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.call' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'is.call' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.call' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.call' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.call' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.call' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.call' which requires 1
> 
> ##  is.character  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.character", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.character' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.character' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] TRUE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.character' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 
  2 arguments passed to 'is.character' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 
  2 arguments passed to 'is.character' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'is.character' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.character' which requires 1
> 
> ##  is.complex  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.complex", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.complex' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.complex' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.complex' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.complex' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.complex' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'is.complex' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.complex' which requires 1
> 
> ##  is.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] TRUE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.double  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.double", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.double' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.double' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] TRUE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.double' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.double' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.double' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.double' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.double' which requires 1
> 
> ##  is.element  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.element", pos = 'package:base')
> f()
Error in match(el, set, 0L) : argument "el" is missing, with no default
Calls: f -> match
> f(NULL)
Error in match(el, set, 0L) : argument "set" is missing, with no default
Calls: f -> match
> f(,NULL)
Error in match(el, set, 0L) : argument "el" is missing, with no default
Calls: f -> match
> f(NULL,NULL)
logical(0)
> f(list())
Error in match(el, set, 0L) : argument "set" is missing, with no default
Calls: f -> match
> f(l0)
Error in match(el, set, 0L) : argument "set" is missing, with no default
Calls: f -> match
> f(c0)
Error in match(el, set, 0L) : argument "set" is missing, with no default
Calls: f -> match
> f(m0)
Error in match(el, set, 0L) : argument "set" is missing, with no default
Calls: f -> match
> f(df0)
Error in match(el, set, 0L) : argument "set" is missing, with no default
Calls: f -> match
> f(FALSE)
Error in match(el, set, 0L) : argument "set" is missing, with no default
Calls: f -> match
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
[1] TRUE
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  is.environment  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.environment", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.environment' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.environment' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.environment' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 
  2 arguments passed to 'is.environment' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 
  2 arguments passed to 'is.environment' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'is.environment' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.environment' which requires 1
> 
> ##  is.expression  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.expression", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.expression' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.expression' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.expression' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 
  2 arguments passed to 'is.expression' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 
  2 arguments passed to 'is.expression' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'is.expression' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.expression' which requires 1
> 
> ##  is.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.factor", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.finite  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.finite", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.finite' which requires 1
> f(NULL)
logical(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.finite' which requires 1
> f(list())
Error in f(list()) : default method not implemented for type 'list'
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : default method not implemented for type 'list'
> f(FALSE)
[1] TRUE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.finite' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.finite' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.finite' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.finite' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.finite' which requires 1
> 
> ##  is.function  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.function", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.function' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.function' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.function' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.function' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.function' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'is.function' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.function' which requires 1
> 
> ##  is.infinite  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.infinite", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.infinite' which requires 1
> f(NULL)
logical(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.infinite' which requires 1
> f(list())
Error in f(list()) : default method not implemented for type 'list'
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : default method not implemented for type 'list'
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.infinite' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.infinite' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.infinite' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'is.infinite' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.infinite' which requires 1
> 
> ##  is.integer  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.integer", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.integer' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.integer' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.integer' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.integer' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.integer' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'is.integer' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.integer' which requires 1
> 
> ##  is.language  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.language", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.language' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.language' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.language' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.language' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.language' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'is.language' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.language' which requires 1
> 
> ##  is.list  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.list", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.list' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'is.list' which requires 1
> f(list())
[1] TRUE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] TRUE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.list' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.list' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.list' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.list' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.list' which requires 1
> 
> ##  is.loaded  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.loaded", pos = 'package:base')
> f()
Error in f() : argument "symbol" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'symbol' argument
> f(,NULL)
Error in f(, NULL) : argument "symbol" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'symbol' argument
> f(list())
Error in f(list()) : invalid 'symbol' argument
> f(l0)
Error in f(l0) : invalid 'symbol' argument
> f(c0)
Error in f(c0) : invalid 'symbol' argument
> f(m0)
Error in f(m0) : invalid 'symbol' argument
> f(df0)
Error in f(df0) : invalid 'symbol' argument
> f(FALSE)
Error in f(FALSE) : invalid 'symbol' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'symbol' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'symbol' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'symbol' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'symbol' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'symbol' argument
> 
> ##  is.logical  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.logical", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.logical' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.logical' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] TRUE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] TRUE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.logical' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.logical' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.logical' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'is.logical' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.logical' which requires 1
> 
> ##  is.matrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.matrix", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.matrix' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.matrix' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] TRUE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.matrix' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.matrix' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.matrix' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.matrix' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.matrix' which requires 1
> 
> ##  is.na  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.na", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.na' which requires 1
> f(NULL)
logical(0)
Warning message:
In f(NULL) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'is.na' which requires 1
> f(list())
logical(0)
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
     c0
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.na' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.na' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.na' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.na' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'is.na' which requires 1
> 
> ##  is.na.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.na.POSIXlt", pos = 'package:base')
> f()
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXct
> f(NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
Error in as.POSIXct.numeric(x) : 'origin' must be supplied
Calls: f -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.na.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.na.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
<0 x 0 matrix>
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
<0 x 0 matrix>
> f(l0)
<0 x 0 matrix>
> f(c0)
<0 x 0 matrix>
> f(m0)
<0 x 0 matrix>
> f(df0)
     c0
> f(FALSE)
      [,1]
[1,] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.na.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.na.numeric_version", pos = 'package:base')
> f()
Error in is.numeric_version(x) : argument "x" is missing, with no default
Calls: f -> .encode_numeric_version -> is.numeric_version
> f(NULL)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(l0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(c0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(m0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(df0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(FALSE)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.na<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.na<-", pos = 'package:base')
> f()
Error in `is.na<-.default`() : argument "x" is missing, with no default
Calls: f -> is.na<-.default
> f(NULL)
logical(0)
> f(,NULL)
Error in `is.na<-.default`(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> is.na<-.default
> f(NULL,NULL)
logical(0)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in `[<-.data.frame`(`*tmp*`, value, value = NA) : 
  replacement has 1 row, data has 0
Calls: f -> is.na<-.default -> [<- -> [<-.data.frame
> f(FALSE)
[1] NA
> f(list(),list())
Error in `is.na<-.default`(list(), list()) : 
  invalid subscript type 'list'
Calls: f -> is.na<-.default
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f ... [<-.data.frame -> Summary.data.frame -> lapply -> FUN
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  is.na<-.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.na<-.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
logical(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
logical(0)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in `[<-.data.frame`(`*tmp*`, value, value = NA) : 
  replacement has 1 row, data has 0
Calls: f -> [<- -> [<-.data.frame
> f(FALSE)
[1] NA
> f(list(),list())
Error in f(list(), list()) : invalid subscript type 'list'
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f ... [<-.data.frame -> Summary.data.frame -> lapply -> FUN
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  is.na<-.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.na<-.factor", pos = 'package:base')
> f()
Error in levels(x) : argument "x" is missing, with no default
Calls: f -> levels
> f(NULL)
logical(0)
> f(,NULL)
Error in levels(x) : argument "x" is missing, with no default
Calls: f -> levels
> f(NULL,NULL)
logical(0)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] NA
> f(list(),list())
Error in f(list(), list()) : invalid subscript type 'list'
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : invalid subscript type 'list'
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  is.na<-.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.na<-.numeric_version", pos = 'package:base')
> f()
Error in rep.int(list(integer()), length(value)) : 
  argument "value" is missing, with no default
Calls: f -> rep.int
> f(NULL)
Error in rep.int(list(integer()), length(value)) : 
  argument "value" is missing, with no default
Calls: f -> rep.int
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
Error in rep.int(list(integer()), length(value)) : 
  argument "value" is missing, with no default
Calls: f -> rep.int
> f(l0)
Error in rep.int(list(integer()), length(value)) : 
  argument "value" is missing, with no default
Calls: f -> rep.int
> f(c0)
Error in rep.int(list(integer()), length(value)) : 
  argument "value" is missing, with no default
Calls: f -> rep.int
> f(m0)
Error in rep.int(list(integer()), length(value)) : 
  argument "value" is missing, with no default
Calls: f -> rep.int
> f(df0)
Error in rep.int(list(integer()), length(value)) : 
  argument "value" is missing, with no default
Calls: f -> rep.int
> f(FALSE)
Error in rep.int(list(integer()), length(value)) : 
  argument "value" is missing, with no default
Calls: f -> rep.int
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f ... [<-.data.frame -> Summary.data.frame -> lapply -> FUN
> f(FALSE,FALSE)
[[1]]
[1] FALSE

> 
> ##  is.name  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.name", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.symbol' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.symbol' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.symbol' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.symbol' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.symbol' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.symbol' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.symbol' which requires 1
> 
> ##  is.nan  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.nan", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.nan' which requires 1
> f(NULL)
logical(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'is.nan' which requires 1
> f(list())
Error in f(list()) : default method not implemented for type 'list'
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : default method not implemented for type 'list'
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.nan' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.nan' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.nan' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.nan' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.nan' which requires 1
> 
> ##  is.null  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.null", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.null' which requires 1
> f(NULL)
[1] TRUE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'is.null' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.null' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.null' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.null' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.null' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.null' which requires 1
> 
> ##  is.numeric  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.numeric", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.numeric' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.numeric' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] TRUE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.numeric' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.numeric' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.numeric' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'is.numeric' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.numeric' which requires 1
> 
> ##  is.numeric.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.numeric.Date", pos = 'package:base')
> f()
[1] FALSE
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.numeric.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.numeric.POSIXt", pos = 'package:base')
> f()
[1] FALSE
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.numeric.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.numeric.difftime", pos = 'package:base')
> f()
[1] FALSE
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.numeric_version", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.object  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.object", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.object' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.object' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] TRUE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.object' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.object' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.object' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.object' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.object' which requires 1
> 
> ##  is.ordered  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.ordered", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.package_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.package_version", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.pairlist  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.pairlist", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.pairlist' which requires 1
> f(NULL)
[1] TRUE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.pairlist' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.pairlist' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.pairlist' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.pairlist' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'is.pairlist' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.pairlist' which requires 1
> 
> ##  is.primitive  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.primitive", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.qr  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.qr", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.raw  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.raw", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.raw' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'is.raw' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.raw' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.raw' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.raw' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.raw' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.raw' which requires 1
> 
> ##  is.recursive  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.recursive", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.recursive' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.recursive' which requires 1
> f(list())
[1] TRUE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] TRUE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.recursive' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 
  2 arguments passed to 'is.recursive' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 
  2 arguments passed to 'is.recursive' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'is.recursive' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.recursive' which requires 1
> 
> ##  is.single  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.single", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.single' which requires 1
> f(NULL)
Error in f(NULL) : type "single" unimplemented in R
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.single' which requires 1
> f(list())
Error in f(list()) : type "single" unimplemented in R
> f(l0)
Error in f(l0) : type "single" unimplemented in R
> f(c0)
Error in f(c0) : type "single" unimplemented in R
> f(m0)
Error in f(m0) : type "single" unimplemented in R
> f(df0)
Error in f(df0) : type "single" unimplemented in R
> f(FALSE)
Error in f(FALSE) : type "single" unimplemented in R
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.single' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.single' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.single' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.single' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.single' which requires 1
> 
> ##  is.symbol  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.symbol", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'is.symbol' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'is.symbol' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'is.symbol' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'is.symbol' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'is.symbol' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'is.symbol' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'is.symbol' which requires 1
> 
> ##  is.table  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.table", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  is.unsorted  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.unsorted", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] FALSE
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
[1] FALSE
> f(l0,l0)
[1] FALSE
> f(c0,c0)
[1] FALSE
> f(df0,df0)
[1] FALSE
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  is.vector  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("is.vector", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in is.vector(x, mode) : invalid 'mode' argument
Calls: f
> f(list())
[1] TRUE
> f(l0)
[1] TRUE
> f(c0)
[1] TRUE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] TRUE
> f(list(),list())
Error in is.vector(x, mode) : invalid 'mode' argument
Calls: f
> f(l0,l0)
Error in is.vector(x, mode) : invalid 'mode' argument
Calls: f
> f(c0,c0)
Error in is.vector(x, mode) : invalid 'mode' argument
Calls: f
> f(df0,df0)
Error in is.vector(x, mode) : invalid 'mode' argument
Calls: f
> f(FALSE,FALSE)
Error in is.vector(x, mode) : invalid 'mode' argument
Calls: f
> 
> ##  isBaseNamespace  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("isBaseNamespace", pos = 'package:base')
> f()
Error in f() : argument "ns" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  isIncomplete  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("isIncomplete", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in f(NULL) : 'con' is not a connection
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : 'con' is not a connection
> f(l0)
Error in f(l0) : 'con' is not a connection
> f(c0)
Error in f(c0) : 'con' is not a connection
> f(m0)
Error in f(m0) : 'con' is not a connection
> f(df0)
Error in f(df0) : 'con' is not a connection
> f(FALSE)
Error in f(FALSE) : 'con' is not a connection
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  isNamespace  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("isNamespace", pos = 'package:base')
> f()
Error in f() : argument "ns" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  isNamespaceLoaded  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("isNamespaceLoaded", pos = 'package:base')
> f()
Error in f() : argument "name" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid type/length (symbol/0) in vector allocation
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid type/length (symbol/0) in vector allocation
> f(l0)
Error in f(l0) : invalid data of mode 'logical' (too short)
> f(c0)
Error in f(c0) : invalid data of mode 'character' (too short)
> f(m0)
Error in f(m0) : invalid data of mode 'double' (too short)
> f(df0)
Error in f(df0) : invalid type/length (symbol/1) in vector allocation
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  isOpen  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("isOpen", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid connection
> f(,NULL)
Error in f(, NULL) : argument "con" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid connection
> f(list())
Error in f(list()) : invalid connection
> f(l0)
Error in f(l0) : invalid connection
> f(c0)
Error in f(c0) : invalid connection
> f(m0)
Error in f(m0) : invalid connection
> f(df0)
Error in f(df0) : invalid connection
> f(FALSE)
[1] TRUE
> f(list(),list())
Error in f(list(), list()) : invalid connection
> f(l0,l0)
Error in f(l0, l0) : invalid connection
> f(c0,c0)
Error in f(c0, c0) : invalid connection
> f(df0,df0)
Error in f(df0, df0) : invalid connection
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  isRestart  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("isRestart", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  isS4  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("isS4", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'isS4' which requires 1
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'isS4' which requires 1
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'isS4' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'isS4' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'isS4' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'isS4' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'isS4' which requires 1
> 
> ##  isSeekable  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("isSeekable", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in f(NULL) : 'con' is not a connection
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : 'con' is not a connection
> f(l0)
Error in f(l0) : 'con' is not a connection
> f(c0)
Error in f(c0) : 'con' is not a connection
> f(m0)
Error in f(m0) : 'con' is not a connection
> f(df0)
Error in f(df0) : 'con' is not a connection
> f(FALSE)
Error in f(FALSE) : 'con' is not a connection
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  isSymmetric  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("isSymmetric", pos = 'package:base')
> f()
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "character"
Calls: f
> f(m0)
[1] TRUE
> f(df0)
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "character"
Calls: f
> f(df0,df0)
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "data.frame"
Calls: f
> f(FALSE,FALSE)
Error in UseMethod("isSymmetric") : 
  no applicable method for 'isSymmetric' applied to an object of class "logical"
Calls: f
> 
> ##  isSymmetric.matrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("isSymmetric.matrix", pos = 'package:base')
> f()
Error in f() : argument "object" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
[1] FALSE
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] TRUE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
[1] FALSE
> f(l0,l0)
[1] FALSE
> f(c0,c0)
[1] FALSE
> f(df0,df0)
[1] FALSE
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  isTRUE  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("isTRUE", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  isatty  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("isatty", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  isdebugged  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("isdebugged", pos = 'package:base')
> f()
Error in f() : argument "fun" is missing, with no default
> f(NULL)
Error in isdebugged(fun) : argument must be a function
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in isdebugged(fun) : argument must be a function
Calls: f
> f(l0)
Error in isdebugged(fun) : argument must be a function
Calls: f
> f(c0)
Error in isdebugged(fun) : argument must be a function
Calls: f
> f(m0)
Error in isdebugged(fun) : argument must be a function
Calls: f
> f(df0)
Error in isdebugged(fun) : argument must be a function
Calls: f
> f(FALSE)
Error in isdebugged(fun) : argument must be a function
Calls: f
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  jitter  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("jitter", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : 'x' must be numeric
> f(FALSE)
Error in f(FALSE) : 'x' must be numeric
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : 'x' must be numeric
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'x' must be numeric
> 
> ##  julian  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("julian", pos = 'package:base')
> f()
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "character"
Calls: f
> f(df0,df0)
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "data.frame"
Calls: f
> f(FALSE,FALSE)
Error in UseMethod("julian") : 
  no applicable method for 'julian' applied to an object of class "logical"
Calls: f
> 
> ##  julian.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("julian.Date", pos = 'package:base')
> f()
Error in structure(unclass(x) - unclass(origin), origin = origin) : 
  argument "x" is missing, with no default
Calls: f -> structure
> f(NULL)
numeric(0)
attr(,"origin")
[1] "1970-01-01"
> f(,NULL)
Error in f(, NULL) : 'origin' must be of length one
> f(NULL,NULL)
Error in f(NULL, NULL) : 'origin' must be of length one
> f(list())
Error in unclass(x) - unclass(origin) : 
  non-numeric argument to binary operator
Calls: f -> structure
> f(l0)
numeric(0)
attr(,"origin")
[1] "1970-01-01"
> f(c0)
Error in unclass(x) - unclass(origin) : 
  non-numeric argument to binary operator
Calls: f -> structure
> f(m0)
<0 x 0 matrix>
attr(,"origin")
[1] "1970-01-01"
> f(df0)
Error in unclass(x) - unclass(origin) : 
  non-numeric argument to binary operator
Calls: f -> structure
> f(FALSE)
[1] 0
attr(,"origin")
[1] "1970-01-01"
> f(list(),list())
Error in f(list(), list()) : 'origin' must be of length one
> f(l0,l0)
Error in f(l0, l0) : 'origin' must be of length one
> f(c0,c0)
Error in f(c0, c0) : 'origin' must be of length one
> f(df0,df0)
Error in unclass(x) - unclass(origin) : 
  non-numeric argument to binary operator
Calls: f -> structure
> f(FALSE,FALSE)
[1] 0
attr(,"origin")
[1] FALSE
> 
> ##  julian.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("julian.POSIXt", pos = 'package:base')
> f()
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> difftime -> as.POSIXct -> as.POSIXct
> f(NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... difftime -> as.POSIXct -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct.default(origin) : 
  do not know how to convert 'origin' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(NULL,NULL)
Error in as.POSIXct.default(origin) : 
  do not know how to convert 'origin' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... difftime -> as.POSIXct -> as.POSIXct -> as.POSIXct.default
> f(l0)
Time difference of  days
> f(c0)
Time difference of  days
> f(m0)
Error in as.POSIXct.numeric(x) : 'origin' must be supplied
Calls: f ... difftime -> as.POSIXct -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... difftime -> as.POSIXct -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... difftime -> as.POSIXct -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(origin) : 
  do not know how to convert 'origin' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(l0,l0)
Error in f(l0, l0) : 'origin' must be of length one
> f(c0,c0)
Error in f(c0, c0) : 'origin' must be of length one
> f(df0,df0)
Error in as.POSIXct.default(origin) : 
  do not know how to convert 'origin' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(origin) : 
  do not know how to convert 'origin' to class "POSIXct"
Calls: f -> as.POSIXct -> as.POSIXct.default
> 
> ##  kappa  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("kappa", pos = 'package:base')
> f()
Error in as.matrix(z) : argument "z" is missing, with no default
Calls: f -> kappa.default -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... kappa.default -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(z) : argument "z" is missing, with no default
Calls: f -> kappa.default -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... kappa.default -> as.matrix -> as.matrix.default -> array
> f(list())
Error in .kappa_tri(R, ...) : triangular matrix should be square
Calls: f -> kappa.default -> kappa.qr -> .kappa_tri
> f(l0)
Error in .kappa_tri(R, ...) : triangular matrix should be square
Calls: f -> kappa.default -> kappa.qr -> .kappa_tri
> f(c0)
Error in .kappa_tri(R, ...) : triangular matrix should be square
Calls: f -> kappa.default -> kappa.qr -> .kappa_tri
> f(m0)
Error in qr[1L:min(dim(qr)), , drop = FALSE] : subscript out of bounds
Calls: f -> kappa.default -> kappa.qr
> f(df0)
Error in .kappa_tri(R, ...) : triangular matrix should be square
Calls: f -> kappa.default -> kappa.qr -> .kappa_tri
> f(FALSE)
[1] Inf
> f(list(),list())
Error in exact && norm == "2" : invalid 'x' type in 'x && y'
Calls: f -> kappa.default
> f(l0,l0)
Error in if (exact && norm == "2") { : 
  missing value where TRUE/FALSE needed
Calls: f -> kappa.default
> f(c0,c0)
Error in exact && norm == "2" : invalid 'x' type in 'x && y'
Calls: f -> kappa.default
> f(df0,df0)
Error in exact && norm == "2" : invalid 'x' type in 'x && y'
Calls: f -> kappa.default
> f(FALSE,FALSE)
[1] Inf
> 
> ##  kappa.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("kappa.default", pos = 'package:base')
> f()
Error in as.matrix(z) : argument "z" is missing, with no default
Calls: f -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(z) : argument "z" is missing, with no default
Calls: f -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(list())
Error in .kappa_tri(R, ...) : triangular matrix should be square
Calls: f -> kappa.qr -> .kappa_tri
> f(l0)
Error in .kappa_tri(R, ...) : triangular matrix should be square
Calls: f -> kappa.qr -> .kappa_tri
> f(c0)
Error in .kappa_tri(R, ...) : triangular matrix should be square
Calls: f -> kappa.qr -> .kappa_tri
> f(m0)
Error in qr[1L:min(dim(qr)), , drop = FALSE] : subscript out of bounds
Calls: f -> kappa.qr
> f(df0)
Error in .kappa_tri(R, ...) : triangular matrix should be square
Calls: f -> kappa.qr -> .kappa_tri
> f(FALSE)
[1] Inf
> f(list(),list())
Error in exact && norm == "2" : invalid 'x' type in 'x && y'
Calls: f
> f(l0,l0)
Error in if (exact && norm == "2") { : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0,c0)
Error in exact && norm == "2" : invalid 'x' type in 'x && y'
Calls: f
> f(df0,df0)
Error in exact && norm == "2" : invalid 'x' type in 'x && y'
Calls: f
> f(FALSE,FALSE)
[1] Inf
> 
> ##  kappa.lm  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("kappa.lm", pos = 'package:base')
> f()
Error in kappa.qr(z$qr, ...) : argument "z" is missing, with no default
Calls: f -> kappa.qr
> f(NULL)
Error in 1L:min(dim(qr)) : result would be too long a vector
Calls: f -> kappa.qr
In addition: Warning message:
In min(dim(qr)) : no non-missing arguments to min; returning Inf
> f(,NULL)
Error in kappa.qr(z$qr, ...) : argument "z" is missing, with no default
Calls: f -> kappa.qr
> f(NULL,NULL)
Error in 1L:min(dim(qr)) : result would be too long a vector
Calls: f -> kappa.qr
In addition: Warning message:
In min(dim(qr)) : no non-missing arguments to min; returning Inf
> f(list())
Error in 1L:min(dim(qr)) : result would be too long a vector
Calls: f -> kappa.qr
In addition: Warning message:
In min(dim(qr)) : no non-missing arguments to min; returning Inf
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
Error in 1L:min(dim(qr)) : result would be too long a vector
Calls: f -> kappa.qr
In addition: Warning message:
In min(dim(qr)) : no non-missing arguments to min; returning Inf
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in 1L:min(dim(qr)) : result would be too long a vector
Calls: f -> kappa.qr
In addition: Warning message:
In min(dim(qr)) : no non-missing arguments to min; returning Inf
> f(l0,l0)
Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Error: $ operator is invalid for atomic vectors
> f(df0,df0)
Error in 1L:min(dim(qr)) : result would be too long a vector
Calls: f -> kappa.qr
In addition: Warning message:
In min(dim(qr)) : no non-missing arguments to min; returning Inf
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  kappa.qr  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("kappa.qr", pos = 'package:base')
> f()
Error in f() : argument "z" is missing, with no default
> f(NULL)
Error in 1L:min(dim(qr)) : result would be too long a vector
Calls: f
In addition: Warning message:
In min(dim(qr)) : no non-missing arguments to min; returning Inf
> f(,NULL)
Error in f(, NULL) : argument "z" is missing, with no default
> f(NULL,NULL)
Error in 1L:min(dim(qr)) : result would be too long a vector
Calls: f
In addition: Warning message:
In min(dim(qr)) : no non-missing arguments to min; returning Inf
> f(list())
Error in 1L:min(dim(qr)) : result would be too long a vector
Calls: f
In addition: Warning message:
In min(dim(qr)) : no non-missing arguments to min; returning Inf
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
Error in 1L:min(dim(qr)) : result would be too long a vector
Calls: f
In addition: Warning message:
In min(dim(qr)) : no non-missing arguments to min; returning Inf
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in 1L:min(dim(qr)) : result would be too long a vector
Calls: f
In addition: Warning message:
In min(dim(qr)) : no non-missing arguments to min; returning Inf
> f(l0,l0)
Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Error: $ operator is invalid for atomic vectors
> f(df0,df0)
Error in 1L:min(dim(qr)) : result would be too long a vector
Calls: f
In addition: Warning message:
In min(dim(qr)) : no non-missing arguments to min; returning Inf
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  kronecker  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("kronecker", pos = 'package:base')
> f()
Error in f() : argument "X" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "Y" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "X" is missing, with no default
> f(NULL,NULL)
Error in as.array.default(X) : attempt to set an attribute on NULL
Calls: f -> .kronecker -> as.array -> as.array.default
> f(list())
Error in f(list()) : argument "Y" is missing, with no default
> f(l0)
Error in f(l0) : argument "Y" is missing, with no default
> f(c0)
Error in f(c0) : argument "Y" is missing, with no default
> f(m0)
Error in f(m0) : argument "Y" is missing, with no default
> f(df0)
Error in f(df0) : argument "Y" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "Y" is missing, with no default
> f(list(),list())
Error in as.vector(X) %*% t(as.vector(Y)) : 
  requires numeric/complex matrix/vector arguments
Calls: f -> .kronecker -> outer
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in as.vector(X) %*% t(as.vector(Y)) : 
  requires numeric/complex matrix/vector arguments
Calls: f -> .kronecker -> outer
> f(df0,df0)
Error in `dimnames<-.data.frame`(`*tmp*`, value = list(n)) : 
  invalid 'dimnames' given for data frame
Calls: f ... as.array.default -> dimnames<- -> dimnames<-.data.frame
> f(FALSE,FALSE)
[1] 0
> 
> ##  l10n_info  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("l10n_info", pos = 'package:base')
> f()
$MBCS
[1] FALSE

$`UTF-8`
[1] FALSE

$`Latin-1`
[1] FALSE

> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  labels  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("labels", pos = 'package:base')
> f()
Error in labels.default() : argument "object" is missing, with no default
Calls: f -> labels.default
> f(NULL)
character(0)
> f(,NULL)
Error in labels.default(, NULL) : 
  argument "object" is missing, with no default
Calls: f -> labels.default
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
[[1]]
character(0)

[[2]]
character(0)

> f(df0)
[[1]]
character(0)

[[2]]
[1] "c0"

> f(FALSE)
[1] "1"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[[1]]
character(0)

[[2]]
[1] "c0"

> f(FALSE,FALSE)
[1] "1"
> 
> ##  labels.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("labels.default", pos = 'package:base')
> f()
Error in f() : argument "object" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
[[1]]
character(0)

[[2]]
character(0)

> f(df0)
[[1]]
character(0)

[[2]]
[1] "c0"

> f(FALSE)
[1] "1"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[[1]]
character(0)

[[2]]
[1] "c0"

> f(FALSE,FALSE)
[1] "1"
> 
> ##  lapply  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("lapply", pos = 'package:base')
> f()
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(NULL)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(,NULL)
Error in match.fun(FUN) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(NULL,NULL)
Error in match.fun(FUN) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(list())
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(l0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(c0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(m0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(df0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(FALSE)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(list(),list())
Error in match.fun(FUN) : 'list()' is not a function, character or symbol
Calls: f -> match.fun
> f(l0,l0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'l0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(c0,c0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'c0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(df0,df0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'df0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(FALSE,FALSE)
Error in match.fun(FUN) : 'FALSE' is not a function, character or symbol
Calls: f -> match.fun
> 
> ##  lazyLoadDBexec  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("lazyLoadDBexec", pos = 'package:base')
> f()
Error in glue(filebase, "rdx", sep = ".") : 
  argument "filebase" is missing, with no default
Calls: f -> glue
> f(NULL)
Error in gzfile(file, "rb") : cannot open the connection
Calls: f -> readRDS -> gzfile
In addition: Warning message:
In gzfile(file, "rb") :
  cannot open compressed file '.rdx', probable reason 'No such file or directory'
> f(,NULL)
Error in glue(filebase, "rdx", sep = ".") : 
  argument "filebase" is missing, with no default
Calls: f -> glue
> f(NULL,NULL)
Error in gzfile(file, "rb") : cannot open the connection
Calls: f -> readRDS -> gzfile
In addition: Warning message:
In gzfile(file, "rb") :
  cannot open compressed file '.rdx', probable reason 'No such file or directory'
> f(list())
Error in gzfile(file, "rb") : cannot open the connection
Calls: f -> readRDS -> gzfile
In addition: Warning message:
In gzfile(file, "rb") :
  cannot open compressed file '.rdx', probable reason 'No such file or directory'
> f(l0)
Error in gzfile(file, "rb") : cannot open the connection
Calls: f -> readRDS -> gzfile
In addition: Warning message:
In gzfile(file, "rb") :
  cannot open compressed file '.rdx', probable reason 'No such file or directory'
> f(c0)
Error in gzfile(file, "rb") : cannot open the connection
Calls: f -> readRDS -> gzfile
In addition: Warning message:
In gzfile(file, "rb") :
  cannot open compressed file '.rdx', probable reason 'No such file or directory'
> f(m0)
Error in gzfile(file, "rb") : cannot open the connection
Calls: f -> readRDS -> gzfile
In addition: Warning message:
In gzfile(file, "rb") :
  cannot open compressed file '.rdx', probable reason 'No such file or directory'
> f(df0)
Error in gzfile(file, "rb") : cannot open the connection
Calls: f -> readRDS -> gzfile
In addition: Warning message:
In gzfile(file, "rb") :
  cannot open compressed file 'integer(0).rdx', probable reason 'No such file or directory'
> f(FALSE)
Error in gzfile(file, "rb") : cannot open the connection
Calls: f -> readRDS -> gzfile
In addition: Warning message:
In gzfile(file, "rb") :
  cannot open compressed file 'FALSE.rdx', probable reason 'No such file or directory'
> f(list(),list())
Error in gzfile(file, "rb") : cannot open the connection
Calls: f -> readRDS -> gzfile
In addition: Warning message:
In gzfile(file, "rb") :
  cannot open compressed file '.rdx', probable reason 'No such file or directory'
> f(l0,l0)
Error in gzfile(file, "rb") : cannot open the connection
Calls: f -> readRDS -> gzfile
In addition: Warning message:
In gzfile(file, "rb") :
  cannot open compressed file '.rdx', probable reason 'No such file or directory'
> f(c0,c0)
Error in gzfile(file, "rb") : cannot open the connection
Calls: f -> readRDS -> gzfile
In addition: Warning message:
In gzfile(file, "rb") :
  cannot open compressed file '.rdx', probable reason 'No such file or directory'
> f(df0,df0)
Error in gzfile(file, "rb") : cannot open the connection
Calls: f -> readRDS -> gzfile
In addition: Warning message:
In gzfile(file, "rb") :
  cannot open compressed file 'integer(0).rdx', probable reason 'No such file or directory'
> f(FALSE,FALSE)
Error in gzfile(file, "rb") : cannot open the connection
Calls: f -> readRDS -> gzfile
In addition: Warning message:
In gzfile(file, "rb") :
  cannot open compressed file 'FALSE.rdx', probable reason 'No such file or directory'
> 
> ##  lazyLoadDBfetch  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("lazyLoadDBfetch", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'lazyLoadDBfetch' which requires 4
> f(NULL)
Error in f(NULL) : 
  1 argument passed to 'lazyLoadDBfetch' which requires 4
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'lazyLoadDBfetch' which requires 4
> f(list())
Error in f(list()) : 
  1 argument passed to 'lazyLoadDBfetch' which requires 4
> f(l0)
Error in f(l0) : 1 argument passed to 'lazyLoadDBfetch' which requires 4
> f(c0)
Error in f(c0) : 1 argument passed to 'lazyLoadDBfetch' which requires 4
> f(m0)
Error in f(m0) : 1 argument passed to 'lazyLoadDBfetch' which requires 4
> f(df0)
Error in f(df0) : 1 argument passed to 'lazyLoadDBfetch' which requires 4
> f(FALSE)
Error in f(FALSE) : 
  1 argument passed to 'lazyLoadDBfetch' which requires 4
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'lazyLoadDBfetch' which requires 4
> f(l0,l0)
Error in f(l0, l0) : 
  2 arguments passed to 'lazyLoadDBfetch' which requires 4
> f(c0,c0)
Error in f(c0, c0) : 
  2 arguments passed to 'lazyLoadDBfetch' which requires 4
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'lazyLoadDBfetch' which requires 4
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'lazyLoadDBfetch' which requires 4
> 
> ##  lbeta  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("lbeta", pos = 'package:base')
> f()
Error in f() : argument "a" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "b" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "a" is missing, with no default
> f(NULL,NULL)
Error in lbeta(a, b) : non-numeric argument to mathematical function
Calls: f
> f(list())
Error in f(list()) : argument "b" is missing, with no default
> f(l0)
Error in f(l0) : argument "b" is missing, with no default
> f(c0)
Error in f(c0) : argument "b" is missing, with no default
> f(m0)
Error in f(m0) : argument "b" is missing, with no default
> f(df0)
Error in f(df0) : argument "b" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "b" is missing, with no default
> f(list(),list())
Error in lbeta(a, b) : non-numeric argument to mathematical function
Calls: f
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in lbeta(a, b) : non-numeric argument to mathematical function
Calls: f
> f(df0,df0)
Error in lbeta(a, b) : non-numeric argument to mathematical function
Calls: f
> f(FALSE,FALSE)
[1] Inf
> 
> ##  lchoose  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("lchoose", pos = 'package:base')
> f()
Error in f() : argument "n" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "k" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "n" is missing, with no default
> f(NULL,NULL)
Error in lchoose(n, k) : non-numeric argument to mathematical function
Calls: f
> f(list())
Error in f(list()) : argument "k" is missing, with no default
> f(l0)
Error in f(l0) : argument "k" is missing, with no default
> f(c0)
Error in f(c0) : argument "k" is missing, with no default
> f(m0)
Error in f(m0) : argument "k" is missing, with no default
> f(df0)
Error in f(df0) : argument "k" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "k" is missing, with no default
> f(list(),list())
Error in lchoose(n, k) : non-numeric argument to mathematical function
Calls: f
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in lchoose(n, k) : non-numeric argument to mathematical function
Calls: f
> f(df0,df0)
Error in lchoose(n, k) : non-numeric argument to mathematical function
Calls: f
> f(FALSE,FALSE)
[1] 0
> 
> ##  length  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("length", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'length' which requires 1
> f(NULL)
[1] 0
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'length' which requires 1
> f(list())
[1] 0
> f(l0)
[1] 0
> f(c0)
[1] 0
> f(m0)
[1] 0
> f(df0)
[1] 1
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'length' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'length' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'length' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'length' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'length' which requires 1
> 
> ##  length.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("length.POSIXlt", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] 0
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in x[[1L]] : subscript out of bounds
Calls: f
> f(l0)
Error in x[[1L]] : subscript out of bounds
Calls: f
> f(c0)
Error in x[[1L]] : subscript out of bounds
Calls: f
> f(m0)
Error in x[[1L]] : subscript out of bounds
Calls: f
> f(df0)
[1] 0
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  length<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("length<-", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'length<-' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to 'length<-' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error: invalid value
> f(list())
Error in f(list()) : 1 argument passed to 'length<-' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to 'length<-' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to 'length<-' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to 'length<-' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to 'length<-' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'length<-' which requires 2
> f(list(),list())
Error: invalid value
> f(l0,l0)
Error: invalid value
> f(c0,c0)
Error: invalid value
> f(df0,df0)
Error: invalid value
> f(FALSE,FALSE)
Error: invalid value
> 
> ##  length<-.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("length<-.factor", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(df0)
Error in NextMethod() : generic function not specified
Calls: f -> NextMethod
> f(FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in NextMethod() : generic function not specified
Calls: f -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> 
> ##  lengths  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("lengths", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
integer(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'use.names' value
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
c0 
 0 
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : invalid 'use.names' value
> f(l0,l0)
Error in f(l0, l0) : invalid 'use.names' value
> f(c0,c0)
Error in f(c0, c0) : invalid 'use.names' value
> f(df0,df0)
Error in f(df0, df0) : invalid 'use.names' value
> f(FALSE,FALSE)
[1] 1
> 
> ##  levels  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("levels", pos = 'package:base')
> f()
Error in levels.default() : argument "x" is missing, with no default
Calls: f -> levels.default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  levels.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("levels.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  levels<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("levels<-", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'levels<-' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to 'levels<-' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : 1 argument passed to 'levels<-' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to 'levels<-' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to 'levels<-' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to 'levels<-' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to 'levels<-' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'levels<-' which requires 2
> f(list(),list())
list()
attr(,"levels")
list()
> f(l0,l0)
logical(0)
attr(,"levels")
logical(0)
> f(c0,c0)
character(0)
attr(,"levels")
character(0)
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[1] FALSE
attr(,"levels")
[1] FALSE
> 
> ##  levels<-.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("levels<-.factor", pos = 'package:base')
> f()
Error in levels(x) : argument "x" is missing, with no default
Calls: f -> levels
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in levels(x) : argument "x" is missing, with no default
Calls: f -> levels
> f(NULL,NULL)
integer(0)
attr(,"levels")
character(0)
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in rep.int(names(value), lapply(value, length)) : 
  unimplemented type 'NULL' in 'rep2'
Calls: f -> rep.int
> f(l0,l0)
integer(0)
attr(,"levels")
character(0)
> f(c0,c0)
integer(0)
attr(,"levels")
character(0)
> f(df0,df0)
Error in f(df0, df0) : 
  'names' attribute [1] must be the same length as the vector [0]
> f(FALSE,FALSE)
integer(0)
attr(,"levels")
[1] "FALSE"
> 
> ##  lfactorial  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("lfactorial", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in x + 1 : non-numeric argument to binary operator
Calls: f
> f(l0)
numeric(0)
> f(c0)
Error in x + 1 : non-numeric argument to binary operator
Calls: f
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(x + 1) : non-numeric variable in data frame: c0
Calls: f -> Math.data.frame
In addition: Warning message:
In Ops.factor(left, right) : '+' not meaningful for factors
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  lgamma  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("lgamma", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'lgamma' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'lgamma' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] Inf
Warning message:
value out of range in 'lgamma' 
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'lgamma' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'lgamma' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'lgamma' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'lgamma' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'lgamma' which requires 1
> 
> ##  libcurlVersion  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("libcurlVersion", pos = 'package:base')
> f()
[1] "7.47.0"
attr(,"ssl_version")
[1] "GnuTLS/3.4.10"
attr(,"libssh_version")
[1] ""
attr(,"protocols")
 [1] "dict"   "file"   "ftp"    "ftps"   "gopher" "http"   "https"  "imap"  
 [9] "imaps"  "ldap"   "ldaps"  "pop3"   "pop3s"  "rtmp"   "rtsp"   "smb"   
[17] "smbs"   "smtp"   "smtps"  "telnet" "tftp"  
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  library  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("library", pos = 'package:base')
> f()
Packages in library '/home/aviral/projects/r/library':

KernSmooth              Functions for Kernel Smoothing Supporting Wand
                        & Jones (1995)
MASS                    Support Functions and Datasets for Venables and
                        Ripley's MASS
Matrix                  Sparse and Dense Matrix Classes and Methods
RColorBrewer            ColorBrewer Palettes
RWeka                   R/Weka Interface
RWekajars               R/Weka Interface Jars
Rcpp                    Seamless R and C++ Integration
Rttf2pt1                'ttf2pt1' Program
base                    The R Base Package
boot                    Bootstrap Functions (Originally by Angelo Canty
                        for S)
class                   Functions for Classification
cluster                 "Finding Groups in Data": Cluster Analysis
                        Extended Rousseeuw et al.
codetools               Code Analysis Tools for R
colorspace              Color Space Manipulation
compiler                The R Compiler Package
datasets                The R Datasets Package
dichromat               Color Schemes for Dichromats
digest                  Create Compact Hash Digests of R Objects
extrafont               Tools for using fonts
extrafontdb             Package for holding the database for the
                        extrafont package
foreign                 Read Data Stored by Minitab, S, SAS, SPSS,
                        Stata, Systat, Weka, dBase, ...
gdata                   Various R Programming Tools for Data
                        Manipulation
ggplot2                 An Implementation of the Grammar of Graphics
gmodels                 Various R Programming Tools for Model Fitting
grDevices               The R Graphics Devices and Support for Colours
                        and Fonts
graphics                The R Graphics Package
grid                    The Grid Graphics Package
gtable                  Arrange 'Grobs' in Tables
gtools                  Various R Programming Tools
labeling                Axis Labeling
lattice                 Trellis Graphics for R
magrittr                A Forward-Pipe Operator for R
methods                 Formal Methods and Classes
mgcv                    Mixed GAM Computation Vehicle with GCV/AIC/REML
                        Smoothness Estimation
munsell                 Utilities for Using Munsell Colours
nlme                    Linear and Nonlinear Mixed Effects Models
nnet                    Feed-Forward Neural Networks and Multinomial
                        Log-Linear Models
parallel                Support for Parallel computation in R
plyr                    Tools for Splitting, Applying and Combining
                        Data
rJava                   Low-Level R to Java Interface
reshape2                Flexibly Reshape Data: A Reboot of the Reshape
                        Package.
rpart                   Recursive Partitioning and Regression Trees
scales                  Scale Functions for Visualization
spatial                 Functions for Kriging and Point Pattern
                        Analysis
splines                 Regression Spline Functions and Classes
stats                   The R Stats Package
stats4                  Statistical Functions using S4 Classes
stringi                 Character String Processing Facilities
stringr                 Simple, Consistent Wrappers for Common String
                        Operations
survival                Survival Analysis
tcltk                   Tcl/Tk Interface
tools                   Tools for Package Development
utils                   The R Utils Package

> f(NULL)
Error in f(NULL) : 'package' must be of length 1
> f(,NULL)
Error in find.package(pkgName, lib.loc, verbose = verbose) : 
  there is no package called 'NA'
Calls: f -> find.package
> f(NULL,NULL)
Error in f(NULL, NULL) : 'package' must be of length 1
> f(list())
Error in f(list()) : there is no package called 'list'
> f(l0)
Error in f(l0) : there is no package called 'l0'
> f(c0)
Error in f(c0) : there is no package called 'c0'
> f(m0)
Error in f(m0) : there is no package called 'm0'
> f(df0)
Error in f(df0) : there is no package called 'df0'
> f(FALSE)
Error in f(FALSE) : there is no package called 'FALSE'
> f(list(),list())
Error in f(list(), list()) : there is no package called 'list'
> f(l0,l0)
Error in f(l0, l0) : there is no package called 'l0'
> f(c0,c0)
Error in f(c0, c0) : there is no package called 'c0'
> f(df0,df0)
Error in f(df0, df0) : there is no package called 'df0'
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : there is no package called 'FALSE'
> 
> ##  library.dynam  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("library.dynam", pos = 'package:base')
> f()
                                                     Filename Dynamic.Lookup
1     /home/aviral/projects/r/library/methods/libs/methods.so          FALSE
2         /home/aviral/projects/r/library/utils/libs/utils.so          FALSE
3 /home/aviral/projects/r/library/grDevices/libs/grDevices.so          FALSE
4   /home/aviral/projects/r/library/graphics/libs/graphics.so          FALSE
5         /home/aviral/projects/r/library/stats/libs/stats.so          FALSE
> f(NULL)
Error in if (missing(chname) || !nzchar(chname)) return(dll_list) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(,NULL)
                                                     Filename Dynamic.Lookup
1     /home/aviral/projects/r/library/methods/libs/methods.so          FALSE
2         /home/aviral/projects/r/library/utils/libs/utils.so          FALSE
3 /home/aviral/projects/r/library/grDevices/libs/grDevices.so          FALSE
4   /home/aviral/projects/r/library/graphics/libs/graphics.so          FALSE
5         /home/aviral/projects/r/library/stats/libs/stats.so          FALSE
> f(NULL,NULL)
Error in if (missing(chname) || !nzchar(chname)) return(dll_list) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(list())
Error in if (missing(chname) || !nzchar(chname)) return(dll_list) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0)
Error in if (missing(chname) || !nzchar(chname)) return(dll_list) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0)
Error in if (missing(chname) || !nzchar(chname)) return(dll_list) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(m0)
Error in if (missing(chname) || !nzchar(chname)) return(dll_list) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0)
Error in f(df0) : argument "package" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "package" is missing, with no default
> f(list(),list())
Error in if (missing(chname) || !nzchar(chname)) return(dll_list) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0,l0)
Error in if (missing(chname) || !nzchar(chname)) return(dll_list) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0,c0)
Error in if (missing(chname) || !nzchar(chname)) return(dll_list) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0,df0)
Error in f(df0, df0) : argument "lib.loc" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "lib.loc" is missing, with no default
> 
> ##  library.dynam.unload  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("library.dynam.unload", pos = 'package:base')
> f()
Error in f() : no shared object was specified
> f(NULL)
Error in if (missing(chname) || nchar(chname, "c") == 0L) if (.Platform$OS.type ==  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(,NULL)
Error in f(, NULL) : no shared object was specified
> f(NULL,NULL)
Error in if (missing(chname) || nchar(chname, "c") == 0L) if (.Platform$OS.type ==  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(list())
Error in if (missing(chname) || nchar(chname, "c") == 0L) if (.Platform$OS.type ==  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0)
Error in if (missing(chname) || nchar(chname, "c") == 0L) if (.Platform$OS.type ==  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0)
Error in if (missing(chname) || nchar(chname, "c") == 0L) if (.Platform$OS.type ==  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(m0)
Error in if (missing(chname) || nchar(chname, "c") == 0L) if (.Platform$OS.type ==  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0)
Error in path.expand(path) : 
  argument "libpath" is missing, with no default
Calls: f -> normalizePath -> path.expand
> f(FALSE)
Error in path.expand(path) : 
  argument "libpath" is missing, with no default
Calls: f -> normalizePath -> path.expand
> f(list(),list())
Error in if (missing(chname) || nchar(chname, "c") == 0L) if (.Platform$OS.type ==  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0,l0)
Error in if (missing(chname) || nchar(chname, "c") == 0L) if (.Platform$OS.type ==  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0,c0)
Error in if (missing(chname) || nchar(chname, "c") == 0L) if (.Platform$OS.type ==  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0,df0)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> normalizePath -> path.expand
> f(FALSE,FALSE)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> normalizePath -> path.expand
> 
> ##  licence  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("licence", pos = 'package:base')
> f()

This software is distributed under the terms of the GNU General
Public License, either Version 2, June 1991 or Version 3, June 2007.
The terms of version 2 of the license are in a file called COPYING
which you should have received with
this software and which can be displayed by RShowDoc("COPYING").
Version 3 of the license can be displayed by RShowDoc("GPL-3").

Copies of both versions 2 and 3 of the license can be found
at https://www.R-project.org/Licenses/.

A small number of files (the API header files listed in
R_DOC_DIR/COPYRIGHTS) are distributed under the
LESSER GNU GENERAL PUBLIC LICENSE, version 2.1 or later.
This can be displayed by RShowDoc("LGPL-2.1"),
or obtained at the URI given.
Version 3 of the license can be displayed by RShowDoc("LGPL-3").

'Share and Enjoy.'

> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  license  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("license", pos = 'package:base')
> f()

This software is distributed under the terms of the GNU General
Public License, either Version 2, June 1991 or Version 3, June 2007.
The terms of version 2 of the license are in a file called COPYING
which you should have received with
this software and which can be displayed by RShowDoc("COPYING").
Version 3 of the license can be displayed by RShowDoc("GPL-3").

Copies of both versions 2 and 3 of the license can be found
at https://www.R-project.org/Licenses/.

A small number of files (the API header files listed in
R_DOC_DIR/COPYRIGHTS) are distributed under the
LESSER GNU GENERAL PUBLIC LICENSE, version 2.1 or later.
This can be displayed by RShowDoc("LGPL-2.1"),
or obtained at the URI given.
Version 3 of the license can be displayed by RShowDoc("LGPL-3").

'Share and Enjoy.'

> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  list  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("list", pos = 'package:base')
> f()
list()
> f(NULL)
[[1]]
NULL

> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
[[1]]
NULL

[[2]]
NULL

> f(list())
[[1]]
list()

> f(l0)
[[1]]
logical(0)

> f(c0)
[[1]]
character(0)

> f(m0)
[[1]]
<0 x 0 matrix>

> f(df0)
[[1]]
[1] c0
<0 rows> (or 0-length row.names)

> f(FALSE)
[[1]]
[1] FALSE

> f(list(),list())
[[1]]
list()

[[2]]
list()

> f(l0,l0)
[[1]]
logical(0)

[[2]]
logical(0)

> f(c0,c0)
[[1]]
character(0)

[[2]]
character(0)

> f(df0,df0)
[[1]]
[1] c0
<0 rows> (or 0-length row.names)

[[2]]
[1] c0
<0 rows> (or 0-length row.names)

> f(FALSE,FALSE)
[[1]]
[1] FALSE

[[2]]
[1] FALSE

> 
> ##  list.dirs  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("list.dirs", pos = 'package:base')
> f()
  [1] "."                                                   
  [2] "./Embedding"                                         
  [3] "./Examples"                                          
  [4] "./KernSmooth.Rcheck"                                 
  [5] "./KernSmooth.Rcheck/tests"                           
  [6] "./MASS.Rcheck"                                       
  [7] "./MASS.Rcheck/tests"                                 
  [8] "./MASS.Rcheck/tests/Examples"                        
  [9] "./Matrix.Rcheck"                                     
 [10] "./Matrix.Rcheck/tests"                               
 [11] "./Pkgs"                                              
 [12] "./Pkgs/exNSS4"                                       
 [13] "./Pkgs/exNSS4/R"                                     
 [14] "./Pkgs/pkgA"                                         
 [15] "./Pkgs/pkgA/R"                                       
 [16] "./Pkgs/pkgA/data"                                    
 [17] "./Pkgs/pkgA/man"                                     
 [18] "./Pkgs/pkgB"                                         
 [19] "./Pkgs/xDir"                                         
 [20] "./Pkgs/xDir/pkg"                                     
 [21] "./Pkgs/xDir/pkg/R"                                   
 [22] "./Pkgs/xDir/pkg/data"                                
 [23] "./Pkgs/xDir/pkg/man"                                 
 [24] "./RecPackages"                                       
 [25] "./RecPackages/KernSmooth"                            
 [26] "./RecPackages/KernSmooth/R"                          
 [27] "./RecPackages/KernSmooth/inst"                       
 [28] "./RecPackages/KernSmooth/inst/po"                    
 [29] "./RecPackages/KernSmooth/inst/po/de"                 
 [30] "./RecPackages/KernSmooth/inst/po/de/LC_MESSAGES"     
 [31] "./RecPackages/KernSmooth/inst/po/en@quot"            
 [32] "./RecPackages/KernSmooth/inst/po/en@quot/LC_MESSAGES"
 [33] "./RecPackages/KernSmooth/inst/po/fr"                 
 [34] "./RecPackages/KernSmooth/inst/po/fr/LC_MESSAGES"     
 [35] "./RecPackages/KernSmooth/inst/po/ko"                 
 [36] "./RecPackages/KernSmooth/inst/po/ko/LC_MESSAGES"     
 [37] "./RecPackages/KernSmooth/inst/po/pl"                 
 [38] "./RecPackages/KernSmooth/inst/po/pl/LC_MESSAGES"     
 [39] "./RecPackages/KernSmooth/man"                        
 [40] "./RecPackages/KernSmooth/po"                         
 [41] "./RecPackages/KernSmooth/src"                        
 [42] "./RecPackages/KernSmooth/tests"                      
 [43] "./RecPackages/MASS"                                  
 [44] "./RecPackages/MASS/R"                                
 [45] "./RecPackages/MASS/data"                             
 [46] "./RecPackages/MASS/inst"                             
 [47] "./RecPackages/MASS/inst/po"                          
 [48] "./RecPackages/MASS/inst/po/de"                       
 [49] "./RecPackages/MASS/inst/po/de/LC_MESSAGES"           
 [50] "./RecPackages/MASS/inst/po/en@quot"                  
 [51] "./RecPackages/MASS/inst/po/en@quot/LC_MESSAGES"      
 [52] "./RecPackages/MASS/inst/po/fr"                       
 [53] "./RecPackages/MASS/inst/po/fr/LC_MESSAGES"           
 [54] "./RecPackages/MASS/inst/po/ko"                       
 [55] "./RecPackages/MASS/inst/po/ko/LC_MESSAGES"           
 [56] "./RecPackages/MASS/inst/po/pl"                       
 [57] "./RecPackages/MASS/inst/po/pl/LC_MESSAGES"           
 [58] "./RecPackages/MASS/inst/scripts"                     
 [59] "./RecPackages/MASS/man"                              
 [60] "./RecPackages/MASS/po"                               
 [61] "./RecPackages/MASS/src"                              
 [62] "./RecPackages/MASS/tests"                            
 [63] "./RecPackages/MASS/tests/Examples"                   
 [64] "./RecPackages/Matrix"                                
 [65] "./RecPackages/Matrix/R"                              
 [66] "./RecPackages/Matrix/build"                          
 [67] "./RecPackages/Matrix/data"                           
 [68] "./RecPackages/Matrix/inst"                           
 [69] "./RecPackages/Matrix/inst/doc"                       
 [70] "./RecPackages/Matrix/inst/doc/SuiteSparse"           
 [71] "./RecPackages/Matrix/inst/external"                  
 [72] "./RecPackages/Matrix/inst/include"                   
 [73] "./RecPackages/Matrix/inst/po"                        
 [74] "./RecPackages/Matrix/inst/po/de"                     
 [75] "./RecPackages/Matrix/inst/po/de/LC_MESSAGES"         
 [76] "./RecPackages/Matrix/inst/po/en@quot"                
 [77] "./RecPackages/Matrix/inst/po/en@quot/LC_MESSAGES"    
 [78] "./RecPackages/Matrix/inst/po/fr"                     
 [79] "./RecPackages/Matrix/inst/po/fr/LC_MESSAGES"         
 [80] "./RecPackages/Matrix/inst/po/ko"                     
 [81] "./RecPackages/Matrix/inst/po/ko/LC_MESSAGES"         
 [82] "./RecPackages/Matrix/inst/po/pl"                     
 [83] "./RecPackages/Matrix/inst/po/pl/LC_MESSAGES"         
 [84] "./RecPackages/Matrix/man"                            
 [85] "./RecPackages/Matrix/po"                             
 [86] "./RecPackages/Matrix/src"                            
 [87] "./RecPackages/Matrix/src/AMD"                        
 [88] "./RecPackages/Matrix/src/AMD/Include"                
 [89] "./RecPackages/Matrix/src/AMD/Source"                 
 [90] "./RecPackages/Matrix/src/CHOLMOD"                    
 [91] "./RecPackages/Matrix/src/CHOLMOD/Check"              
 [92] "./RecPackages/Matrix/src/CHOLMOD/Cholesky"           
 [93] "./RecPackages/Matrix/src/CHOLMOD/Core"               
 [94] "./RecPackages/Matrix/src/CHOLMOD/Include"            
 [95] "./RecPackages/Matrix/src/CHOLMOD/Lib"                
 [96] "./RecPackages/Matrix/src/CHOLMOD/MatrixOps"          
 [97] "./RecPackages/Matrix/src/CHOLMOD/Modify"             
 [98] "./RecPackages/Matrix/src/CHOLMOD/Partition"          
 [99] "./RecPackages/Matrix/src/CHOLMOD/Supernodal"         
[100] "./RecPackages/Matrix/src/COLAMD"                     
[101] "./RecPackages/Matrix/src/COLAMD/Include"             
[102] "./RecPackages/Matrix/src/COLAMD/Source"              
[103] "./RecPackages/Matrix/src/SuiteSparse_config"         
[104] "./RecPackages/Matrix/src/scripts"                    
[105] "./RecPackages/Matrix/tests"                          
[106] "./RecPackages/Matrix/vignettes"                      
[107] "./RecPackages/boot"                                  
[108] "./RecPackages/boot/R"                                
[109] "./RecPackages/boot/data"                             
[110] "./RecPackages/boot/inst"                             
[111] "./RecPackages/boot/inst/po"                          
[112] "./RecPackages/boot/inst/po/de"                       
[113] "./RecPackages/boot/inst/po/de/LC_MESSAGES"           
[114] "./RecPackages/boot/inst/po/en@quot"                  
[115] "./RecPackages/boot/inst/po/en@quot/LC_MESSAGES"      
[116] "./RecPackages/boot/inst/po/fr"                       
[117] "./RecPackages/boot/inst/po/fr/LC_MESSAGES"           
[118] "./RecPackages/boot/inst/po/ko"                       
[119] "./RecPackages/boot/inst/po/ko/LC_MESSAGES"           
[120] "./RecPackages/boot/inst/po/pl"                       
[121] "./RecPackages/boot/inst/po/pl/LC_MESSAGES"           
[122] "./RecPackages/boot/inst/po/ru"                       
[123] "./RecPackages/boot/inst/po/ru/LC_MESSAGES"           
[124] "./RecPackages/boot/man"                              
[125] "./RecPackages/boot/po"                               
[126] "./RecPackages/boot/tests"                            
[127] "./RecPackages/boot/tests/Examples"                   
[128] "./RecPackages/class"                                 
[129] "./RecPackages/class/R"                               
[130] "./RecPackages/class/inst"                            
[131] "./RecPackages/class/inst/po"                         
[132] "./RecPackages/class/inst/po/de"                      
[133] "./RecPackages/class/inst/po/de/LC_MESSAGES"          
[134] "./RecPackages/class/inst/po/en@quot"                 
[135] "./RecPackages/class/inst/po/en@quot/LC_MESSAGES"     
[136] "./RecPackages/class/inst/po/fr"                      
[137] "./RecPackages/class/inst/po/fr/LC_MESSAGES"          
[138] "./RecPackages/class/inst/po/ko"                      
[139] "./RecPackages/class/inst/po/ko/LC_MESSAGES"          
[140] "./RecPackages/class/inst/po/pl"                      
[141] "./RecPackages/class/inst/po/pl/LC_MESSAGES"          
[142] "./RecPackages/class/man"                             
[143] "./RecPackages/class/po"                              
[144] "./RecPackages/class/src"                             
[145] "./RecPackages/cluster"                               
[146] "./RecPackages/cluster/R"                             
[147] "./RecPackages/cluster/data"                          
[148] "./RecPackages/cluster/inst"                          
[149] "./RecPackages/cluster/inst/po"                       
[150] "./RecPackages/cluster/inst/po/de"                    
[151] "./RecPackages/cluster/inst/po/de/LC_MESSAGES"        
[152] "./RecPackages/cluster/inst/po/en@quot"               
[153] "./RecPackages/cluster/inst/po/en@quot/LC_MESSAGES"   
[154] "./RecPackages/cluster/inst/po/fr"                    
[155] "./RecPackages/cluster/inst/po/fr/LC_MESSAGES"        
[156] "./RecPackages/cluster/inst/po/ko"                    
[157] "./RecPackages/cluster/inst/po/ko/LC_MESSAGES"        
[158] "./RecPackages/cluster/inst/po/pl"                    
[159] "./RecPackages/cluster/inst/po/pl/LC_MESSAGES"        
[160] "./RecPackages/cluster/man"                           
[161] "./RecPackages/cluster/po"                            
[162] "./RecPackages/cluster/src"                           
[163] "./RecPackages/cluster/tests"                         
[164] "./RecPackages/codetools"                             
[165] "./RecPackages/codetools/R"                           
[166] "./RecPackages/codetools/man"                         
[167] "./RecPackages/codetools/tests"                       
[168] "./RecPackages/foreign"                               
[169] "./RecPackages/foreign/R"                             
[170] "./RecPackages/foreign/inst"                          
[171] "./RecPackages/foreign/inst/files"                    
[172] "./RecPackages/foreign/inst/po"                       
[173] "./RecPackages/foreign/inst/po/de"                    
[174] "./RecPackages/foreign/inst/po/de/LC_MESSAGES"        
[175] "./RecPackages/foreign/inst/po/en@quot"               
[176] "./RecPackages/foreign/inst/po/en@quot/LC_MESSAGES"   
[177] "./RecPackages/foreign/inst/po/fr"                    
[178] "./RecPackages/foreign/inst/po/fr/LC_MESSAGES"        
[179] "./RecPackages/foreign/inst/po/pl"                    
[180] "./RecPackages/foreign/inst/po/pl/LC_MESSAGES"        
[181] "./RecPackages/foreign/man"                           
[182] "./RecPackages/foreign/po"                            
[183] "./RecPackages/foreign/src"                           
[184] "./RecPackages/foreign/tests"                         
[185] "./RecPackages/foreign/tests/keep"                    
[186] "./RecPackages/lattice"                               
[187] "./RecPackages/lattice/R"                             
[188] "./RecPackages/lattice/data"                          
[189] "./RecPackages/lattice/demo"                          
[190] "./RecPackages/lattice/inst"                          
[191] "./RecPackages/lattice/inst/po"                       
[192] "./RecPackages/lattice/inst/po/de"                    
[193] "./RecPackages/lattice/inst/po/de/LC_MESSAGES"        
[194] "./RecPackages/lattice/inst/po/en@quot"               
[195] "./RecPackages/lattice/inst/po/en@quot/LC_MESSAGES"   
[196] "./RecPackages/lattice/inst/po/fr"                    
[197] "./RecPackages/lattice/inst/po/fr/LC_MESSAGES"        
[198] "./RecPackages/lattice/inst/po/ko"                    
[199] "./RecPackages/lattice/inst/po/ko/LC_MESSAGES"        
[200] "./RecPackages/lattice/inst/po/pl"                    
[201] "./RecPackages/lattice/inst/po/pl/LC_MESSAGES"        
[202] "./RecPackages/lattice/man"                           
[203] "./RecPackages/lattice/po"                            
[204] "./RecPackages/lattice/src"                           
[205] "./RecPackages/lattice/tests"                         
[206] "./RecPackages/mgcv"                                  
[207] "./RecPackages/mgcv/R"                                
[208] "./RecPackages/mgcv/data"                             
[209] "./RecPackages/mgcv/inst"                             
[210] "./RecPackages/mgcv/inst/po"                          
[211] "./RecPackages/mgcv/inst/po/de"                       
[212] "./RecPackages/mgcv/inst/po/de/LC_MESSAGES"           
[213] "./RecPackages/mgcv/inst/po/en@quot"                  
[214] "./RecPackages/mgcv/inst/po/en@quot/LC_MESSAGES"      
[215] "./RecPackages/mgcv/inst/po/fr"                       
[216] "./RecPackages/mgcv/inst/po/fr/LC_MESSAGES"           
[217] "./RecPackages/mgcv/inst/po/ko"                       
[218] "./RecPackages/mgcv/inst/po/ko/LC_MESSAGES"           
[219] "./RecPackages/mgcv/inst/po/pl"                       
[220] "./RecPackages/mgcv/inst/po/pl/LC_MESSAGES"           
[221] "./RecPackages/mgcv/man"                              
[222] "./RecPackages/mgcv/po"                               
[223] "./RecPackages/mgcv/src"                              
[224] "./RecPackages/nlme"                                  
[225] "./RecPackages/nlme/R"                                
[226] "./RecPackages/nlme/data"                             
[227] "./RecPackages/nlme/inst"                             
[228] "./RecPackages/nlme/inst/mlbook"                      
[229] "./RecPackages/nlme/inst/po"                          
[230] "./RecPackages/nlme/inst/po/de"                       
[231] "./RecPackages/nlme/inst/po/de/LC_MESSAGES"           
[232] "./RecPackages/nlme/inst/po/en@quot"                  
[233] "./RecPackages/nlme/inst/po/en@quot/LC_MESSAGES"      
[234] "./RecPackages/nlme/inst/po/fr"                       
[235] "./RecPackages/nlme/inst/po/fr/LC_MESSAGES"           
[236] "./RecPackages/nlme/inst/po/ko"                       
[237] "./RecPackages/nlme/inst/po/ko/LC_MESSAGES"           
[238] "./RecPackages/nlme/inst/po/pl"                       
[239] "./RecPackages/nlme/inst/po/pl/LC_MESSAGES"           
[240] "./RecPackages/nlme/inst/scripts"                     
[241] "./RecPackages/nlme/man"                              
[242] "./RecPackages/nlme/po"                               
[243] "./RecPackages/nlme/src"                              
[244] "./RecPackages/nlme/tests"                            
[245] "./RecPackages/nnet"                                  
[246] "./RecPackages/nnet/R"                                
[247] "./RecPackages/nnet/inst"                             
[248] "./RecPackages/nnet/inst/po"                          
[249] "./RecPackages/nnet/inst/po/de"                       
[250] "./RecPackages/nnet/inst/po/de/LC_MESSAGES"           
[251] "./RecPackages/nnet/inst/po/en@quot"                  
[252] "./RecPackages/nnet/inst/po/en@quot/LC_MESSAGES"      
[253] "./RecPackages/nnet/inst/po/fr"                       
[254] "./RecPackages/nnet/inst/po/fr/LC_MESSAGES"           
[255] "./RecPackages/nnet/inst/po/ko"                       
[256] "./RecPackages/nnet/inst/po/ko/LC_MESSAGES"           
[257] "./RecPackages/nnet/inst/po/pl"                       
[258] "./RecPackages/nnet/inst/po/pl/LC_MESSAGES"           
[259] "./RecPackages/nnet/man"                              
[260] "./RecPackages/nnet/po"                               
[261] "./RecPackages/nnet/src"                              
[262] "./RecPackages/rpart"                                 
[263] "./RecPackages/rpart/R"                               
[264] "./RecPackages/rpart/build"                           
[265] "./RecPackages/rpart/data"                            
[266] "./RecPackages/rpart/inst"                            
[267] "./RecPackages/rpart/inst/doc"                        
[268] "./RecPackages/rpart/inst/po"                         
[269] "./RecPackages/rpart/inst/po/de"                      
[270] "./RecPackages/rpart/inst/po/de/LC_MESSAGES"          
[271] "./RecPackages/rpart/inst/po/en@quot"                 
[272] "./RecPackages/rpart/inst/po/en@quot/LC_MESSAGES"     
[273] "./RecPackages/rpart/inst/po/fr"                      
[274] "./RecPackages/rpart/inst/po/fr/LC_MESSAGES"          
[275] "./RecPackages/rpart/inst/po/ko"                      
[276] "./RecPackages/rpart/inst/po/ko/LC_MESSAGES"          
[277] "./RecPackages/rpart/inst/po/pl"                      
[278] "./RecPackages/rpart/inst/po/pl/LC_MESSAGES"          
[279] "./RecPackages/rpart/inst/po/ru"                      
[280] "./RecPackages/rpart/inst/po/ru/LC_MESSAGES"          
[281] "./RecPackages/rpart/man"                             
[282] "./RecPackages/rpart/po"                              
[283] "./RecPackages/rpart/src"                             
[284] "./RecPackages/rpart/tests"                           
[285] "./RecPackages/rpart/tests/Examples"                  
[286] "./RecPackages/rpart/vignettes"                       
[287] "./RecPackages/spatial"                               
[288] "./RecPackages/spatial/R"                             
[289] "./RecPackages/spatial/inst"                          
[290] "./RecPackages/spatial/inst/po"                       
[291] "./RecPackages/spatial/inst/po/de"                    
[292] "./RecPackages/spatial/inst/po/de/LC_MESSAGES"        
[293] "./RecPackages/spatial/inst/po/en@quot"               
[294] "./RecPackages/spatial/inst/po/en@quot/LC_MESSAGES"   
[295] "./RecPackages/spatial/inst/po/fr"                    
[296] "./RecPackages/spatial/inst/po/fr/LC_MESSAGES"        
[297] "./RecPackages/spatial/inst/po/ko"                    
[298] "./RecPackages/spatial/inst/po/ko/LC_MESSAGES"        
[299] "./RecPackages/spatial/inst/po/pl"                    
[300] "./RecPackages/spatial/inst/po/pl/LC_MESSAGES"        
[301] "./RecPackages/spatial/inst/ppdata"                   
[302] "./RecPackages/spatial/man"                           
[303] "./RecPackages/spatial/po"                            
[304] "./RecPackages/spatial/src"                           
[305] "./RecPackages/spatial/tests"                         
[306] "./RecPackages/spatial/tests/Examples"                
[307] "./RecPackages/survival"                              
[308] "./RecPackages/survival/R"                            
[309] "./RecPackages/survival/build"                        
[310] "./RecPackages/survival/data"                         
[311] "./RecPackages/survival/inst"                         
[312] "./RecPackages/survival/inst/doc"                     
[313] "./RecPackages/survival/man"                          
[314] "./RecPackages/survival/noweb"                        
[315] "./RecPackages/survival/noweb/figures"                
[316] "./RecPackages/survival/src"                          
[317] "./RecPackages/survival/tests"                        
[318] "./RecPackages/survival/vignettes"                    
[319] "./boot.Rcheck"                                       
[320] "./class.Rcheck"                                      
[321] "./cluster.Rcheck"                                    
[322] "./cluster.Rcheck/tests"                              
[323] "./codetools.Rcheck"                                  
[324] "./codetools.Rcheck/tests"                            
[325] "./foreign.Rcheck"                                    
[326] "./foreign.Rcheck/tests"                              
[327] "./foreign.Rcheck/tests/keep"                         
[328] "./lattice.Rcheck"                                    
[329] "./lattice.Rcheck/tests"                              
[330] "./mgcv.Rcheck"                                       
[331] "./myTst2"                                            
[332] "./myTst2/R"                                          
[333] "./myTst2/man"                                        
[334] "./nlme.Rcheck"                                       
[335] "./nlme.Rcheck/tests"                                 
[336] "./nnet.Rcheck"                                       
[337] "./rpart.Rcheck"                                      
[338] "./rpart.Rcheck/tests"                                
[339] "./rpart.Rcheck/tests/Examples"                       
[340] "./spatial.Rcheck"                                    
[341] "./survival.Rcheck"                                   
[342] "./survival.Rcheck/tests"                             
> f(NULL)
Error in f(NULL) : invalid 'directory' argument
> f(,NULL)
Error in f(, NULL) : invalid 'full.names' argument
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'directory' argument
> f(list())
Error in f(list()) : invalid 'directory' argument
> f(l0)
Error in f(l0) : invalid 'directory' argument
> f(c0)
character(0)
> f(m0)
Error in f(m0) : invalid 'directory' argument
> f(df0)
Error in f(df0) : invalid 'directory' argument
> f(FALSE)
Error in f(FALSE) : invalid 'directory' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'directory' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'directory' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'full.names' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'directory' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'directory' argument
> 
> ##  list.files  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("list.files", pos = 'package:base')
> f()
  [1] "EmbeddedNuls.csv"           "Embedding"                 
  [3] "Examples"                   "FALSE"                     
  [5] "KernSmooth.Rcheck"          "MASS.Rcheck"               
  [7] "Makefile"                   "Makefile.common"           
  [9] "Makefile.in"                "Makefile.install"          
 [11] "Makefile.win"               "Matrix.Rcheck"             
 [13] "Pkgs"                       "R-intro.R"                 
 [15] "R-intro.Rout"               "R-intro.Rout.save"         
 [17] "README"                     "RecPackages"               
 [19] "Rplot.eps"                  "Rplot.pdf"                 
 [21] "Rplot001.bmp"               "Rplots.pdf"                
 [23] "Rplots1.pdf"                "Rplots10.pdf"              
 [25] "Rplots11.pdf"               "Rplots12.pdf"              
 [27] "Rplots13.pdf"               "Rplots14.pdf"              
 [29] "Rplots15.pdf"               "Rplots16.pdf"              
 [31] "Rplots17.pdf"               "Rplots18.pdf"              
 [33] "Rplots19.pdf"               "Rplots2.pdf"               
 [35] "Rplots20.pdf"               "Rplots21.pdf"              
 [37] "Rplots22.pdf"               "Rplots23.pdf"              
 [39] "Rplots24.pdf"               "Rplots25.pdf"              
 [41] "Rplots26.pdf"               "Rplots27.pdf"              
 [43] "Rplots28.pdf"               "Rplots29.pdf"              
 [45] "Rplots3.pdf"                "Rplots30.pdf"              
 [47] "Rplots31.pdf"               "Rplots32.pdf"              
 [49] "Rplots33.pdf"               "Rplots34.pdf"              
 [51] "Rplots35.pdf"               "Rplots36.pdf"              
 [53] "Rplots37.pdf"               "Rplots38.pdf"              
 [55] "Rplots39.pdf"               "Rplots4.pdf"               
 [57] "Rplots40.pdf"               "Rplots41.pdf"              
 [59] "Rplots42.pdf"               "Rplots43.pdf"              
 [61] "Rplots44.pdf"               "Rplots45.pdf"              
 [63] "Rplots5.pdf"                "Rplots6.pdf"               
 [65] "Rplots7.pdf"                "Rplots8.pdf"               
 [67] "Rplots9.pdf"                "WinUnicode.dat"            
 [69] "annotation.R"               "any-all.R"                 
 [71] "any-all.Rout"               "any-all.Rout.save"         
 [73] "arima.rda"                  "arith-true.R"              
 [75] "arith-true.Rout"            "arith-true.Rout.save"      
 [77] "arith.R"                    "arith.Rout"                
 [79] "arith.Rout.save"            "array-subset.R"            
 [81] "array-subset.Rout"          "boot.Rcheck"               
 [83] "class.Rcheck"               "cluster.Rcheck"            
 [85] "codetools.Rcheck"           "complex.R"                 
 [87] "complex.Rout"               "complex.Rout.save"         
 [89] "d-p-q-r-tests.R"            "d-p-q-r-tests.Rout"        
 [91] "d-p-q-r-tests.Rout.save"    "data"                      
 [93] "datasets.R"                 "datasets.Rout"             
 [95] "datasets.Rout.save"         "datetime.R"                
 [97] "datetime.Rout"              "datetime.Rout.save"        
 [99] "datetime2.R"                "datetime2.Rout"            
[101] "datetime2.Rout.save"        "demos.R"                   
[103] "demos.Rout"                 "demos.Rout.save"           
[105] "demos2.R"                   "demos2.Rout"               
[107] "encodings.R"                "eval-etc.R"                
[109] "eval-etc.Rout"              "eval-etc.Rout.save"        
[111] "ex.gz"                      "exNSS4_1.1.tar.gz"         
[113] "foreign.Rcheck"             "gct-foot.R"                
[115] "iec60559.R"                 "iec60559.Rout"             
[117] "iec60559.Rout.save"         "integer(0)"                
[119] "internet.R"                 "internet.Rout"             
[121] "internet.Rout.save"         "internet2.R"               
[123] "internet2.Rout"             "isas-tests.Rin"            
[125] "isas-tests.Rout"            "isas-tests.Rout.save"      
[127] "lapack.R"                   "lapack.Rout"               
[129] "lapack.Rout.save"           "lattice.Rcheck"            
[131] "libcurl.R"                  "libcurl.Rout"              
[133] "lm-tests.R"                 "lm-tests.Rout"             
[135] "lm-tests.Rout.save"         "method-dispatch.R"         
[137] "method-dispatch.Rout"       "method-dispatch.Rout.save" 
[139] "mgcv.Rcheck"                "myTst2"                    
[141] "nanbug.rda"                 "nlme.Rcheck"               
[143] "nnet.Rcheck"                "no-segfault.R"             
[145] "no-segfault.Rin"            "no-segfault.Rout"          
[147] "ok-errors.R"                "ok-errors.Rout"            
[149] "ok-errors.Rout.save"        "p-qbeta-strict-tst.R"      
[151] "p-qbeta-strict-tst.Rout"    "p-r-random-tests.R"        
[153] "p-r-random-tests.Rout"      "p-r-random-tests.Rout.save"
[155] "pkgA_1.2.tar.gz"            "pkgB_1.0.tar.gz"           
[157] "primitives.R"               "primitives.Rout"           
[159] "print-tests.R"              "print-tests.Rout"          
[161] "print-tests.Rout.save"      "r-strict-tst.R"            
[163] "r-strict-tst.Rout"          "reg-BLAS.R"                
[165] "reg-BLAS.Rout"              "reg-IO.R"                  
[167] "reg-IO.Rout"                "reg-IO.Rout.save"          
[169] "reg-IO2.R"                  "reg-IO2.Rout"              
[171] "reg-IO2.Rout.save"          "reg-S4.R"                  
[173] "reg-S4.Rout"                "reg-S4.Rout.save"          
[175] "reg-examples-1.pdf"         "reg-examples-2.pdf"        
[177] "reg-examples-3.pdf"         "reg-examples1.R"           
[179] "reg-examples1.Rout"         "reg-examples2.R"           
[181] "reg-examples2.Rout"         "reg-examples3.R"           
[183] "reg-examples3.Rout"         "reg-examples3.Rout.save"   
[185] "reg-packages.R"             "reg-packages.Rout"         
[187] "reg-plot-latin1.R"          "reg-plot-latin1.Rout"      
[189] "reg-plot-latin1.pdf"        "reg-plot-latin1.pdf.save"  
[191] "reg-plot.R"                 "reg-plot.Rout"             
[193] "reg-plot.Rout.save"         "reg-plot.pdf"              
[195] "reg-plot.pdf.save"          "reg-tests-1a.R"            
[197] "reg-tests-1a.Rout"          "reg-tests-1a.pdf"          
[199] "reg-tests-1b.R"             "reg-tests-1b.Rout"         
[201] "reg-tests-1b.pdf"           "reg-tests-1c.R"            
[203] "reg-tests-1c.Rout"          "reg-tests-1c.pdf"          
[205] "reg-tests-2.R"              "reg-tests-2.Rout"          
[207] "reg-tests-2.Rout.save"      "reg-tests-2.pdf"           
[209] "reg-tests-3.R"              "reg-tests-3.Rout"          
[211] "reg-tests-3.Rout.save"      "reg-tests-3.pdf"           
[213] "reg-win.R"                  "rpart.Rcheck"              
[215] "simple-true.R"              "simple-true.Rout"          
[217] "simple-true.Rout.save"      "spatial.Rcheck"            
[219] "survival.Rcheck"            "test-system.R"             
[221] "test-system.Rout.save"      "test-system2.c"            
[223] "testit-Ex.R.save"           "testit.Rd"                 
[225] "testit.html.save"           "testit.tex.save"           
[227] "testit.txt.save"            "utf8-regex.R"              
[229] "utf8-regex.Rout"            "ver20-Ex.R.save"           
[231] "ver20.Rd"                   "ver20.html.save"           
[233] "ver20.tex.save"             "ver20.txt.save"            
> f(NULL)
Error in f(NULL) : invalid 'path' argument
> f(,NULL)
  [1] "EmbeddedNuls.csv"           "Embedding"                 
  [3] "Examples"                   "FALSE"                     
  [5] "KernSmooth.Rcheck"          "MASS.Rcheck"               
  [7] "Makefile"                   "Makefile.common"           
  [9] "Makefile.in"                "Makefile.install"          
 [11] "Makefile.win"               "Matrix.Rcheck"             
 [13] "Pkgs"                       "R-intro.R"                 
 [15] "R-intro.Rout"               "R-intro.Rout.save"         
 [17] "README"                     "RecPackages"               
 [19] "Rplot.eps"                  "Rplot.pdf"                 
 [21] "Rplot001.bmp"               "Rplots.pdf"                
 [23] "Rplots1.pdf"                "Rplots10.pdf"              
 [25] "Rplots11.pdf"               "Rplots12.pdf"              
 [27] "Rplots13.pdf"               "Rplots14.pdf"              
 [29] "Rplots15.pdf"               "Rplots16.pdf"              
 [31] "Rplots17.pdf"               "Rplots18.pdf"              
 [33] "Rplots19.pdf"               "Rplots2.pdf"               
 [35] "Rplots20.pdf"               "Rplots21.pdf"              
 [37] "Rplots22.pdf"               "Rplots23.pdf"              
 [39] "Rplots24.pdf"               "Rplots25.pdf"              
 [41] "Rplots26.pdf"               "Rplots27.pdf"              
 [43] "Rplots28.pdf"               "Rplots29.pdf"              
 [45] "Rplots3.pdf"                "Rplots30.pdf"              
 [47] "Rplots31.pdf"               "Rplots32.pdf"              
 [49] "Rplots33.pdf"               "Rplots34.pdf"              
 [51] "Rplots35.pdf"               "Rplots36.pdf"              
 [53] "Rplots37.pdf"               "Rplots38.pdf"              
 [55] "Rplots39.pdf"               "Rplots4.pdf"               
 [57] "Rplots40.pdf"               "Rplots41.pdf"              
 [59] "Rplots42.pdf"               "Rplots43.pdf"              
 [61] "Rplots44.pdf"               "Rplots45.pdf"              
 [63] "Rplots5.pdf"                "Rplots6.pdf"               
 [65] "Rplots7.pdf"                "Rplots8.pdf"               
 [67] "Rplots9.pdf"                "WinUnicode.dat"            
 [69] "annotation.R"               "any-all.R"                 
 [71] "any-all.Rout"               "any-all.Rout.save"         
 [73] "arima.rda"                  "arith-true.R"              
 [75] "arith-true.Rout"            "arith-true.Rout.save"      
 [77] "arith.R"                    "arith.Rout"                
 [79] "arith.Rout.save"            "array-subset.R"            
 [81] "array-subset.Rout"          "boot.Rcheck"               
 [83] "class.Rcheck"               "cluster.Rcheck"            
 [85] "codetools.Rcheck"           "complex.R"                 
 [87] "complex.Rout"               "complex.Rout.save"         
 [89] "d-p-q-r-tests.R"            "d-p-q-r-tests.Rout"        
 [91] "d-p-q-r-tests.Rout.save"    "data"                      
 [93] "datasets.R"                 "datasets.Rout"             
 [95] "datasets.Rout.save"         "datetime.R"                
 [97] "datetime.Rout"              "datetime.Rout.save"        
 [99] "datetime2.R"                "datetime2.Rout"            
[101] "datetime2.Rout.save"        "demos.R"                   
[103] "demos.Rout"                 "demos.Rout.save"           
[105] "demos2.R"                   "demos2.Rout"               
[107] "encodings.R"                "eval-etc.R"                
[109] "eval-etc.Rout"              "eval-etc.Rout.save"        
[111] "ex.gz"                      "exNSS4_1.1.tar.gz"         
[113] "foreign.Rcheck"             "gct-foot.R"                
[115] "iec60559.R"                 "iec60559.Rout"             
[117] "iec60559.Rout.save"         "integer(0)"                
[119] "internet.R"                 "internet.Rout"             
[121] "internet.Rout.save"         "internet2.R"               
[123] "internet2.Rout"             "isas-tests.Rin"            
[125] "isas-tests.Rout"            "isas-tests.Rout.save"      
[127] "lapack.R"                   "lapack.Rout"               
[129] "lapack.Rout.save"           "lattice.Rcheck"            
[131] "libcurl.R"                  "libcurl.Rout"              
[133] "lm-tests.R"                 "lm-tests.Rout"             
[135] "lm-tests.Rout.save"         "method-dispatch.R"         
[137] "method-dispatch.Rout"       "method-dispatch.Rout.save" 
[139] "mgcv.Rcheck"                "myTst2"                    
[141] "nanbug.rda"                 "nlme.Rcheck"               
[143] "nnet.Rcheck"                "no-segfault.R"             
[145] "no-segfault.Rin"            "no-segfault.Rout"          
[147] "ok-errors.R"                "ok-errors.Rout"            
[149] "ok-errors.Rout.save"        "p-qbeta-strict-tst.R"      
[151] "p-qbeta-strict-tst.Rout"    "p-r-random-tests.R"        
[153] "p-r-random-tests.Rout"      "p-r-random-tests.Rout.save"
[155] "pkgA_1.2.tar.gz"            "pkgB_1.0.tar.gz"           
[157] "primitives.R"               "primitives.Rout"           
[159] "print-tests.R"              "print-tests.Rout"          
[161] "print-tests.Rout.save"      "r-strict-tst.R"            
[163] "r-strict-tst.Rout"          "reg-BLAS.R"                
[165] "reg-BLAS.Rout"              "reg-IO.R"                  
[167] "reg-IO.Rout"                "reg-IO.Rout.save"          
[169] "reg-IO2.R"                  "reg-IO2.Rout"              
[171] "reg-IO2.Rout.save"          "reg-S4.R"                  
[173] "reg-S4.Rout"                "reg-S4.Rout.save"          
[175] "reg-examples-1.pdf"         "reg-examples-2.pdf"        
[177] "reg-examples-3.pdf"         "reg-examples1.R"           
[179] "reg-examples1.Rout"         "reg-examples2.R"           
[181] "reg-examples2.Rout"         "reg-examples3.R"           
[183] "reg-examples3.Rout"         "reg-examples3.Rout.save"   
[185] "reg-packages.R"             "reg-packages.Rout"         
[187] "reg-plot-latin1.R"          "reg-plot-latin1.Rout"      
[189] "reg-plot-latin1.pdf"        "reg-plot-latin1.pdf.save"  
[191] "reg-plot.R"                 "reg-plot.Rout"             
[193] "reg-plot.Rout.save"         "reg-plot.pdf"              
[195] "reg-plot.pdf.save"          "reg-tests-1a.R"            
[197] "reg-tests-1a.Rout"          "reg-tests-1a.pdf"          
[199] "reg-tests-1b.R"             "reg-tests-1b.Rout"         
[201] "reg-tests-1b.pdf"           "reg-tests-1c.R"            
[203] "reg-tests-1c.Rout"          "reg-tests-1c.pdf"          
[205] "reg-tests-2.R"              "reg-tests-2.Rout"          
[207] "reg-tests-2.Rout.save"      "reg-tests-2.pdf"           
[209] "reg-tests-3.R"              "reg-tests-3.Rout"          
[211] "reg-tests-3.Rout.save"      "reg-tests-3.pdf"           
[213] "reg-win.R"                  "rpart.Rcheck"              
[215] "simple-true.R"              "simple-true.Rout"          
[217] "simple-true.Rout.save"      "spatial.Rcheck"            
[219] "survival.Rcheck"            "test-system.R"             
[221] "test-system.Rout.save"      "test-system2.c"            
[223] "testit-Ex.R.save"           "testit.Rd"                 
[225] "testit.html.save"           "testit.tex.save"           
[227] "testit.txt.save"            "utf8-regex.R"              
[229] "utf8-regex.Rout"            "ver20-Ex.R.save"           
[231] "ver20.Rd"                   "ver20.html.save"           
[233] "ver20.tex.save"             "ver20.txt.save"            
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'path' argument
> f(list())
Error in f(list()) : invalid 'path' argument
> f(l0)
Error in f(l0) : invalid 'path' argument
> f(c0)
character(0)
> f(m0)
Error in f(m0) : invalid 'path' argument
> f(df0)
Error in f(df0) : invalid 'path' argument
> f(FALSE)
Error in f(FALSE) : invalid 'path' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'path' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'path' argument
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : invalid 'path' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'path' argument
> 
> ##  list2env  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("list2env", pos = 'package:base')
> f()
Error in new.env(hash = hash, parent = parent, size = size) : 
  argument "x" is missing, with no default
Calls: f -> new.env
> f(NULL)
Error in f(NULL) : first argument must be a named list
> f(,NULL)
Error in new.env(hash = hash, parent = parent, size = size) : 
  argument "x" is missing, with no default
Calls: f -> new.env
> f(NULL,NULL)
Error in f(NULL, NULL) : first argument must be a named list
> f(list())
<environment: 0x2923c48>
> f(l0)
Error in f(l0) : first argument must be a named list
> f(c0)
Error in f(c0) : first argument must be a named list
> f(m0)
Error in f(m0) : first argument must be a named list
> f(df0)
<environment: 0x2926a90>
> f(FALSE)
Error in f(FALSE) : first argument must be a named list
> f(list(),list())
Error in f(list(), list()) : 'envir' argument must be an environment
> f(l0,l0)
Error in f(l0, l0) : first argument must be a named list
> f(c0,c0)
Error in f(c0, c0) : first argument must be a named list
> f(df0,df0)
Error in f(df0, df0) : 'envir' argument must be an environment
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : first argument must be a named list
> 
> ##  load  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("load", pos = 'package:base')
> f()
Error in f() : argument "file" is missing, with no default
> f(NULL)
Error in f(NULL) : bad 'file' argument
> f(,NULL)
Error in f(, NULL) : argument "file" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : bad 'file' argument
> f(list())
Error in f(list()) : bad 'file' argument
> f(l0)
Error in f(l0) : bad 'file' argument
> f(c0)
Error in gzfile(file) : invalid 'description' argument
Calls: f -> gzfile
> f(m0)
Error in f(m0) : bad 'file' argument
> f(df0)
Error in f(df0) : bad 'file' argument
> f(FALSE)
Error in f(FALSE) : bad 'file' argument
> f(list(),list())
Error in f(list(), list()) : bad 'file' argument
> f(l0,l0)
Error in f(l0, l0) : bad 'file' argument
> f(c0,c0)
Error in gzfile(file) : invalid 'description' argument
Calls: f -> gzfile
> f(df0,df0)
Error in f(df0, df0) : bad 'file' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : bad 'file' argument
> 
> ##  loadNamespace  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("loadNamespace", pos = 'package:base')
> f()
Error in f() : argument "package" is missing, with no default
> f(NULL)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "package" is missing, with no default
> f(NULL,NULL)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(list())
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(l0)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(c0)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(m0)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(df0)
Error in f(df0) : there is no package called 'integer(0)'
> f(FALSE)
Error in f(FALSE) : there is no package called 'FALSE'
> f(list(),list())
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(l0,l0)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(c0,c0)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(df0,df0)
Error in f(df0, df0) : there is no package called 'integer(0)'
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : there is no package called 'FALSE'
> 
> ##  loadedNamespaces  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("loadedNamespaces", pos = 'package:base')
> f()
[1] "graphics"  "utils"     "grDevices" "stats"     "datasets"  "methods"  
[7] "base"     
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  loadingNamespaceInfo  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("loadingNamespaceInfo", pos = 'package:base')
> f()
Error in dynGet("__LoadingNamespaceInfo__", stop("not loading a namespace")) : 
  not loading a namespace
Calls: f -> dynGet
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  local  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("local", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
Error in eval(quote(l0), l0) : invalid 'envir' argument of type 'logical'
Calls: f -> eval.parent -> eval -> eval -> eval
> f(c0,c0)
Error in eval(quote(c0), c0) : 
  invalid 'envir' argument of type 'character'
Calls: f -> eval.parent -> eval -> eval -> eval
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in eval(quote(FALSE), FALSE) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> eval.parent -> eval -> eval -> eval
> 
> ##  lockBinding  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("lockBinding", pos = 'package:base')
> f()
Error in f() : argument "sym" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "env" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "sym" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : not a symbol
> f(list())
Error in f(list()) : argument "env" is missing, with no default
> f(l0)
Error in f(l0) : argument "env" is missing, with no default
> f(c0)
Error in as.name(sym) : invalid data of mode 'character' (too short)
Calls: f -> as.name
> f(m0)
Error in f(m0) : argument "env" is missing, with no default
> f(df0)
Error in f(df0) : argument "env" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "env" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : not a symbol
> f(l0,l0)
Error in f(l0, l0) : not a symbol
> f(c0,c0)
Error in as.name(sym) : invalid data of mode 'character' (too short)
Calls: f -> as.name
> f(df0,df0)
Error in f(df0, df0) : not a symbol
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : not a symbol
> 
> ##  lockEnvironment  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("lockEnvironment", pos = 'package:base')
> f()
Error in f() : argument "env" is missing, with no default
> f(NULL)
Error in f(NULL) : not an environment
> f(,NULL)
Error in f(, NULL) : argument "env" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : not an environment
> f(list())
Error in f(list()) : not an environment
> f(l0)
Error in f(l0) : not an environment
> f(c0)
Error in f(c0) : not an environment
> f(m0)
Error in f(m0) : not an environment
> f(df0)
Error in f(df0) : not an environment
> f(FALSE)
Error in f(FALSE) : not an environment
> f(list(),list())
Error in f(list(), list()) : not an environment
> f(l0,l0)
Error in f(l0, l0) : not an environment
> f(c0,c0)
Error in f(c0, c0) : not an environment
> f(df0,df0)
Error in f(df0, df0) : not an environment
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : not an environment
> 
> ##  log  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("log", pos = 'package:base')
> f()
Error: argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error: argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : non-numeric argument to mathematical function
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] -Inf
> f(list(),list())
Error in f(list(), list()) : 
  non-numeric argument to mathematical function
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in f(c0, c0) : non-numeric argument to mathematical function
> f(df0,df0)
Error in Math.data.frame(df0, df0) : 
  non-numeric variable in data frame: c0
> f(FALSE,FALSE)
[1] NaN
Warning message:
NaNs produced 
> 
> ##  log10  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("log10", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'log10' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'log10' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] -Inf
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'log10' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'log10' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'log10' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'log10' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'log10' which requires 1
> 
> ##  log1p  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("log1p", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'log1p' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'log1p' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'log1p' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'log1p' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'log1p' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'log1p' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'log1p' which requires 1
> 
> ##  log2  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("log2", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'log2' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'log2' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] -Inf
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'log2' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'log2' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'log2' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'log2' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'log2' which requires 1
> 
> ##  logb  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("logb", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in log(x) : non-numeric argument to mathematical function
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in log(x, base) : non-numeric argument to mathematical function
Calls: f
> f(list())
Error in log(x) : non-numeric argument to mathematical function
Calls: f
> f(l0)
numeric(0)
> f(c0)
Error in log(x) : non-numeric argument to mathematical function
Calls: f
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(x) : non-numeric variable in data frame: c0
Calls: f -> Math.data.frame
> f(FALSE)
[1] -Inf
> f(list(),list())
Error in log(x, base) : non-numeric argument to mathematical function
Calls: f
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in log(x, base) : non-numeric argument to mathematical function
Calls: f
> f(df0,df0)
Error in Math.data.frame(x, base) : 
  non-numeric variable in data frame: c0
Calls: f -> Math.data.frame
> f(FALSE,FALSE)
[1] NaN
Warning message:
In f(FALSE, FALSE) : NaNs produced
> 
> ##  logical  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("logical", pos = 'package:base')
> f()
logical(0)
> f(NULL)
Error in f(NULL) : invalid 'length' argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'length' argument
> f(l0)
Error in f(l0) : invalid 'length' argument
> f(c0)
Error in f(c0) : invalid 'length' argument
> f(m0)
Error in f(m0) : invalid 'length' argument
> f(df0)
Error in f(df0) : invalid 'length' argument
> f(FALSE)
Error in f(FALSE) : invalid 'length' argument
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  lower.tri  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("lower.tri", pos = 'package:base')
> f()
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(list())
logical(0)
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
logical(0)
> f(df0)
logical(0)
> f(FALSE)
      [,1]
[1,] FALSE
> f(list(),list())
Error in if (diag) row(x) >= col(x) else row(x) > col(x) : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (diag) row(x) >= col(x) else row(x) > col(x) : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (diag) row(x) >= col(x) else row(x) > col(x) : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in if (diag) row(x) >= col(x) else row(x) > col(x) : 
  argument is not interpretable as logical
Calls: f
> f(FALSE,FALSE)
      [,1]
[1,] FALSE
> 
> ##  ls  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("ls", pos = 'package:base')
> f()
[1] ""    "c0"  "df0" "f"   "l0"  "m0" 
> f(NULL)
Error in as.environment(pos) : using 'as.environment(NULL)' is defunct
Calls: f
> f(,NULL)
Error in as.environment(pos) : using 'as.environment(NULL)' is defunct
Calls: f
> f(NULL,NULL)
Error in as.environment(pos) : using 'as.environment(NULL)' is defunct
Calls: f
> f(list())
character(0)
> f(l0)
Error in as.environment(pos) : invalid object for 'as.environment'
Calls: f
> f(c0)
Error in as.environment(pos) : no item called "NA" on the search list
Calls: f
> f(m0)
Error in as.environment(pos) : invalid 'pos' argument
Calls: f
> f(df0)
[1] "c0"
> f(FALSE)
Error in as.environment(pos) : invalid object for 'as.environment'
Calls: f
> f(list(),list())
character(0)
> f(l0,l0)
Error in as.environment(pos) : invalid object for 'as.environment'
Calls: f
> f(c0,c0)
Error in as.environment(pos) : no item called "NA" on the search list
Calls: f
> f(df0,df0)
[1] "c0"
> f(FALSE,FALSE)
Error in as.environment(pos) : invalid object for 'as.environment'
Calls: f
> 
> ##  make.names  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("make.names", pos = 'package:base')
> f()
Error in f() : argument "names" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument "names" is missing, with no default
> f(NULL,NULL)
Error in if (unique) { : argument is of length zero
Calls: f
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "integer.0."
> f(FALSE)
[1] "FALSE."
> f(list(),list())
Error in if (unique) { : argument is of length zero
Calls: f
> f(l0,l0)
Error in if (unique) { : argument is of length zero
Calls: f
> f(c0,c0)
Error in if (unique) { : argument is of length zero
Calls: f
> f(df0,df0)
Error in if (unique) { : argument is not interpretable as logical
Calls: f
> f(FALSE,FALSE)
[1] "FALSE."
> 
> ##  make.unique  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("make.unique", pos = 'package:base')
> f()
Error in f() : argument "names" is missing, with no default
> f(NULL)
Error in f(NULL) : 'names' must be a character vector
> f(,NULL)
Error in f(, NULL) : argument "names" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'names' must be a character vector
> f(list())
Error in f(list()) : 'names' must be a character vector
> f(l0)
Error in f(l0) : 'names' must be a character vector
> f(c0)
character(0)
> f(m0)
Error in f(m0) : 'names' must be a character vector
> f(df0)
Error in f(df0) : 'names' must be a character vector
> f(FALSE)
Error in f(FALSE) : 'names' must be a character vector
> f(list(),list())
Error in f(list(), list()) : 'names' must be a character vector
> f(l0,l0)
Error in f(l0, l0) : 'names' must be a character vector
> f(c0,c0)
Error in f(c0, c0) : 'sep' must be a character string
> f(df0,df0)
Error in f(df0, df0) : 'names' must be a character vector
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'names' must be a character vector
> 
> ##  makeActiveBinding  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("makeActiveBinding", pos = 'package:base')
> f()
Error in f() : argument "sym" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "fun" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "sym" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "env" is missing, with no default
> f(list())
Error in f(list()) : argument "fun" is missing, with no default
> f(l0)
Error in f(l0) : argument "fun" is missing, with no default
> f(c0)
Error in as.name(sym) : invalid data of mode 'character' (too short)
Calls: f -> as.name
> f(m0)
Error in f(m0) : argument "fun" is missing, with no default
> f(df0)
Error in f(df0) : argument "fun" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "fun" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "env" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "env" is missing, with no default
> f(c0,c0)
Error in as.name(sym) : invalid data of mode 'character' (too short)
Calls: f -> as.name
> f(df0,df0)
Error in f(df0, df0) : argument "env" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "env" is missing, with no default
> 
> ##  mapply  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("mapply", pos = 'package:base')
> f()
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(NULL)
Error in match.fun(FUN) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(,NULL)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(NULL,NULL)
Error in match.fun(FUN) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(list())
Error in match.fun(FUN) : 'list()' is not a function, character or symbol
Calls: f -> match.fun
> f(l0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'l0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(c0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'c0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(m0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'm0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(df0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'df0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(FALSE)
Error in match.fun(FUN) : 'FALSE' is not a function, character or symbol
Calls: f -> match.fun
> f(list(),list())
Error in match.fun(FUN) : 'list()' is not a function, character or symbol
Calls: f -> match.fun
> f(l0,l0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'l0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(c0,c0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'c0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(df0,df0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'df0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(FALSE,FALSE)
Error in match.fun(FUN) : 'FALSE' is not a function, character or symbol
Calls: f -> match.fun
> 
> ##  margin.table  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("margin.table", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'x' is not an array
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'x' is not an array
> f(list())
Error in f(list()) : 'x' is not an array
> f(l0)
Error in f(l0) : 'x' is not an array
> f(c0)
Error in f(c0) : 'x' is not an array
> f(m0)
[1] 0
> f(df0)
Error in f(df0) : 'x' is not an array
> f(FALSE)
Error in f(FALSE) : 'x' is not an array
> f(list(),list())
Error in f(list(), list()) : 'x' is not an array
> f(l0,l0)
Error in f(l0, l0) : 'x' is not an array
> f(c0,c0)
Error in f(c0, c0) : 'x' is not an array
> f(df0,df0)
Error in f(df0, df0) : 'x' is not an array
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'x' is not an array
> 
> ##  mat.or.vec  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("mat.or.vec", pos = 'package:base')
> f()
Error in f() : argument "nc" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "nc" is missing, with no default
> f(,NULL)
Error in if (nc == 1L) numeric(nr) else matrix(0, nr, nc) : 
  argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (nc == 1L) numeric(nr) else matrix(0, nr, nc) : 
  argument is of length zero
Calls: f
> f(list())
Error in f(list()) : argument "nc" is missing, with no default
> f(l0)
Error in f(l0) : argument "nc" is missing, with no default
> f(c0)
Error in f(c0) : argument "nc" is missing, with no default
> f(m0)
Error in f(m0) : argument "nc" is missing, with no default
> f(df0)
Error in f(df0) : argument "nc" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "nc" is missing, with no default
> f(list(),list())
Error in if (nc == 1L) numeric(nr) else matrix(0, nr, nc) : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (nc == 1L) numeric(nr) else matrix(0, nr, nc) : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (nc == 1L) numeric(nr) else matrix(0, nr, nc) : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
<0 x 0 matrix>
> 
> ##  match  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("match", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "table" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
integer(0)
> f(list())
Error in f(list()) : argument "table" is missing, with no default
> f(l0)
Error in f(l0) : argument "table" is missing, with no default
> f(c0)
Error in f(c0) : argument "table" is missing, with no default
> f(m0)
Error in f(m0) : argument "table" is missing, with no default
> f(df0)
Error in f(df0) : argument "table" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "table" is missing, with no default
> f(list(),list())
integer(0)
> f(l0,l0)
integer(0)
> f(c0,c0)
integer(0)
> f(df0,df0)
[1] 1
> f(FALSE,FALSE)
[1] 1
> 
> ##  match.arg  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("match.arg", pos = 'package:base')
> f()
Error in f() : argument "arg" is missing, with no default
> f(NULL)
Error in formal.args[[as.character(substitute(arg))]] : 
  attempt to select less than one element in get1index
Calls: f -> eval
> f(,NULL)
Error in f(, NULL) : argument "arg" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : 'arg' must be NULL or a character vector
> f(l0)
Error in f(l0) : 'arg' must be NULL or a character vector
> f(c0)
Error in f(c0) : 'arg' should be one of 
> f(m0)
Error in f(m0) : 'arg' must be NULL or a character vector
> f(df0)
Error in f(df0) : 'arg' must be NULL or a character vector
> f(FALSE)
Error in f(FALSE) : 'arg' must be NULL or a character vector
> f(list(),list())
Error in f(list(), list()) : 'arg' must be NULL or a character vector
> f(l0,l0)
Error in f(l0, l0) : 'arg' must be NULL or a character vector
> f(c0,c0)
[1] NA
> f(df0,df0)
Error in f(df0, df0) : 'arg' must be NULL or a character vector
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'arg' must be NULL or a character vector
> 
> ##  match.call  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("match.call", pos = 'package:base')
> f()
f()
> f(NULL)
f(definition = NULL)
> f(,NULL)
Error in f(, NULL) : invalid 'call' argument
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'call' argument
> f(list())
Error in f(list()) : invalid 'definition' argument
> f(l0)
Error in f(l0) : invalid 'definition' argument
> f(c0)
Error in f(c0) : invalid 'definition' argument
> f(m0)
Error in f(m0) : invalid 'definition' argument
> f(df0)
Error in f(df0) : invalid 'definition' argument
> f(FALSE)
Error in f(FALSE) : invalid 'definition' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'call' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'call' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'call' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'call' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'call' argument
> 
> ##  match.fun  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("match.fun", pos = 'package:base')
> f()
Error in f() : argument "FUN" is missing, with no default
> f(NULL)
Error in f(NULL) : 'NULL' is not a function, character or symbol
> f(,NULL)
Error in f(, NULL) : argument "FUN" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'NULL' is not a function, character or symbol
> f(list())
Error in f(list()) : 'list()' is not a function, character or symbol
> f(l0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'l0' of mode 'function' was not found
Calls: f -> get
> f(c0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'c0' of mode 'function' was not found
Calls: f -> get
> f(m0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'm0' of mode 'function' was not found
Calls: f -> get
> f(df0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'df0' of mode 'function' was not found
Calls: f -> get
> f(FALSE)
Error in f(FALSE) : 'FALSE' is not a function, character or symbol
> f(list(),list())
Error in f(list(), list()) : 
  'list()' is not a function, character or symbol
> f(l0,l0)
Error in if (descend) FUN <- get(as.character(FUN), mode = "function",  : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (descend) FUN <- get(as.character(FUN), mode = "function",  : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in if (descend) FUN <- get(as.character(FUN), mode = "function",  : 
  argument is not interpretable as logical
Calls: f
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'FALSE' is not a function, character or symbol
> 
> ##  matrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("matrix", pos = 'package:base')
> f()
     [,1]
[1,]   NA
> f(NULL)
Error in f(NULL) : 'data' must be of a vector type, was 'NULL'
> f(,NULL)
Error in f(, NULL) : non-numeric matrix extent
> f(NULL,NULL)
Error in f(NULL, NULL) : 'data' must be of a vector type, was 'NULL'
> f(list())
     [,1]
> f(l0)
     [,1]
> f(c0)
     [,1]
> f(m0)
     [,1]
> f(df0)
     [,1]    
[1,] factor,0
> f(FALSE)
      [,1]
[1,] FALSE
> f(list(),list())
Error in f(list(), list()) : non-numeric matrix extent
> f(l0,l0)
Error in f(l0, l0) : invalid 'nrow' value (too large or NA)
> f(c0,c0)
Error in f(c0, c0) : non-numeric matrix extent
> f(df0,df0)
Error in f(df0, df0) : non-numeric matrix extent
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : data is too long
> 
> ##  max  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("max", pos = 'package:base')
> f()
[1] -Inf
Warning message:
In f() : no non-missing arguments to max; returning -Inf
> f(NULL)
[1] -Inf
Warning message:
In f(NULL) : no non-missing arguments to max; returning -Inf
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
[1] -Inf
Warning message:
In f(NULL, NULL) : no non-missing arguments to max; returning -Inf
> f(list())
Error in f(list()) : invalid 'type' (list) of argument
> f(l0)
[1] -Inf
Warning message:
In f(l0) : no non-missing arguments to max; returning -Inf
> f(c0)
[1] NA
Warning message:
In f(c0) : no non-missing arguments, returning NA
> f(m0)
[1] -Inf
Warning message:
In f(m0) : no non-missing arguments to max; returning -Inf
> f(df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : invalid 'type' (list) of argument
> f(l0,l0)
[1] -Inf
Warning message:
In f(l0, l0) : no non-missing arguments to max; returning -Inf
> f(c0,c0)
[1] NA
Warning message:
In f(c0, c0) : no non-missing arguments, returning NA
> f(df0,df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE,FALSE)
[1] 0
> 
> ##  max.col  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("max.col", pos = 'package:base')
> f()
Error in as.matrix(m) : argument "m" is missing, with no default
Calls: f -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(m) : argument "m" is missing, with no default
Calls: f -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
integer(0)
> f(FALSE)
[1] 1
> f(list(),list())
Error in match.arg(ties.method) : 
  'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(l0,l0)
Error in match.arg(ties.method) : 
  'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(c0,c0)
Error in match.arg(ties.method) : 
  'arg' should be one of "random", "first", "last"
Calls: f -> match.arg
> f(df0,df0)
Error in match.arg(ties.method) : 
  'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(FALSE,FALSE)
Error in match.arg(ties.method) : 
  'arg' must be NULL or a character vector
Calls: f -> match.arg
> 
> ##  mean  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("mean", pos = 'package:base')
> f()
Error in mean.default() : argument "x" is missing, with no default
Calls: f -> mean.default
> f(NULL)
[1] NA
Warning message:
In mean.default(NULL) : argument is not numeric or logical: returning NA
> f(,NULL)
Error in mean.default(, NULL) : argument "x" is missing, with no default
Calls: f -> mean.default
> f(NULL,NULL)
[1] NA
Warning message:
In mean.default(NULL, NULL) :
  argument is not numeric or logical: returning NA
> f(list())
[1] NA
Warning message:
In mean.default(list()) : argument is not numeric or logical: returning NA
> f(l0)
[1] NaN
> f(c0)
[1] NA
Warning message:
In mean.default(c0) : argument is not numeric or logical: returning NA
> f(m0)
[1] NaN
> f(df0)
[1] NA
Warning message:
In mean.default(df0) : argument is not numeric or logical: returning NA
> f(FALSE)
[1] 0
> f(list(),list())
[1] NA
Warning message:
In mean.default(list(), list()) :
  argument is not numeric or logical: returning NA
> f(l0,l0)
Error in mean.default(l0, l0) : 'trim' must be numeric of length one
Calls: f -> mean.default
> f(c0,c0)
[1] NA
Warning message:
In mean.default(c0, c0) : argument is not numeric or logical: returning NA
> f(df0,df0)
[1] NA
Warning message:
In mean.default(df0, df0) :
  argument is not numeric or logical: returning NA
> f(FALSE,FALSE)
Error in mean.default(FALSE, FALSE) : 
  'trim' must be numeric of length one
Calls: f -> mean.default
> 
> ##  mean.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("mean.Date", pos = 'package:base')
> f()
Error in mean(unclass(x), ...) : argument "x" is missing, with no default
Calls: f -> structure -> mean
> f(NULL)
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(,NULL)
Error in mean(unclass(x), ...) : argument "x" is missing, with no default
Calls: f -> structure -> mean
> f(NULL,NULL)
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(list())
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(l0)
[1] NA
> f(c0)
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(m0)
[1] NA
> f(df0)
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(FALSE)
[1] "1970-01-01"
> f(list(),list())
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(l0,l0)
Error in mean.default(unclass(x), ...) : 
  'trim' must be numeric of length one
Calls: f -> structure -> mean -> mean.default
> f(c0,c0)
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(df0,df0)
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(FALSE,FALSE)
Error in mean.default(unclass(x), ...) : 
  'trim' must be numeric of length one
Calls: f -> structure -> mean -> mean.default
> 
> ##  mean.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("mean.POSIXct", pos = 'package:base')
> f()
Error in structure(xx, class = c("POSIXct", "POSIXt"), tzone = tz) : 
  argument "x" is missing, with no default
Calls: f -> .POSIXct -> structure
> f(NULL)
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(,NULL)
Error in structure(xx, class = c("POSIXct", "POSIXt"), tzone = tz) : 
  argument "x" is missing, with no default
Calls: f -> .POSIXct -> structure
> f(NULL,NULL)
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(list())
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(l0)
[1] NA
> f(c0)
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(m0)
[1] NA
> f(df0)
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(FALSE)
[1] "1969-12-31 19:00:00 EST"
> f(list(),list())
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(l0,l0)
Error in mean.default(unclass(x), ...) : 
  'trim' must be numeric of length one
Calls: f -> .POSIXct -> structure -> mean -> mean.default
> f(c0,c0)
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(df0,df0)
[1] NA
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(FALSE,FALSE)
Error in mean.default(unclass(x), ...) : 
  'trim' must be numeric of length one
Calls: f -> .POSIXct -> structure -> mean -> mean.default
> 
> ##  mean.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("mean.POSIXlt", pos = 'package:base')
> f()
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXlt -> mean -> as.POSIXct
> f(NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.POSIXlt -> mean -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXlt -> mean -> as.POSIXct
> f(NULL,NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.POSIXlt -> mean -> as.POSIXct -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.POSIXlt -> mean -> as.POSIXct -> as.POSIXct.default
> f(l0)
[1] NA
> f(c0)
[1] NA
> f(m0)
Error in as.POSIXct.numeric(x) : 'origin' must be supplied
Calls: f ... as.POSIXlt -> mean -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.POSIXlt -> mean -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.POSIXlt -> mean -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.POSIXlt -> mean -> as.POSIXct -> as.POSIXct.default
> f(l0,l0)
Error in mean.default(unclass(x), ...) : 
  'trim' must be numeric of length one
Calls: f ... mean.POSIXct -> .POSIXct -> structure -> mean -> mean.default
> f(c0,c0)
Error in mean.default(unclass(x), ...) : 
  'trim' must be numeric of length one
Calls: f ... mean.POSIXct -> .POSIXct -> structure -> mean -> mean.default
> f(df0,df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.POSIXlt -> mean -> as.POSIXct -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... as.POSIXlt -> mean -> as.POSIXct -> as.POSIXct.default
> 
> ##  mean.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("mean.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NA
Warning message:
In f(NULL) : argument is not numeric or logical: returning NA
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NA
Warning message:
In f(NULL, NULL) : argument is not numeric or logical: returning NA
> f(list())
[1] NA
Warning message:
In f(list()) : argument is not numeric or logical: returning NA
> f(l0)
[1] NaN
> f(c0)
[1] NA
Warning message:
In f(c0) : argument is not numeric or logical: returning NA
> f(m0)
[1] NaN
> f(df0)
[1] NA
Warning message:
In f(df0) : argument is not numeric or logical: returning NA
> f(FALSE)
[1] 0
> f(list(),list())
[1] NA
Warning message:
In f(list(), list()) : argument is not numeric or logical: returning NA
> f(l0,l0)
Error in f(l0, l0) : 'trim' must be numeric of length one
> f(c0,c0)
[1] NA
Warning message:
In f(c0, c0) : argument is not numeric or logical: returning NA
> f(df0,df0)
[1] NA
Warning message:
In f(df0, df0) : argument is not numeric or logical: returning NA
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'trim' must be numeric of length one
> 
> ##  mean.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("mean.difftime", pos = 'package:base')
> f()
Error in structure(xx, units = units, class = "difftime") : 
  argument "x" is missing, with no default
Calls: f -> .difftime -> structure
> f(NULL)
Time difference of NA 
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(,NULL)
Error in structure(xx, units = units, class = "difftime") : 
  argument "x" is missing, with no default
Calls: f -> .difftime -> structure
> f(NULL,NULL)
Time difference of NA 
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(list())
Time difference of NA 
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(l0)
Time difference of NaN 
> f(c0)
Time difference of NA 
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(m0)
Time difference of NaN 
> f(df0)
Time difference of NA 
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(FALSE)
Time difference of 0 
> f(list(),list())
Time difference of NA 
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(l0,l0)
Error in mean.default(unclass(x), ...) : 
  'trim' must be numeric of length one
Calls: f -> .difftime -> structure -> mean -> mean.default
> f(c0,c0)
Time difference of NA 
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(df0,df0)
Time difference of NA 
Warning message:
In mean.default(unclass(x), ...) :
  argument is not numeric or logical: returning NA
> f(FALSE,FALSE)
Error in mean.default(unclass(x), ...) : 
  'trim' must be numeric of length one
Calls: f -> .difftime -> structure -> mean -> mean.default
> 
> ##  mem.limits  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("mem.limits", pos = 'package:base')
> f()
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(NULL)
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(,NULL)
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(NULL,NULL)
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(list())
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(l0)
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(c0)
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(m0)
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(df0)
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(FALSE)
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(list(),list())
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(l0,l0)
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(c0,c0)
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(df0,df0)
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> f(FALSE,FALSE)
Error: 'f' is defunct.
Use 'gc' instead.
See help("Defunct")
> 
> ##  memCompress  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("memCompress", pos = 'package:base')
> f()
Error in f() : argument "from" is missing, with no default
> f(NULL)
Error in f(NULL) : 'from' must be raw or character
> f(,NULL)
Error in f(, NULL) : argument "from" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'from' must be raw or character
> f(list())
Error in f(list()) : 'from' must be raw or character
> f(l0)
Error in f(l0) : 'from' must be raw or character
> f(c0)
[1] 78 9c 03 00 00 00 00 01
> f(m0)
Error in f(m0) : 'from' must be raw or character
> f(df0)
Error in f(df0) : 'from' must be raw or character
> f(FALSE)
Error in f(FALSE) : 'from' must be raw or character
> f(list(),list())
Error in f(list(), list()) : 'from' must be raw or character
> f(l0,l0)
Error in f(l0, l0) : 'from' must be raw or character
> f(c0,c0)
Error in match.arg(type) : 
  'arg' should be one of "gzip", "bzip2", "xz", "none"
Calls: f -> match -> match.arg
> f(df0,df0)
Error in f(df0, df0) : 'from' must be raw or character
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'from' must be raw or character
> 
> ##  memDecompress  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("memDecompress", pos = 'package:base')
> f()
Error in f() : argument "from" is missing, with no default
> f(NULL)
Error in f(NULL) : 'from' must be raw or character
> f(,NULL)
Error in f(, NULL) : argument "from" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'from' must be raw or character
> f(list())
Error in f(list()) : 'from' must be raw or character
> f(l0)
Error in f(l0) : 'from' must be raw or character
> f(c0)
Error in f(c0) : 'from' must be raw or character
> f(m0)
Error in f(m0) : 'from' must be raw or character
> f(df0)
Error in f(df0) : 'from' must be raw or character
> f(FALSE)
Error in f(FALSE) : 'from' must be raw or character
> f(list(),list())
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match -> match.arg
> f(l0,l0)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match -> match.arg
> f(c0,c0)
Error in match.arg(type) : 
  'arg' should be one of "unknown", "gzip", "bzip2", "xz", "none"
Calls: f -> match -> match.arg
> f(df0,df0)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match -> match.arg
> f(FALSE,FALSE)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match -> match.arg
> 
> ##  memory.profile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("memory.profile", pos = 'package:base')
> f()
       NULL      symbol    pairlist     closure environment     promise 
          1        7187      140020        3407         557        4280 
   language     special     builtin        char     logical     integer 
      44184          45         670        8563        5949       17255 
     double     complex   character         ...         any        list 
       1430           9       29200           0           0       12940 
 expression    bytecode externalptr     weakref         raw          S4 
          2       10711        1378         460         461         871 
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  merge  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("merge", pos = 'package:base')
> f()
Error in as.data.frame(x) : argument "x" is missing, with no default
Calls: f -> merge.default -> merge -> as.data.frame
> f(NULL)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f ... merge.data.frame -> nrow -> as.data.frame -> as.data.frame
> f(,NULL)
Error in as.data.frame(x) : argument "x" is missing, with no default
Calls: f -> merge.default -> merge -> as.data.frame
> f(NULL,NULL)
data frame with 0 columns and 0 rows
> f(list())
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f ... merge.data.frame -> nrow -> as.data.frame -> as.data.frame
> f(l0)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f ... merge.data.frame -> nrow -> as.data.frame -> as.data.frame
> f(c0)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f ... merge.data.frame -> nrow -> as.data.frame -> as.data.frame
> f(m0)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f ... merge.data.frame -> nrow -> as.data.frame -> as.data.frame
> f(df0)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f -> merge.data.frame -> nrow -> as.data.frame
> f(FALSE)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f ... merge.data.frame -> nrow -> as.data.frame -> as.data.frame
> f(list(),list())
data frame with 0 columns and 0 rows
> f(l0,l0)
     [,1] [,2]
attr(,"row.names")
integer(0)
> f(c0,c0)
     [,1] [,2]
attr(,"row.names")
integer(0)
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
      x     y
1 FALSE FALSE
> 
> ##  merge.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("merge.data.frame", pos = 'package:base')
> f()
Error in as.data.frame(x) : argument "x" is missing, with no default
Calls: f -> nrow -> as.data.frame
> f(NULL)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f -> nrow -> as.data.frame
> f(,NULL)
Error in as.data.frame(x) : argument "x" is missing, with no default
Calls: f -> nrow -> as.data.frame
> f(NULL,NULL)
data frame with 0 columns and 0 rows
> f(list())
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f -> nrow -> as.data.frame
> f(l0)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f -> nrow -> as.data.frame
> f(c0)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f -> nrow -> as.data.frame
> f(m0)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f -> nrow -> as.data.frame
> f(df0)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f -> nrow -> as.data.frame
> f(FALSE)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f -> nrow -> as.data.frame
> f(list(),list())
data frame with 0 columns and 0 rows
> f(l0,l0)
     [,1] [,2]
attr(,"row.names")
integer(0)
> f(c0,c0)
     [,1] [,2]
attr(,"row.names")
integer(0)
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
      x     y
1 FALSE FALSE
> 
> ##  merge.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("merge.default", pos = 'package:base')
> f()
Error in as.data.frame(x) : argument "x" is missing, with no default
Calls: f -> merge -> as.data.frame
> f(NULL)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f ... merge.data.frame -> nrow -> as.data.frame -> as.data.frame
> f(,NULL)
Error in as.data.frame(x) : argument "x" is missing, with no default
Calls: f -> merge -> as.data.frame
> f(NULL,NULL)
data frame with 0 columns and 0 rows
> f(list())
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f ... merge.data.frame -> nrow -> as.data.frame -> as.data.frame
> f(l0)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f ... merge.data.frame -> nrow -> as.data.frame -> as.data.frame
> f(c0)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f ... merge.data.frame -> nrow -> as.data.frame -> as.data.frame
> f(m0)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f ... merge.data.frame -> nrow -> as.data.frame -> as.data.frame
> f(df0)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f ... merge.data.frame -> nrow -> as.data.frame -> as.data.frame
> f(FALSE)
Error in as.data.frame(y) : argument "y" is missing, with no default
Calls: f ... merge.data.frame -> nrow -> as.data.frame -> as.data.frame
> f(list(),list())
data frame with 0 columns and 0 rows
> f(l0,l0)
     [,1] [,2]
attr(,"row.names")
integer(0)
> f(c0,c0)
     [,1] [,2]
attr(,"row.names")
integer(0)
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
      x     y
1 FALSE FALSE
> 
> ##  message  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("message", pos = 'package:base')
> f()

> f(NULL)

> f(,NULL)

> f(NULL,NULL)

> f(list())

> f(l0)

> f(c0)

> f(m0)

> f(df0)
integer(0)
> f(FALSE)
FALSE
> f(list(),list())

> f(l0,l0)

> f(c0,c0)

> f(df0,df0)
integer(0)integer(0)
> f(FALSE,FALSE)
FALSEFALSE
> 
> ##  mget  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("mget", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid first argument
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid first argument
> f(list())
Error in f(list()) : invalid first argument
> f(l0)
Error in f(l0) : invalid first argument
> f(c0)
named list()
> f(m0)
Error in f(m0) : invalid first argument
> f(df0)
Error in f(df0) : invalid first argument
> f(FALSE)
Error in f(FALSE) : invalid first argument
> f(list(),list())
Error in f(list(), list()) : invalid first argument
> f(l0,l0)
Error in f(l0, l0) : invalid first argument
> f(c0,c0)
Error in f(c0, c0) : second argument must be an environment
> f(df0,df0)
Error in f(df0, df0) : invalid first argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid first argument
> 
> ##  min  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("min", pos = 'package:base')
> f()
[1] Inf
Warning message:
In f() : no non-missing arguments to min; returning Inf
> f(NULL)
[1] Inf
Warning message:
In f(NULL) : no non-missing arguments to min; returning Inf
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
[1] Inf
Warning message:
In f(NULL, NULL) : no non-missing arguments to min; returning Inf
> f(list())
Error in f(list()) : invalid 'type' (list) of argument
> f(l0)
[1] Inf
Warning message:
In f(l0) : no non-missing arguments to min; returning Inf
> f(c0)
[1] NA
Warning message:
In f(c0) : no non-missing arguments, returning NA
> f(m0)
[1] Inf
Warning message:
In f(m0) : no non-missing arguments to min; returning Inf
> f(df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : invalid 'type' (list) of argument
> f(l0,l0)
[1] Inf
Warning message:
In f(l0, l0) : no non-missing arguments to min; returning Inf
> f(c0,c0)
[1] NA
Warning message:
In f(c0, c0) : no non-missing arguments, returning NA
> f(df0,df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE,FALSE)
[1] 0
> 
> ##  missing  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("missing", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'missing' which requires 1
> f(NULL)
Error in f(NULL) : invalid use of 'missing'
> f(,NULL)
Error in f(, NULL) : 2 arguments passed to 'missing' which requires 1
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'missing' which requires 1
> f(list())
Error in f(list()) : invalid use of 'missing'
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
Error in f(FALSE) : invalid use of 'missing'
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'missing' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'missing' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'missing' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'missing' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'missing' which requires 1
> 
> ##  mode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("mode", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] "list"
> f(l0)
[1] "logical"
> f(c0)
[1] "character"
> f(m0)
[1] "numeric"
> f(df0)
[1] "list"
> f(FALSE)
[1] "logical"
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  mode<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("mode<-", pos = 'package:base')
> f()
Error in storage.mode(x) : argument "x" is missing, with no default
Calls: f -> storage.mode
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in storage.mode(x) : argument "x" is missing, with no default
Calls: f -> storage.mode
> f(NULL,NULL)
Error in if (storage.mode(x) == value) return(x) : 
  argument is of length zero
Calls: f
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in if (storage.mode(x) == value) return(x) : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (storage.mode(x) == value) return(x) : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (storage.mode(x) == value) return(x) : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
Error in get(paste0("as.", value), mode = "function", envir = parent.frame()) : 
  object 'as.FALSE' of mode 'function' was not found
Calls: f -> get
> 
> ##  months  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("months", pos = 'package:base')
> f()
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "character"
Calls: f
> f(df0,df0)
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "data.frame"
Calls: f
> f(FALSE,FALSE)
Error in UseMethod("months") : 
  no applicable method for 'months' applied to an object of class "logical"
Calls: f
> 
> ##  months.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("months.Date", pos = 'package:base')
> f()
Error in format(x, ifelse(abbreviate, "%b", "%B")) : 
  argument "x" is missing, with no default
Calls: f -> format
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in format(x, ifelse(abbreviate, "%b", "%B")) : 
  argument "x" is missing, with no default
Calls: f -> format
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(c0)
Error in format.default(x, ifelse(abbreviate, "%b", "%B")) : 
  invalid 'trim' argument
Calls: f -> format -> format.default
> f(m0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(df0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f ... format -> format.factor -> format -> format.default
> f(FALSE)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(list(),list())
character(0)
> f(l0,l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(c0,c0)
Error in format.default(x, ifelse(abbreviate, "%b", "%B")) : 
  invalid 'trim' argument
Calls: f -> format -> format.default
> f(df0,df0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f ... format -> format.factor -> format -> format.default
> f(FALSE,FALSE)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> 
> ##  months.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("months.POSIXt", pos = 'package:base')
> f()
Error in format(x, ifelse(abbreviate, "%b", "%B")) : 
  argument "x" is missing, with no default
Calls: f -> format
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in format(x, ifelse(abbreviate, "%b", "%B")) : 
  argument "x" is missing, with no default
Calls: f -> format
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(c0)
Error in format.default(x, ifelse(abbreviate, "%b", "%B")) : 
  invalid 'trim' argument
Calls: f -> format -> format.default
> f(m0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(df0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f ... format -> format.factor -> format -> format.default
> f(FALSE)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(list(),list())
character(0)
> f(l0,l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(c0,c0)
Error in format.default(x, ifelse(abbreviate, "%b", "%B")) : 
  invalid 'trim' argument
Calls: f -> format -> format.default
> f(df0,df0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f ... format -> format.factor -> format -> format.default
> f(FALSE,FALSE)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> 
> ##  mostattributes<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("mostattributes<-", pos = 'package:base')
> f()
Error in f() : argument "value" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "obj" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[[1]]
factor(0)
Levels: 

attr(,"c0")
factor(0)
Levels: 
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'value' must be a list
> 
> ##  names  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("names", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'names' which requires 1
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'names' which requires 1
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
[1] "c0"
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'names' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'names' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'names' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'names' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'names' which requires 1
> 
> ##  names.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("names.POSIXlt", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
NULL
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  names<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("names<-", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'names<-' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to 'names<-' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : 1 argument passed to 'names<-' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to 'names<-' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to 'names<-' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to 'names<-' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to 'names<-' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'names<-' which requires 2
> f(list(),list())
named list()
> f(l0,l0)
named logical(0)
> f(c0,c0)
named character(0)
> f(df0,df0)
[1] integer(0)
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
FALSE 
FALSE 
> 
> ##  names<-.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("names<-.POSIXlt", pos = 'package:base')
> f()
Error in f() : argument "value" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : attempt to set an attribute on NULL
> f(l0,l0)
Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Error: $ operator is invalid for atomic vectors
> f(df0,df0)
Error in f(df0, df0) : attempt to set an attribute on NULL
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  namespaceExport  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("namespaceExport", pos = 'package:base')
> f()
Error in environmentIsLocked(ns) : 
  argument "ns" is missing, with no default
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(NULL)
Error in environmentIsLocked(ns) : use of NULL environment is defunct
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(,NULL)
Error in environmentIsLocked(ns) : 
  argument "ns" is missing, with no default
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(NULL,NULL)
Error in environmentIsLocked(ns) : use of NULL environment is defunct
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(list())
Error in environmentIsLocked(ns) : not an environment
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(l0)
Error in environmentIsLocked(ns) : not an environment
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(c0)
Error in environmentIsLocked(ns) : not an environment
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(m0)
Error in environmentIsLocked(ns) : not an environment
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(df0)
Error in environmentIsLocked(ns) : not an environment
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(FALSE)
Error in environmentIsLocked(ns) : not an environment
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(list(),list())
Error in environmentIsLocked(ns) : not an environment
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(l0,l0)
Error in environmentIsLocked(ns) : not an environment
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(c0,c0)
Error in environmentIsLocked(ns) : not an environment
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(df0,df0)
Error in environmentIsLocked(ns) : not an environment
Calls: f -> namespaceIsSealed -> environmentIsLocked
> f(FALSE,FALSE)
Error in environmentIsLocked(ns) : not an environment
Calls: f -> namespaceIsSealed -> environmentIsLocked
> 
> ##  namespaceImport  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("namespaceImport", pos = 'package:base')
> f()
> f(NULL)
> f(,NULL)
Error in namespaceImportFrom(self, asNamespace(ns), from = from, except = except) : 
  argument "self" is missing, with no default
Calls: f -> namespaceImportFrom
> f(NULL,NULL)
Error in asNamespace(ns) : not a namespace
Calls: f -> namespaceImportFrom -> asNamespace -> asNamespace
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
> f(FALSE)
> f(list(),list())
Error in asNamespace(ns) : not a namespace
Calls: f -> namespaceImportFrom -> asNamespace -> asNamespace
> f(l0,l0)
Error in asNamespace(ns) : not a namespace
Calls: f -> namespaceImportFrom -> asNamespace -> asNamespace
> f(c0,c0)
Error in getNamespace(self) : 
  invalid data of mode 'character' (too short)
Calls: f -> namespaceImportFrom -> getNamespace
> f(df0,df0)
Error in asNamespace(ns) : not a namespace
Calls: f -> namespaceImportFrom -> asNamespace -> asNamespace
> f(FALSE,FALSE)
Error in asNamespace(ns) : not a namespace
Calls: f -> namespaceImportFrom -> asNamespace -> asNamespace
> 
> ##  namespaceImportClasses  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("namespaceImportClasses", pos = 'package:base')
> f()
Error in f() : argument "vars" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "vars" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "vars" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "vars" is missing, with no default
> f(list())
Error in f(list()) : argument "vars" is missing, with no default
> f(l0)
Error in f(l0) : argument "vars" is missing, with no default
> f(c0)
Error in f(c0) : argument "vars" is missing, with no default
> f(m0)
Error in f(m0) : argument "vars" is missing, with no default
> f(df0)
Error in f(df0) : argument "vars" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "vars" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "vars" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "vars" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "vars" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "vars" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "vars" is missing, with no default
> 
> ##  namespaceImportFrom  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("namespaceImportFrom", pos = 'package:base')
> f()
Error in f() : argument "self" is missing, with no default
> f(NULL)
Error in asNamespace(ns) : argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(,NULL)
Error in f(, NULL) : argument "self" is missing, with no default
> f(NULL,NULL)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(list())
Error in asNamespace(ns) : argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(l0)
Error in asNamespace(ns) : argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(c0)
Error in getNamespace(self) : 
  invalid data of mode 'character' (too short)
Calls: f -> getNamespace
> f(m0)
Error in asNamespace(ns) : argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(df0)
Error in asNamespace(ns) : argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(FALSE)
Error in asNamespace(ns) : argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(list(),list())
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(l0,l0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(c0,c0)
Error in getNamespace(self) : 
  invalid data of mode 'character' (too short)
Calls: f -> getNamespace
> f(df0,df0)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> f(FALSE,FALSE)
Error in asNamespace(ns) : not a namespace
Calls: f -> asNamespace
> 
> ##  namespaceImportMethods  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("namespaceImportMethods", pos = 'package:base')
> f()
Error in methods::getPackageName(ns) : 
  argument "ns" is missing, with no default
Calls: f -> <Anonymous>
> f(NULL)
Error in methods::getPackageName(ns) : 
  argument "ns" is missing, with no default
Calls: f -> <Anonymous>
> f(,NULL)
Error in startsWith(these, ".__T__") : non-character object(s)
Calls: f -> <Anonymous> -> startsWith
> f(NULL,NULL)
Error in startsWith(these, ".__T__") : non-character object(s)
Calls: f -> <Anonymous> -> startsWith
> f(list())
Error in methods::getPackageName(ns) : 
  argument "ns" is missing, with no default
Calls: f -> <Anonymous>
> f(l0)
Error in methods::getPackageName(ns) : 
  argument "ns" is missing, with no default
Calls: f -> <Anonymous>
> f(c0)
Error in methods::getPackageName(ns) : 
  argument "ns" is missing, with no default
Calls: f -> <Anonymous>
> f(m0)
Error in methods::getPackageName(ns) : 
  argument "ns" is missing, with no default
Calls: f -> <Anonymous>
> f(df0)
Error in methods::getPackageName(ns) : 
  argument "ns" is missing, with no default
Calls: f -> <Anonymous>
> f(FALSE)
Error in methods::getPackageName(ns) : 
  argument "ns" is missing, with no default
Calls: f -> <Anonymous>
> f(list(),list())
Error in startsWith(these, ".__T__") : non-character object(s)
Calls: f -> <Anonymous> -> startsWith
> f(l0,l0)
Error in startsWith(these, ".__T__") : non-character object(s)
Calls: f -> <Anonymous> -> startsWith
> f(c0,c0)
Error in startsWith(these, ".__T__") : non-character object(s)
Calls: f -> <Anonymous> -> startsWith
> f(df0,df0)
Error in as.environment(pos) : invalid 'pos' argument
Calls: f -> <Anonymous> -> unlist -> lapply -> FUN
> f(FALSE,FALSE)
Error in as.environment(pos) : invalid object for 'as.environment'
Calls: f -> <Anonymous> -> unlist -> lapply -> FUN
> 
> ##  nargs  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("nargs", pos = 'package:base')
> f()
[1] NA
> f(NULL)
Error in f(NULL) : 1 argument passed to 'nargs' which requires 0
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'nargs' which requires 0
> f(list())
Error in f(list()) : 1 argument passed to 'nargs' which requires 0
> f(l0)
Error in f(l0) : 1 argument passed to 'nargs' which requires 0
> f(c0)
Error in f(c0) : 1 argument passed to 'nargs' which requires 0
> f(m0)
Error in f(m0) : 1 argument passed to 'nargs' which requires 0
> f(df0)
Error in f(df0) : 1 argument passed to 'nargs' which requires 0
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'nargs' which requires 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'nargs' which requires 0
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'nargs' which requires 0
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'nargs' which requires 0
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'nargs' which requires 0
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'nargs' which requires 0
> 
> ##  nchar  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("nchar", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
integer(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'type' argument
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
c0 
10 
> f(FALSE)
[1] 5
> f(list(),list())
Error in f(list(), list()) : invalid 'type' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'type' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'type' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'type' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'type' argument
> 
> ##  ncol  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("ncol", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
[1] 0
> f(df0)
[1] 1
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  new.env  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("new.env", pos = 'package:base')
> f()
<environment: 0x2bff780>
> f(NULL)
<environment: 0x2bff278>
> f(,NULL)
Error in f(, NULL) : use of NULL environment is defunct
> f(NULL,NULL)
Error in f(NULL, NULL) : use of NULL environment is defunct
> f(list())
<environment: 0x2c00150>
> f(l0)
<environment: 0x2c00bb0>
> f(c0)
<environment: 0x2c01610>
> f(m0)
<environment: 0x2c01108>
> f(df0)
<environment: 0x2b78f68>
> f(FALSE)
<environment: 0x2b799c8>
> f(list(),list())
Error in f(list(), list()) : 'enclos' must be an environment
> f(l0,l0)
Error in f(l0, l0) : 'enclos' must be an environment
> f(c0,c0)
Error in f(c0, c0) : 'enclos' must be an environment
> f(df0,df0)
Error in f(df0, df0) : 'enclos' must be an environment
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'enclos' must be an environment
> 
> ##  next  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("next", pos = 'package:base')
> f()
Error: no loop for break/next, jumping to top level
> f(NULL)
Error in f(NULL) : 1 argument passed to 'next' which requires 0
> f(,NULL)
Error in f(, NULL) : 2 arguments passed to 'next' which requires 0
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'next' which requires 0
> f(list())
Error in f(list()) : 1 argument passed to 'next' which requires 0
> f(l0)
Error in f(l0) : 1 argument passed to 'next' which requires 0
> f(c0)
Error in f(c0) : 1 argument passed to 'next' which requires 0
> f(m0)
Error in f(m0) : 1 argument passed to 'next' which requires 0
> f(df0)
Error in f(df0) : 1 argument passed to 'next' which requires 0
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'next' which requires 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'next' which requires 0
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'next' which requires 0
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'next' which requires 0
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'next' which requires 0
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'next' which requires 0
> 
> ##  ngettext  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("ngettext", pos = 'package:base')
> f()
Error in f() : argument "n" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "msg1" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "n" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "msg2" is missing, with no default
> f(list())
Error in f(list()) : argument "msg1" is missing, with no default
> f(l0)
Error in f(l0) : argument "msg1" is missing, with no default
> f(c0)
Error in f(c0) : argument "msg1" is missing, with no default
> f(m0)
Error in f(m0) : argument "msg1" is missing, with no default
> f(df0)
Error in f(df0) : argument "msg1" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "msg1" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "msg2" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "msg2" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "msg2" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "msg2" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "msg2" is missing, with no default
> 
> ##  nlevels  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("nlevels", pos = 'package:base')
> f()
Error in levels(x) : argument "x" is missing, with no default
Calls: f -> levels
> f(NULL)
[1] 0
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] 0
> f(l0)
[1] 0
> f(c0)
[1] 0
> f(m0)
[1] 0
> f(df0)
[1] 0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  noquote  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("noquote", pos = 'package:base')
> f()
Error in f() : argument "obj" is missing, with no default
> f(NULL)
Error in f(NULL) : attempt to set an attribute on NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  norm  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("norm", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'A' must be a numeric matrix
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'A' must be a numeric matrix
> f(list())
Error in f(list()) : 'A' must be a numeric matrix
> f(l0)
Error in f(l0) : 'A' must be a numeric matrix
> f(c0)
Error in f(c0) : 'A' must be a numeric matrix
> f(m0)
[1] 0
> f(df0)
Error in f(df0) : 'A' must be a numeric matrix
> f(FALSE)
Error in f(FALSE) : 'A' must be a numeric matrix
> f(list(),list())
Error in f(list(), list()) : 'A' must be a numeric matrix
> f(l0,l0)
Error in f(l0, l0) : 'A' must be a numeric matrix
> f(c0,c0)
Error in f(c0, c0) : 'A' must be a numeric matrix
> f(df0,df0)
Error in f(df0, df0) : 'A' must be a numeric matrix
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'A' must be a numeric matrix
> 
> ##  normalizePath  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("normalizePath", pos = 'package:base')
> f()
Error in path.expand(path) : argument "path" is missing, with no default
Calls: f -> path.expand
> f(NULL)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> path.expand
> f(,NULL)
Error in path.expand(path) : argument "path" is missing, with no default
Calls: f -> path.expand
> f(NULL,NULL)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> path.expand
> f(list())
Error in path.expand(path) : invalid 'path' argument
Calls: f -> path.expand
> f(l0)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> path.expand
> f(c0)
character(0)
> f(m0)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> path.expand
> f(df0)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> path.expand
> f(FALSE)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> path.expand
> f(list(),list())
Error in path.expand(path) : invalid 'path' argument
Calls: f -> path.expand
> f(l0,l0)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> path.expand
> f(c0,c0)
character(0)
> f(df0,df0)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> path.expand
> f(FALSE,FALSE)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> path.expand
> 
> ##  nrow  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("nrow", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
[1] 0
> f(df0)
[1] 0
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  numeric  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("numeric", pos = 'package:base')
> f()
numeric(0)
> f(NULL)
Error in f(NULL) : invalid 'length' argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'length' argument
> f(l0)
Error in f(l0) : invalid 'length' argument
> f(c0)
Error in f(c0) : invalid 'length' argument
> f(m0)
Error in f(m0) : invalid 'length' argument
> f(df0)
Error in f(df0) : invalid 'length' argument
> f(FALSE)
Error in f(FALSE) : invalid 'length' argument
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("numeric_version", pos = 'package:base')
> f()
Error in .make_numeric_version(x, strict, .standard_regexps()$valid_numeric_version) : 
  argument "x" is missing, with no default
Calls: f -> .make_numeric_version
> f(NULL)
<0 elements>
> f(,NULL)
Error in .make_numeric_version(x, strict, .standard_regexps()$valid_numeric_version) : 
  argument "x" is missing, with no default
Calls: f -> .make_numeric_version
> f(NULL,NULL)
<0 elements>
> f(list())
<0 elements>
> f(l0)
<0 elements>
> f(c0)
<0 elements>
> f(m0)
<0 elements>
> f(df0)
Error: invalid version specification 'integer(0)'
> f(FALSE)
Error: invalid version specification 'FALSE'
> f(list(),list())
<0 elements>
> f(l0,l0)
<0 elements>
> f(c0,c0)
<0 elements>
> f(df0,df0)
Error in !all(ok) && strict : invalid 'y' type in 'x && y'
Calls: f -> .make_numeric_version
> f(FALSE,FALSE)
[1] <NA>
> 
> ##  nzchar  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("nzchar", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'nzchar' which requires 1 to 2
> f(NULL)
logical(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
logical(0)
> f(list())
logical(0)
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
logical(0)
> f(df0)
[1] TRUE
> f(FALSE)
[1] TRUE
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
[1] TRUE
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  objects  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("objects", pos = 'package:base')
> f()
[1] ""    "c0"  "df0" "f"   "l0"  "m0" 
> f(NULL)
Error in as.environment(pos) : using 'as.environment(NULL)' is defunct
Calls: f
> f(,NULL)
Error in as.environment(pos) : using 'as.environment(NULL)' is defunct
Calls: f
> f(NULL,NULL)
Error in as.environment(pos) : using 'as.environment(NULL)' is defunct
Calls: f
> f(list())
character(0)
> f(l0)
Error in as.environment(pos) : invalid object for 'as.environment'
Calls: f
> f(c0)
Error in as.environment(pos) : no item called "NA" on the search list
Calls: f
> f(m0)
Error in as.environment(pos) : invalid 'pos' argument
Calls: f
> f(df0)
[1] "c0"
> f(FALSE)
Error in as.environment(pos) : invalid object for 'as.environment'
Calls: f
> f(list(),list())
character(0)
> f(l0,l0)
Error in as.environment(pos) : invalid object for 'as.environment'
Calls: f
> f(c0,c0)
Error in as.environment(pos) : no item called "NA" on the search list
Calls: f
> f(df0,df0)
[1] "c0"
> f(FALSE,FALSE)
Error in as.environment(pos) : invalid object for 'as.environment'
Calls: f
> 
> ##  oldClass  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("oldClass", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'oldClass' which requires 1
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'oldClass' which requires 1
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
[1] "data.frame"
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'oldClass' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'oldClass' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'oldClass' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'oldClass' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'oldClass' which requires 1
> 
> ##  oldClass<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("oldClass<-", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'oldClass<-' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to 'oldClass<-' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : 1 argument passed to 'oldClass<-' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to 'oldClass<-' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to 'oldClass<-' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to 'oldClass<-' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to 'oldClass<-' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'oldClass<-' which requires 2
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error: attempt to set invalid 'class' attribute
> f(FALSE,FALSE)
Error: attempt to set invalid 'class' attribute
> 
> ##  on.exit  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("on.exit", pos = 'package:base')
> f()
> f(NULL)
> f(,NULL)
Error in f(, NULL) : invalid 'add' argument
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'add' argument
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
> f(FALSE)
> f(list(),list())
Error in f(list(), list()) : invalid 'add' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'add' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'add' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'add' argument
> f(FALSE,FALSE)
> 
> ##  open  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("open", pos = 'package:base')
> f()
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "character"
Calls: f
> f(df0,df0)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "data.frame"
Calls: f
> f(FALSE,FALSE)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "logical"
Calls: f
> 
> ##  open.connection  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("open.connection", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in f(NULL) : 'con' is not a connection
> f(,NULL)
Error in f(, NULL) : argument "con" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'con' is not a connection
> f(list())
Error in f(list()) : 'con' is not a connection
> f(l0)
Error in f(l0) : 'con' is not a connection
> f(c0)
Error in f(c0) : 'con' is not a connection
> f(m0)
Error in f(m0) : 'con' is not a connection
> f(df0)
Error in f(df0) : 'con' is not a connection
> f(FALSE)
Error in f(FALSE) : 'con' is not a connection
> f(list(),list())
Error in f(list(), list()) : 'con' is not a connection
> f(l0,l0)
Error in f(l0, l0) : 'con' is not a connection
> f(c0,c0)
Error in f(c0, c0) : 'con' is not a connection
> f(df0,df0)
Error in f(df0, df0) : 'con' is not a connection
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'con' is not a connection
> 
> ##  open.srcfile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("open.srcfile", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.mtime -> file.info
> f(,NULL)
Error in f(, NULL) : argument "con" is missing, with no default
> f(NULL,NULL)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.mtime -> file.info
> f(list())
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.mtime -> file.info
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.mtime -> file.info
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.mtime -> file.info
> f(l0,l0)
Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Error: $ operator is invalid for atomic vectors
> f(df0,df0)
Error in file.info(..., extra_cols = FALSE) : invalid filename argument
Calls: f -> file.mtime -> file.info
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  open.srcfilealias  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("open.srcfilealias", pos = 'package:base')
> f()
Error in open(con$original, line, ...) : 
  argument "con" is missing, with no default
Calls: f -> open
> f(NULL)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "NULL"
Calls: f -> open
> f(,NULL)
Error in open(con$original, line, ...) : 
  argument "con" is missing, with no default
Calls: f -> open
> f(NULL,NULL)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "NULL"
Calls: f -> open
> f(list())
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "NULL"
Calls: f -> open
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "NULL"
Calls: f -> open
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "NULL"
Calls: f -> open
> f(l0,l0)
Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Error: $ operator is invalid for atomic vectors
> f(df0,df0)
Error in UseMethod("open") : 
  no applicable method for 'open' applied to an object of class "NULL"
Calls: f -> open
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  open.srcfilecopy  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("open.srcfilecopy", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in textConnection(srcfile$lines, open = "r") : 
  invalid 'text' argument
Calls: f -> textConnection
> f(,NULL)
Error in f(, NULL) : argument "con" is missing, with no default
> f(NULL,NULL)
Error in textConnection(srcfile$lines, open = "r") : 
  invalid 'text' argument
Calls: f -> textConnection
> f(list())
Error in textConnection(srcfile$lines, open = "r") : 
  invalid 'text' argument
Calls: f -> textConnection
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
Error in textConnection(srcfile$lines, open = "r") : 
  invalid 'text' argument
Calls: f -> textConnection
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in textConnection(srcfile$lines, open = "r") : 
  invalid 'text' argument
Calls: f -> textConnection
> f(l0,l0)
Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Error: $ operator is invalid for atomic vectors
> f(df0,df0)
Error in textConnection(srcfile$lines, open = "r") : 
  invalid 'text' argument
Calls: f -> textConnection
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  options  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("options", pos = 'package:base')
> f()
$CBoundsCheck
[1] FALSE

$HTTPUserAgent
[1] "R (3.3.0 x86_64-pc-linux-gnu x86_64 linux-gnu)"

$OutDec
[1] "."

$add.smooth
[1] TRUE

$bitmapType
[1] "Xlib"

$browser
[1] "/usr/bin/firefox"

$browserNLdisabled
[1] FALSE

$check.bounds
[1] FALSE

$citation.bibtex.max
[1] 1

$continue
[1] "+ "

$contrasts
        unordered           ordered 
"contr.treatment"      "contr.poly" 

$defaultPackages
[1] "datasets"  "utils"     "grDevices" "graphics"  "stats"     "methods"  

$demo.ask
[1] "default"

$deparse.cutoff
[1] 60

$device
function (file = if (onefile) "Rplots.pdf" else "Rplot%03d.pdf", 
    width, height, onefile, family, title, fonts, version, paper, 
    encoding, bg, fg, pointsize, pagecentre, colormodel, useDingbats, 
    useKerning, fillOddEven, compress) 
{
    initPSandPDFfonts()
    new <- list()
    if (!missing(width)) 
        new$width <- width
    if (!missing(height)) 
        new$height <- height
    if (!missing(onefile)) 
        new$onefile <- onefile
    if (!missing(title)) 
        new$title <- title
    if (!missing(fonts)) 
        new$fonts <- fonts
    if (!missing(version)) 
        new$version <- version
    if (!missing(paper)) 
        new$paper <- paper
    if (!missing(encoding)) 
        new$encoding <- encoding
    if (!missing(bg)) 
        new$bg <- bg
    if (!missing(fg)) 
        new$fg <- fg
    if (!missing(pointsize)) 
        new$pointsize <- pointsize
    if (!missing(pagecentre)) 
        new$pagecentre <- pagecentre
    if (!missing(colormodel)) 
        new$colormodel <- colormodel
    if (!missing(useDingbats)) 
        new$useDingbats <- useDingbats
    if (!missing(useKerning)) 
        new$useKerning <- useKerning
    if (!missing(fillOddEven)) 
        new$fillOddEven <- fillOddEven
    if (!missing(compress)) 
        new$compress <- compress
    old <- check.options(new, name.opt = ".PDF.Options", envir = .PSenv)
    if (!missing(family) && (inherits(family, "Type1Font") || 
        inherits(family, "CIDFont"))) {
        enc <- family$encoding
        if (inherits(family, "Type1Font") && !is.null(enc) && 
            enc != "default" && (is.null(old$encoding) || old$encoding == 
            "default")) 
            old$encoding <- enc
        family <- family$metrics
    }
    if (is.null(old$encoding) || old$encoding == "default") 
        old$encoding <- guessEncoding()
    if (!missing(family)) {
        if (length(family) == 4L) {
            family <- c(family, "Symbol.afm")
        }
        else if (length(family) == 5L) {
        }
        else if (length(family) == 1L) {
            pf <- pdfFonts(family)[[1L]]
            if (is.null(pf)) 
                stop(gettextf("unknown family '%s'", family), 
                  domain = NA)
            matchFont(pf, old$encoding)
        }
        else stop("invalid 'family' argument")
        old$family <- family
    }
    version <- old$version
    versions <- c("1.1", "1.2", "1.3", "1.4", "1.5", "1.6", "1.7", 
        "2.0")
    if (version %in% versions) 
        version <- as.integer(strsplit(version, "[.]")[[1L]])
    else stop("invalid PDF version")
    onefile <- old$onefile
    if (!checkIntFormat(file)) 
        stop(gettextf("invalid 'file' argument '%s'", file), 
            domain = NA)
    .External(C_PDF, file, old$paper, old$family, old$encoding, 
        old$bg, old$fg, old$width, old$height, old$pointsize, 
        onefile, old$pagecentre, old$title, old$fonts, version[1L], 
        version[2L], old$colormodel, old$useDingbats, old$useKerning, 
        old$fillOddEven, old$compress)
    invisible()
}
<bytecode: 0x1fb8698>
<environment: namespace:grDevices>

$device.ask.default
[1] FALSE

$digits
[1] 7

$dvipscmd
[1] "dvips"

$echo
[1] TRUE

$editor
[1] "nano"

$encoding
[1] "native.enc"

$error
expression(NULL)

$example.ask
[1] "default"

$expressions
[1] 5000

$help.search.types
[1] "vignette" "demo"     "help"    

$help.try.all.packages
[1] FALSE

$internet.info
[1] 2

$keep.source
[1] FALSE

$keep.source.pkgs
[1] FALSE

$locatorBell
[1] TRUE

$mailer
[1] "mailto"

$max.print
[1] 99999

$menu.graphics
[1] TRUE

$na.action
[1] "na.omit"

$nwarnings
[1] 50

$pager
[1] "cat"

$papersize
[1] "a4"

$pdfviewer
[1] "/usr/bin/xdg-open"

$pkgType
[1] "source"

$printcmd
[1] ""

$prompt
[1] "> "

$repos
    CRAN 
"@CRAN@" 

$rl_word_breaks
[1] " \t\n\"\\'`><=%;,|&{()}"

$scipen
[1] 0

$show.coef.Pvalues
[1] TRUE

$show.error.messages
[1] TRUE

$show.signif.stars
[1] TRUE

$showErrorCalls
[1] TRUE

$str
$str$strict.width
[1] "no"

$str$digits.d
[1] 3

$str$vec.len
[1] 4


$str.dendrogram.last
[1] "`"

$stringsAsFactors
[1] TRUE

$texi2dvi
[1] "texi2dvi"

$timeout
[1] 60

$ts.S.compat
[1] FALSE

$ts.eps
[1] 1e-05

$unzip
[1] "/usr/bin/unzip"

$useFancyQuotes
[1] TRUE

$verbose
[1] FALSE

$warn
[1] 0

$warning.length
[1] 1000

$width
[1] 80

> f(NULL)
> f(,NULL)
Error in f(, NULL) : invalid argument
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid argument
> f(list())
> f(l0)
Error in f(l0) : invalid argument
> f(c0)
Error in f(c0) : invalid argument
> f(m0)
Error in f(m0) : invalid argument
> f(df0)
> f(FALSE)
Error in f(FALSE) : invalid argument
> f(list(),list())
Error in f(list(), list()) : invalid argument
> f(l0,l0)
Error in f(l0, l0) : invalid argument
> f(c0,c0)
Error in f(c0, c0) : invalid argument
> f(df0,df0)
Error in f(df0, df0) : invalid argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid argument
> 
> ##  order  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("order", pos = 'package:base')
> f()
NULL
> f(NULL)
Error in f(NULL) : argument 1 is not a vector
> f(,NULL)
Error in f(, NULL) : argument 1 is not a vector
> f(NULL,NULL)
Error in f(NULL, NULL) : argument 1 is not a vector
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
integer(0)
> f(FALSE)
[1] 1
> f(list(),list())
integer(0)
> f(l0,l0)
integer(0)
> f(c0,c0)
integer(0)
> f(df0,df0)
integer(0)
> f(FALSE,FALSE)
[1] 1
> 
> ##  ordered  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("ordered", pos = 'package:base')
> f()
Error in factor(x, ..., ordered = TRUE) : 
  argument "x" is missing, with no default
Calls: f -> factor
> f(NULL)
ordered(0)
Levels: 
> f(,NULL)
Error in factor(x, ..., ordered = TRUE) : 
  argument "x" is missing, with no default
Calls: f -> factor
> f(NULL,NULL)
ordered(0)
Levels: 
> f(list())
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(l0)
ordered(0)
Levels: 
> f(c0)
ordered(0)
Levels: 
> f(m0)
ordered(0)
Levels: 
> f(df0)
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(FALSE)
[1] FALSE
Levels: FALSE
> f(list(),list())
ordered(0)
Levels: 
> f(l0,l0)
ordered(0)
Levels: 
> f(c0,c0)
ordered(0)
Levels: 
> f(df0,df0)
        c0 
integer(0) 
Levels: integer(0)
> f(FALSE,FALSE)
[1] FALSE
Levels: FALSE
> 
> ##  outer  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("outer", pos = 'package:base')
> f()
Error in f() : argument "X" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "Y" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "X" is missing, with no default
> f(NULL,NULL)
Error in t.default(as.vector(Y)) : argument is not a matrix
Calls: f -> t -> t.default
> f(list())
Error in f(list()) : argument "Y" is missing, with no default
> f(l0)
Error in f(l0) : argument "Y" is missing, with no default
> f(c0)
Error in f(c0) : argument "Y" is missing, with no default
> f(m0)
Error in f(m0) : argument "Y" is missing, with no default
> f(df0)
Error in f(df0) : argument "Y" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "Y" is missing, with no default
> f(list(),list())
Error in as.vector(X) %*% t(as.vector(Y)) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(l0,l0)
<0 x 0 matrix>
> f(c0,c0)
Error in as.vector(X) %*% t(as.vector(Y)) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(df0,df0)
Error in as.vector(X) %*% t(as.vector(Y)) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(FALSE,FALSE)
     [,1]
[1,]    0
> 
> ##  packBits  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("packBits", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument 'x' must be raw, integer or logical
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument 'x' must be raw, integer or logical
> f(list())
Error in f(list()) : argument 'x' must be raw, integer or logical
> f(l0)
raw(0)
> f(c0)
Error in f(c0) : argument 'x' must be raw, integer or logical
> f(m0)
Error in f(m0) : argument 'x' must be raw, integer or logical
> f(df0)
Error in f(df0) : argument 'x' must be raw, integer or logical
> f(FALSE)
Error in f(FALSE) : argument 'x' must be a multiple of 8 long
> f(list(),list())
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(l0,l0)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(c0,c0)
Error in match.arg(type) : 'arg' should be one of "raw", "integer"
Calls: f -> match.arg
> f(df0,df0)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(FALSE,FALSE)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> 
> ##  packageEvent  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("packageEvent", pos = 'package:base')
> f()
Error in strsplit(pkgname, "_", fixed = TRUE) : 
  argument "pkgname" is missing, with no default
Calls: f -> strsplit
> f(NULL)
Error in strsplit(pkgname, "_", fixed = TRUE) : non-character argument
Calls: f -> strsplit
> f(,NULL)
Error in strsplit(pkgname, "_", fixed = TRUE) : 
  argument "pkgname" is missing, with no default
Calls: f -> strsplit
> f(NULL,NULL)
Error in strsplit(pkgname, "_", fixed = TRUE) : non-character argument
Calls: f -> strsplit
> f(list())
Error in strsplit(pkgname, "_", fixed = TRUE) : non-character argument
Calls: f -> strsplit
> f(l0)
Error in strsplit(pkgname, "_", fixed = TRUE) : non-character argument
Calls: f -> strsplit
> f(c0)
Error in strsplit(pkgname, "_", fixed = TRUE)[[1L]] : 
  subscript out of bounds
Calls: f
> f(m0)
Error in strsplit(pkgname, "_", fixed = TRUE) : non-character argument
Calls: f -> strsplit
> f(df0)
Error in strsplit(pkgname, "_", fixed = TRUE) : non-character argument
Calls: f -> strsplit
> f(FALSE)
Error in strsplit(pkgname, "_", fixed = TRUE) : non-character argument
Calls: f -> strsplit
> f(list(),list())
Error in match.arg(event) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(l0,l0)
Error in match.arg(event) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(c0,c0)
Error in match.arg(event) : 
  'arg' should be one of "onLoad", "attach", "detach", "onUnload"
Calls: f -> match.arg
> f(df0,df0)
Error in match.arg(event) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(FALSE,FALSE)
Error in match.arg(event) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> 
> ##  packageHasNamespace  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("packageHasNamespace", pos = 'package:base')
> f()
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> file.exists -> file.path
> f(NULL)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> file.exists -> file.path
> f(,NULL)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package" is missing, with no default
Calls: f -> file.exists -> file.path
> f(NULL,NULL)
logical(0)
> f(list())
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> file.exists -> file.path
> f(l0)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> file.exists -> file.path
> f(c0)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> file.exists -> file.path
> f(m0)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> file.exists -> file.path
> f(df0)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> file.exists -> file.path
> f(FALSE)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> file.exists -> file.path
> f(list(),list())
logical(0)
> f(l0,l0)
logical(0)
> f(c0,c0)
logical(0)
> f(df0,df0)
[1] FALSE
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  packageStartupMessage  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("packageStartupMessage", pos = 'package:base')
> f()

> f(NULL)

> f(,NULL)

> f(NULL,NULL)

> f(list())

> f(l0)

> f(c0)

> f(m0)

> f(df0)
integer(0)
> f(FALSE)
FALSE
> f(list(),list())

> f(l0,l0)

> f(c0,c0)

> f(df0,df0)
integer(0)integer(0)
> f(FALSE,FALSE)
FALSEFALSE
> 
> ##  package_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("package_version", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
<0 elements>
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
<0 elements>
> f(list())
<0 elements>
> f(l0)
<0 elements>
> f(c0)
<0 elements>
> f(m0)
<0 elements>
> f(df0)
Error: invalid version specification 'integer(0)'
> f(FALSE)
Error: invalid version specification 'FALSE'
> f(list(),list())
<0 elements>
> f(l0,l0)
<0 elements>
> f(c0,c0)
<0 elements>
> f(df0,df0)
Error in !all(ok) && strict : invalid 'y' type in 'x && y'
Calls: f -> .make_numeric_version
> f(FALSE,FALSE)
[1] <NA>
> 
> ##  pairlist  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("pairlist", pos = 'package:base')
> f()
NULL
> f(NULL)
[[1]]
NULL

> f(,NULL)
[[1]]
NULL

[[2]]
NULL

> f(NULL,NULL)
[[1]]
NULL

[[2]]
NULL

> f(list())
[[1]]
list()

> f(l0)
[[1]]
logical(0)

> f(c0)
[[1]]
character(0)

> f(m0)
[[1]]
<0 x 0 matrix>

> f(df0)
[[1]]
[1] c0
<0 rows> (or 0-length row.names)

> f(FALSE)
[[1]]
[1] FALSE

> f(list(),list())
[[1]]
list()

[[2]]
list()

> f(l0,l0)
[[1]]
logical(0)

[[2]]
logical(0)

> f(c0,c0)
[[1]]
character(0)

[[2]]
character(0)

> f(df0,df0)
[[1]]
[1] c0
<0 rows> (or 0-length row.names)

[[2]]
[1] c0
<0 rows> (or 0-length row.names)

> f(FALSE,FALSE)
[[1]]
[1] FALSE

[[2]]
[1] FALSE

> 
> ##  parent.env  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("parent.env", pos = 'package:base')
> f()
Error in f() : argument "env" is missing, with no default
> f(NULL)
Error in f(NULL) : argument is not an environment
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : argument is not an environment
> f(l0)
Error in f(l0) : argument is not an environment
> f(c0)
Error in f(c0) : argument is not an environment
> f(m0)
Error in f(m0) : argument is not an environment
> f(df0)
Error in f(df0) : argument is not an environment
> f(FALSE)
Error in f(FALSE) : argument is not an environment
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  parent.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("parent.frame", pos = 'package:base')
> f()
<environment: R_GlobalEnv>
> f(NULL)
Error in f(NULL) : invalid 'n' value
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'n' value
> f(l0)
Error in f(l0) : invalid 'n' value
> f(c0)
Error in f(c0) : invalid 'n' value
> f(m0)
Error in f(m0) : invalid 'n' value
> f(df0)
Error in f(df0) : invalid 'n' value
> f(FALSE)
Error in f(FALSE) : invalid 'n' value
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  parse  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("parse", pos = 'package:base')
> f()
?f(NULL)
expression(f(NULL))
> f(,NULL)
?f(NULL,NULL)
expression(f(NULL, NULL))
> f(list())
Error in f(list()) : 'file' must be a character string or connection
> f(l0)
Error in f(l0) : 'file' must be a character string or connection
> f(c0)
Error in if (file == "") { : argument is of length zero
Calls: f
> f(m0)
Error in f(m0) : 'file' must be a character string or connection
> f(df0)
Error in f(df0) : 'file' must be a character string or connection
> f(FALSE)
Error in f(FALSE) : 'file' must be a character string or connection
> f(list(),list())
Error in f(list(), list()) : 
  'file' must be a character string or connection
> f(l0,l0)
Error in f(l0, l0) : 'file' must be a character string or connection
> f(c0,c0)
Error in if (file == "") { : argument is of length zero
Calls: f
> f(df0,df0)
Error in f(df0, df0) : 'file' must be a character string or connection
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'file' must be a character string or connection
> 
> ##  parseNamespaceFile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("parseNamespaceFile", pos = 'package:base')
> f()
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> namespaceFilePath -> file.path
> f(NULL)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> namespaceFilePath -> file.path
> f(,NULL)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package" is missing, with no default
Calls: f -> namespaceFilePath -> file.path
> f(NULL,NULL)
Error in if (file.exists(descfile)) { : argument is of length zero
Calls: f
> f(list())
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> namespaceFilePath -> file.path
> f(l0)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> namespaceFilePath -> file.path
> f(c0)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> namespaceFilePath -> file.path
> f(m0)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> namespaceFilePath -> file.path
> f(df0)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> namespaceFilePath -> file.path
> f(FALSE)
Error in file.path(package.lib, package, "NAMESPACE") : 
  argument "package.lib" is missing, with no default
Calls: f -> namespaceFilePath -> file.path
> f(list(),list())
Error in if (file.exists(descfile)) { : argument is of length zero
Calls: f
> f(l0,l0)
Error in if (file.exists(descfile)) { : argument is of length zero
Calls: f
> f(c0,c0)
Error in if (file.exists(descfile)) { : argument is of length zero
Calls: f
> f(df0,df0)
Error in f(df0, df0) : package 'integer(0)' has no 'NAMESPACE' file
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : package 'FALSE' has no 'NAMESPACE' file
> 
> ##  paste  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("paste", pos = 'package:base')
> f()
character(0)
> f(NULL)
character(0)
> f(,NULL)
character(0)
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[1] "integer(0) integer(0)"
> f(FALSE,FALSE)
[1] "FALSE FALSE"
> 
> ##  paste0  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("paste0", pos = 'package:base')
> f()
character(0)
> f(NULL)
character(0)
> f(,NULL)
character(0)
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[1] "integer(0)integer(0)"
> f(FALSE,FALSE)
[1] "FALSEFALSE"
> 
> ##  path.expand  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("path.expand", pos = 'package:base')
> f()
Error in f() : argument "path" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'path' argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'path' argument
> f(l0)
Error in f(l0) : invalid 'path' argument
> f(c0)
character(0)
> f(m0)
Error in f(m0) : invalid 'path' argument
> f(df0)
Error in f(df0) : invalid 'path' argument
> f(FALSE)
Error in f(FALSE) : invalid 'path' argument
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  path.package  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("path.package", pos = 'package:base')
> f()
[1] "/home/aviral/projects/r/library/stats"    
[2] "/home/aviral/projects/r/library/graphics" 
[3] "/home/aviral/projects/r/library/grDevices"
[4] "/home/aviral/projects/r/library/utils"    
[5] "/home/aviral/projects/r/library/datasets" 
[6] "/home/aviral/projects/r/library/methods"  
[7] "/home/aviral/projects/r/library/base"     
> f(NULL)
[1] "/home/aviral/projects/r/library/stats"    
[2] "/home/aviral/projects/r/library/graphics" 
[3] "/home/aviral/projects/r/library/grDevices"
[4] "/home/aviral/projects/r/library/utils"    
[5] "/home/aviral/projects/r/library/datasets" 
[6] "/home/aviral/projects/r/library/methods"  
[7] "/home/aviral/projects/r/library/base"     
> f(,NULL)
[1] "/home/aviral/projects/r/library/stats"    
[2] "/home/aviral/projects/r/library/graphics" 
[3] "/home/aviral/projects/r/library/grDevices"
[4] "/home/aviral/projects/r/library/utils"    
[5] "/home/aviral/projects/r/library/datasets" 
[6] "/home/aviral/projects/r/library/methods"  
[7] "/home/aviral/projects/r/library/base"     
> f(NULL,NULL)
[1] "/home/aviral/projects/r/library/stats"    
[2] "/home/aviral/projects/r/library/graphics" 
[3] "/home/aviral/projects/r/library/grDevices"
[4] "/home/aviral/projects/r/library/utils"    
[5] "/home/aviral/projects/r/library/datasets" 
[6] "/home/aviral/projects/r/library/methods"  
[7] "/home/aviral/projects/r/library/base"     
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
Error in f(df0) : none of the packages are loaded
> f(FALSE)
Error in f(FALSE) : none of the packages are loaded
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left) : '!' not meaningful for factors
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : none of the packages are loaded
> 
> ##  pcre_config  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("pcre_config", pos = 'package:base')
> f()
             UTF-8 Unicode properties                JIT 
              TRUE               TRUE               TRUE 
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  pipe  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("pipe", pos = 'package:base')
> f()
Error in f() : argument "description" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'description' argument
> f(,NULL)
Error in f(, NULL) : argument "description" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'description' argument
> f(list())
Error in f(list()) : invalid 'description' argument
> f(l0)
Error in f(l0) : invalid 'description' argument
> f(c0)
Error in f(c0) : invalid 'description' argument
> f(m0)
Error in f(m0) : invalid 'description' argument
> f(df0)
Error in f(df0) : invalid 'description' argument
> f(FALSE)
Error in f(FALSE) : invalid 'description' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'description' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'description' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'description' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'description' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'description' argument
> 
> ##  pmatch  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("pmatch", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "table" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
integer(0)
> f(list())
Error in f(list()) : argument "table" is missing, with no default
> f(l0)
Error in f(l0) : argument "table" is missing, with no default
> f(c0)
Error in f(c0) : argument "table" is missing, with no default
> f(m0)
Error in f(m0) : argument "table" is missing, with no default
> f(df0)
Error in f(df0) : argument "table" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "table" is missing, with no default
> f(list(),list())
integer(0)
> f(l0,l0)
integer(0)
> f(c0,c0)
integer(0)
> f(df0,df0)
[1] 1
> f(FALSE,FALSE)
[1] 1
> 
> ##  pmax  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("pmax", pos = 'package:base')
> f()
Error in f() : no arguments
> f(NULL)
NULL
> f(,NULL)
integer(0)
> f(NULL,NULL)
integer(0)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
integer(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<' not meaningful for factors
> f(FALSE,FALSE)
[1] 0
> 
> ##  pmax.int  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("pmax.int", pos = 'package:base')
> f()
Error in f() : no arguments
> f(NULL)
NULL
> f(,NULL)
integer(0)
> f(NULL,NULL)
integer(0)
> f(list())
Error in f(list()) : invalid input type
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : invalid input type
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : invalid input type
> f(l0,l0)
integer(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : invalid input type
> f(FALSE,FALSE)
[1] 0
> 
> ##  pmin  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("pmin", pos = 'package:base')
> f()
Error in f() : no arguments
> f(NULL)
NULL
> f(,NULL)
integer(0)
> f(NULL,NULL)
integer(0)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
integer(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '>' not meaningful for factors
> f(FALSE,FALSE)
[1] 0
> 
> ##  pmin.int  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("pmin.int", pos = 'package:base')
> f()
Error in f() : no arguments
> f(NULL)
NULL
> f(,NULL)
integer(0)
> f(NULL,NULL)
integer(0)
> f(list())
Error in f(list()) : invalid input type
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : invalid input type
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : invalid input type
> f(l0,l0)
integer(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : invalid input type
> f(FALSE,FALSE)
[1] 0
> 
> ##  polyroot  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("polyroot", pos = 'package:base')
> f()
Error in f() : argument "z" is missing, with no default
> f(NULL)
Error in f(NULL) : unimplemented type 'NULL' in 'polyroot'
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : unimplemented type 'list' in 'polyroot'
> f(l0)
complex(0)
> f(c0)
Error in f(c0) : unimplemented type 'character' in 'polyroot'
> f(m0)
complex(0)
> f(df0)
Error in f(df0) : unimplemented type 'list' in 'polyroot'
> f(FALSE)
complex(0)
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  pos.to.env  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("pos.to.env", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'pos.to.env' which requires 1
> f(NULL)
Error in f(NULL) : invalid 'pos' argument
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'pos.to.env' which requires 1
> f(list())
Error in f(list()) : invalid 'pos' argument
> f(l0)
Error in f(l0) : invalid 'pos' argument
> f(c0)
Error in f(c0) : invalid 'pos' argument
> f(m0)
Error in f(m0) : invalid 'pos' argument
> f(df0)
Error in f(df0) : invalid 'pos' argument
> f(FALSE)
Error in f(FALSE) : invalid 'pos' argument
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'pos.to.env' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'pos.to.env' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'pos.to.env' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'pos.to.env' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'pos.to.env' which requires 1
> 
> ##  pretty  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("pretty", pos = 'package:base')
> f()
Error in pretty.default() : argument "x" is missing, with no default
Calls: f -> pretty.default
> f(NULL)
NULL
> f(,NULL)
Error in pretty.default(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> pretty.default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
data frame with 0 columns and 0 rows
> f(FALSE)
[1] -1  0
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
data frame with 0 columns and 0 rows
> f(FALSE,FALSE)
[1] 0
> 
> ##  pretty.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("pretty.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
data frame with 0 columns and 0 rows
> f(FALSE)
[1] -1  0
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
data frame with 0 columns and 0 rows
> f(FALSE,FALSE)
[1] 0
> 
> ##  prettyNum  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("prettyNum", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in if (nMark && nZero) return(x) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
Error in vapply(x, format, "", big.mark = big.mark, big.interval = big.interval,  : 
  values must be length 1,
 but FUN(X[[1]]) result is length 0
Calls: f -> vapply
> f(FALSE)
[1] "FALSE"
> f(list(),list())
Error in if (nMark && nZero) return(x) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0,l0)
Error in if (nMark && nZero) return(x) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0,c0)
Error in if (nMark && nZero) return(x) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0,df0)
Error in vapply(x, format, "", big.mark = big.mark, big.interval = big.interval,  : 
  values must be length 1,
 but FUN(X[[1]]) result is length 0
Calls: f -> vapply
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  print  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print", pos = 'package:base')
> f()
Error in print.default() : argument "x" is missing, with no default
Calls: f -> print.default
> f(NULL)
NULL
> f(,NULL)
Error in print.default(, NULL) : argument "x" is missing, with no default
Calls: f -> print.default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in print.default(list(), list()) : invalid 'digits' argument
Calls: f -> print.default
> f(l0,l0)
Error in print.default(l0, l0) : invalid 'digits' argument
Calls: f -> print.default
> f(c0,c0)
Error in print.default(c0, c0) : invalid 'digits' argument
Calls: f -> print.default
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  print.AsIs  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.AsIs", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in NextMethod("print") : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in NextMethod("print") : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod("print") : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod("print") : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod("print") : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod("print") : object not specified
Calls: f -> NextMethod
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in NextMethod("print") : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod("print") : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod("print") : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod("print") : object not specified
Calls: f -> NextMethod
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in NextMethod("print") : object not specified
Calls: f -> NextMethod
> 
> ##  print.DLLInfo  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.DLLInfo", pos = 'package:base')
> f()
Error in match(names(formals(data.frame))[-1L], col.names, 0L) : 
  argument "x" is missing, with no default
Calls: f -> as.data.frame.list -> match
> f(NULL)
Error in f(NULL) : 
  'names' attribute [3] must be the same length as the vector [0]
> f(,NULL)
Error in match(names(formals(data.frame))[-1L], col.names, 0L) : 
  argument "x" is missing, with no default
Calls: f -> as.data.frame.list -> match
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  'names' attribute [3] must be the same length as the vector [0]
> f(list())
Error in f(list()) : 
  'names' attribute [3] must be the same length as the vector [0]
> f(l0)
> f(c0)
> f(m0)
> f(df0)
Error in `[.data.frame`(x, c("name", "path", "dynamicLookup")) : 
  undefined columns selected
Calls: f -> as.data.frame.list -> match -> [ -> [.data.frame
> f(FALSE)
> f(list(),list())
Error in f(list(), list()) : 
  'names' attribute [3] must be the same length as the vector [0]
> f(l0,l0)
Error in if (file == "") file <- stdout() else if (is.character(file)) { : 
  argument is of length zero
Calls: f -> write.dcf
> f(c0,c0)
Error in if (file == "") file <- stdout() else if (is.character(file)) { : 
  argument is of length zero
Calls: f -> write.dcf
> f(df0,df0)
Error in `[.data.frame`(x, c("name", "path", "dynamicLookup")) : 
  undefined columns selected
Calls: f -> as.data.frame.list -> match -> [ -> [.data.frame
> f(FALSE,FALSE)
Error in write.dcf(tmp, ...) : 
  'file' must be a character string or connection
Calls: f -> write.dcf
> 
> ##  print.DLLInfoList  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.DLLInfoList", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
Error in `[[.default`(x, "path") : subscript out of bounds
Calls: f ... sapply -> lapply -> FUN -> [[ -> [[.factor -> NextMethod
> f(FALSE)
Error in x[["path"]] : subscript out of bounds
Calls: f -> data.frame -> sapply -> lapply -> FUN
> f(list(),list())
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
Error in `[[.default`(x, "path") : subscript out of bounds
Calls: f ... sapply -> lapply -> FUN -> [[ -> [[.factor -> NextMethod
> f(FALSE,FALSE)
Error in x[["path"]] : subscript out of bounds
Calls: f -> data.frame -> sapply -> lapply -> FUN
> 
> ##  print.DLLRegisteredRoutines  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.DLLRegisteredRoutines", pos = 'package:base')
> f()
Error in lengths(x) : argument "x" is missing, with no default
Calls: f -> lengths
> f(NULL)
data frame with 0 columns and 0 rows
Warning message:
In max(n) : no non-missing arguments to max; returning -Inf
> f(,NULL)
Error in lengths(x) : argument "x" is missing, with no default
Calls: f -> lengths
> f(NULL,NULL)
data frame with 0 columns and 0 rows
Warning message:
In max(n) : no non-missing arguments to max; returning -Inf
> f(list())
data frame with 0 columns and 0 rows
Warning message:
In max(n) : no non-missing arguments to max; returning -Inf
> f(l0)
data frame with 0 columns and 0 rows
Warning message:
In max(n) : no non-missing arguments to max; returning -Inf
> f(c0)
data frame with 0 columns and 0 rows
Warning message:
In max(n) : no non-missing arguments to max; returning -Inf
> f(m0)
data frame with 0 columns and 0 rows
Warning message:
In max(n) : no non-missing arguments to max; returning -Inf
> f(df0)
data frame with 0 columns and 0 rows
> f(FALSE)
data frame with 0 columns and 0 rows
> f(list(),list())
data frame with 0 columns and 0 rows
Warning message:
In max(n) : no non-missing arguments to max; returning -Inf
> f(l0,l0)
data frame with 0 columns and 0 rows
Warning message:
In max(n) : no non-missing arguments to max; returning -Inf
> f(c0,c0)
data frame with 0 columns and 0 rows
Warning message:
In max(n) : no non-missing arguments to max; returning -Inf
> f(df0,df0)
data frame with 0 columns and 0 rows
> f(FALSE,FALSE)
data frame with 0 columns and 0 rows
> 
> ##  print.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.Date", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] "FALSE"
> f(list(),list())
Error in if (max < length(x)) { : argument is of length zero
Calls: f
> f(l0,l0)
Error in if (max < length(x)) { : argument is of length zero
Calls: f
> f(c0,c0)
Error in if (max < length(x)) { : argument is of length zero
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<' not meaningful for factors
> f(FALSE,FALSE)
character(0)
 [ reached getOption("max.print") -- omitted 1 entries ]
> 
> ##  print.Dlist  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.Dlist", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list())
Error in formatDL(x, ...) : incorrect value for 'x'
Calls: f -> cat -> formatDL
> f(l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(m0)
Error in formatDL(x, ...) : incorrect value for 'x'
Calls: f -> cat -> formatDL
> f(df0)
Error in formatDL(x, ...) : incorrect value for 'x'
Calls: f -> cat -> formatDL
> f(FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in formatDL(x, ...) : incorrect value for 'x'
Calls: f -> cat -> formatDL
> f(l0,l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in formatDL(x, ...) : incorrect value for 'x'
Calls: f -> cat -> formatDL
> f(FALSE,FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> 
> ##  print.NativeRoutineList  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.NativeRoutineList", pos = 'package:base')
> f()
Error in lapply(X = X, FUN = FUN, ...) : 
  argument "x" is missing, with no default
Calls: f -> data.frame -> sapply -> lapply
> f(NULL)
data frame with 0 columns and 0 rows
> f(,NULL)
Error in lapply(X = X, FUN = FUN, ...) : 
  argument "x" is missing, with no default
Calls: f -> data.frame -> sapply -> lapply
> f(NULL,NULL)
data frame with 0 columns and 0 rows
> f(list())
data frame with 0 columns and 0 rows
> f(l0)
data frame with 0 columns and 0 rows
> f(c0)
data frame with 0 columns and 0 rows
> f(m0)
data frame with 0 columns and 0 rows
> f(df0)
Error: $ operator is invalid for atomic vectors
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
data frame with 0 columns and 0 rows
> f(l0,l0)
data frame with 0 columns and 0 rows
> f(c0,c0)
data frame with 0 columns and 0 rows
> f(df0,df0)
Error: $ operator is invalid for atomic vectors
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  print.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.POSIXct", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] "FALSE"
> f(list(),list())
Error in print.default(format(x, usetz = TRUE), ...) : 
  invalid 'digits' argument
Calls: f -> print -> print.default
> f(l0,l0)
Error in print.default(format(x, usetz = TRUE), ...) : 
  invalid 'digits' argument
Calls: f -> print -> print.default
> f(c0,c0)
Error in print.default(format(x, usetz = TRUE), ...) : 
  invalid 'digits' argument
Calls: f -> print -> print.default
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  print.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.POSIXlt", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] "FALSE"
> f(list(),list())
Error in print.default(format(x, usetz = TRUE), ...) : 
  invalid 'digits' argument
Calls: f -> print -> print.default
> f(l0,l0)
Error in print.default(format(x, usetz = TRUE), ...) : 
  invalid 'digits' argument
Calls: f -> print -> print.default
> f(c0,c0)
Error in print.default(format(x, usetz = TRUE), ...) : 
  invalid 'digits' argument
Calls: f -> print -> print.default
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  print.by  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.by", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
: NA
: NA
factor(0)
Levels: 
> f(FALSE)
[1] FALSE
> f(list(),list())
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
: NA
: NA
factor(0)
Error in encodeString(levels(x), quote = ifelse(quote, "\"", "")) : 
  invalid 'quote' value
Calls: f ... lapply -> FUN -> print -> print.factor -> encodeString
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  print.condition  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.condition", pos = 'package:base')
> f()
Error in conditionMessage(x) : argument "x" is missing, with no default
Calls: f -> conditionMessage
> f(NULL)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "NULL"
Calls: f -> conditionMessage
> f(,NULL)
Error in conditionMessage(x) : argument "x" is missing, with no default
Calls: f -> conditionMessage
> f(NULL,NULL)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "NULL"
Calls: f -> conditionMessage
> f(list())
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "list"
Calls: f -> conditionMessage
> f(l0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f -> conditionMessage
> f(c0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "character"
Calls: f -> conditionMessage
> f(m0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f -> conditionMessage
> f(df0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "data.frame"
Calls: f -> conditionMessage
> f(FALSE)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f -> conditionMessage
> f(list(),list())
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "list"
Calls: f -> conditionMessage
> f(l0,l0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f -> conditionMessage
> f(c0,c0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "character"
Calls: f -> conditionMessage
> f(df0,df0)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "data.frame"
Calls: f -> conditionMessage
> f(FALSE,FALSE)
Error in UseMethod("conditionMessage") : 
  no applicable method for 'conditionMessage' applied to an object of class "logical"
Calls: f -> conditionMessage
> 
> ##  print.connection  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.connection", pos = 'package:base')
> f()
Error in summary(x) : argument "x" is missing, with no default
Calls: f -> print -> unlist -> summary
> f(NULL)
Length  Class   Mode 
     0   NULL   NULL 
> f(,NULL)
Error in summary(x) : argument "x" is missing, with no default
Calls: f -> print -> unlist -> summary
> f(NULL,NULL)
Length  Class   Mode 
     0   NULL   NULL 
> f(list())
Length  Class   Mode 
     0   list   list 
> f(l0)
   Mode    NA's 
logical       0 
> f(c0)
   Length     Class      Mode 
        0 character character 
> f(m0)
< table of extent 0 x 0 >
> f(df0)
< table of extent 0 x 1 >
> f(FALSE)
   Mode   FALSE    NA's 
logical       1       0 
> f(list(),list())
Length  Class   Mode 
     0   list   list 
> f(l0,l0)
   Mode    NA's 
logical       0 
> f(c0,c0)
   Length     Class      Mode 
        0 character character 
> f(df0,df0)
< table of extent 0 x 1 >
> f(FALSE,FALSE)
   Mode   FALSE    NA's 
logical       1       0 
> 
> ##  print.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.data.frame", pos = 'package:base')
> f()
Error in row.names(x) : argument "x" is missing, with no default
Calls: f -> row.names
> f(NULL)
data frame with 0 columns and 0 rows
> f(,NULL)
Error in row.names(x) : argument "x" is missing, with no default
Calls: f -> row.names
> f(NULL,NULL)
data frame with 0 columns and 0 rows
> f(list())
data frame with 0 columns and 0 rows
> f(l0)
data frame with 0 columns and 0 rows
> f(c0)
data frame with 0 columns and 0 rows
> f(m0)
data frame with 0 columns and 0 rows
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
NULL
<0 rows> (or 0-length row.names)
> f(list(),list())
data frame with 0 columns and 0 rows
> f(l0,l0)
data frame with 0 columns and 0 rows
> f(c0,c0)
data frame with 0 columns and 0 rows
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
NULL
<0 rows> (or 0-length row.names)
> 
> ##  print.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
$c0
factor(0)
Levels: 

attr(,"class")
[1] "data.frame"
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : invalid 'digits' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'digits' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'digits' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'digits' argument
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  print.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.difftime", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Time difference of NULL 
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Time difference of NULL 
> f(list())
Time difference of  
> f(l0)
Time difference of  
> f(c0)
Time difference of  
> f(m0)
Time differences in 
<0 x 0 matrix>
> f(df0)
Time difference of  
> f(FALSE)
Time difference of FALSE 
> f(list(),list())
Time difference of  
> f(l0,l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'digits' argument
Calls: f -> cat -> format -> format.default -> prettyNum
> f(c0,c0)
Error in format.default(unclass(x), digits = digits) : 
  invalid 'digits' argument
Calls: f -> cat -> format -> format.default
> f(df0,df0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'digits' argument
Calls: f ... format.default -> lapply -> FUN -> format.default -> prettyNum
> f(FALSE,FALSE)
Time difference of FALSE 
> 
> ##  print.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.factor", pos = 'package:base')
> f()
Error in is.ordered(x) : argument "x" is missing, with no default
Calls: f -> is.ordered
> f(NULL)
factor(0)
Levels: 
> f(,NULL)
Error in is.ordered(x) : argument "x" is missing, with no default
Calls: f -> is.ordered
> f(NULL,NULL)
factor(0)
Error in encodeString(levels(x), quote = ifelse(quote, "\"", "")) : 
  invalid 'quote' value
Calls: f -> encodeString
> f(list())
factor(0)
Levels: 
> f(l0)
factor(0)
Levels: 
> f(c0)
factor(0)
Levels: 
> f(m0)
factor(0)
Levels: 
> f(df0)
$c0
[1] integer(0)

attr(,"row.names")
character(0)
Levels: 
> f(FALSE)
[1] FALSE
Levels: 
> f(list(),list())
factor(0)
Error in encodeString(levels(x), quote = ifelse(quote, "\"", "")) : 
  invalid 'quote' value
Calls: f -> encodeString
> f(l0,l0)
factor(0)
Error in encodeString(levels(x), quote = ifelse(quote, "\"", "")) : 
  invalid 'quote' value
Calls: f -> encodeString
> f(c0,c0)
factor(0)
Error in encodeString(levels(x), quote = ifelse(quote, "\"", "")) : 
  invalid 'quote' value
Calls: f -> encodeString
> f(df0,df0)
Error in print.default(xx, quote = quote, ...) : invalid 'quote' argument
Calls: f -> print -> print.default
> f(FALSE,FALSE)
[1] FALSE
Levels: 
> 
> ##  print.function  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.function", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in print.function(x, useSource, ...) : 
  non-function argument to .Internal(print.function(.))
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in print.function(x, useSource, ...) : 
  non-function argument to .Internal(print.function(.))
Calls: f
> f(list())
Error in print.function(x, useSource, ...) : 
  non-function argument to .Internal(print.function(.))
Calls: f
> f(l0)
Error in print.function(x, useSource, ...) : 
  non-function argument to .Internal(print.function(.))
Calls: f
> f(c0)
Error in print.function(x, useSource, ...) : 
  non-function argument to .Internal(print.function(.))
Calls: f
> f(m0)
Error in print.function(x, useSource, ...) : 
  non-function argument to .Internal(print.function(.))
Calls: f
> f(df0)
Error in print.function(x, useSource, ...) : 
  non-function argument to .Internal(print.function(.))
Calls: f
> f(FALSE)
Error in print.function(x, useSource, ...) : 
  non-function argument to .Internal(print.function(.))
Calls: f
> f(list(),list())
Error in print.function(x, useSource, ...) : 
  non-function argument to .Internal(print.function(.))
Calls: f
> f(l0,l0)
Error in print.function(x, useSource, ...) : 
  non-function argument to .Internal(print.function(.))
Calls: f
> f(c0,c0)
Error in print.function(x, useSource, ...) : 
  non-function argument to .Internal(print.function(.))
Calls: f
> f(df0,df0)
Error in print.function(x, useSource, ...) : 
  non-function argument to .Internal(print.function(.))
Calls: f
> f(FALSE,FALSE)
Error in print.function(x, useSource, ...) : 
  non-function argument to .Internal(print.function(.))
Calls: f
> 
> ##  print.hexmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.hexmode", pos = 'package:base')
> f()
Error in format(x) : argument "x" is missing, with no default
Calls: f -> print -> format
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in format(x) : argument "x" is missing, with no default
Calls: f -> print -> format
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] "FALSE"
> f(list(),list())
Error in print.default(format(x), ...) : invalid 'digits' argument
Calls: f -> print -> print.default
> f(l0,l0)
Error in print.default(format(x), ...) : invalid 'digits' argument
Calls: f -> print -> print.default
> f(c0,c0)
Error in print.default(format(x), ...) : invalid 'digits' argument
Calls: f -> print -> print.default
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  print.libraryIQR  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.libraryIQR", pos = 'package:base')
> f()
Error in format(x) : argument "x" is missing, with no default
Calls: f -> format
> f(NULL)
NULL

> f(,NULL)
Error in format(x) : argument "x" is missing, with no default
Calls: f -> format
> f(NULL,NULL)
NULL

> f(list())
no packages found
> f(l0)
no packages found
> f(c0)
no packages found
> f(m0)
no packages found
> f(df0)
Error in writeLines(s, outFile) : invalid 'text' argument
Calls: f -> writeLines
> f(FALSE)
FALSE

> f(list(),list())
no packages found
> f(l0,l0)
no packages found
> f(c0,c0)
no packages found
> f(df0,df0)
Error in writeLines(s, outFile) : invalid 'text' argument
Calls: f -> writeLines
> f(FALSE,FALSE)
FALSE

> 
> ##  print.listof  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.listof", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
c0 :
factor(0)
Levels: 

> f(FALSE)
Component 1 :
[1] FALSE

> f(list(),list())
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
c0 :
factor(0)
Error in encodeString(levels(x), quote = ifelse(quote, "\"", "")) : 
  invalid 'quote' value
Calls: f -> print -> print.factor -> encodeString
> f(FALSE,FALSE)
Component 1 :
[1] FALSE

> 
> ##  print.noquote  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.noquote", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in print.default(x, quote = FALSE, ...) : invalid 'digits' argument
Calls: f -> print -> print.default
> f(l0,l0)
Error in print.default(x, quote = FALSE, ...) : invalid 'digits' argument
Calls: f -> print -> print.default
> f(c0,c0)
Error in print.default(x, quote = FALSE, ...) : invalid 'digits' argument
Calls: f -> print -> print.default
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  print.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.numeric_version", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
<0 elements>
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
<0 elements>
> f(list())
<0 elements>
> f(l0)
<0 elements>
> f(c0)
<0 elements>
> f(m0)
<0 elements>
> f(df0)
[1] 'integer(0)'
> f(FALSE)
[1] 'FALSE'
> f(list(),list())
<0 elements>
> f(l0,l0)
<0 elements>
> f(c0,c0)
<0 elements>
> f(df0,df0)
Error in print.default(x, quote = FALSE, ...) : invalid 'digits' argument
Calls: f -> print -> print.noquote -> print -> print.default
> f(FALSE,FALSE)
[1] 'FALSE'
> 
> ##  print.octmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.octmode", pos = 'package:base')
> f()
Error in format(x) : argument "x" is missing, with no default
Calls: f -> print -> format
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in format(x) : argument "x" is missing, with no default
Calls: f -> print -> format
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] "FALSE"
> f(list(),list())
Error in print.default(format(x), ...) : invalid 'digits' argument
Calls: f -> print -> print.default
> f(l0,l0)
Error in print.default(format(x), ...) : invalid 'digits' argument
Calls: f -> print -> print.default
> f(c0,c0)
Error in print.default(format(x), ...) : invalid 'digits' argument
Calls: f -> print -> print.default
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  print.packageInfo  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.packageInfo", pos = 'package:base')
> f()
Error in format(x) : argument "x" is missing, with no default
Calls: f -> writeLines -> format
> f(NULL)
NULL

> f(,NULL)
Error in format(x) : argument "x" is missing, with no default
Calls: f -> writeLines -> format
> f(NULL,NULL)
NULL

> f(list())

> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
Error in writeLines(format(x), outFile) : invalid 'text' argument
Calls: f -> writeLines
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())

> f(l0,l0)
Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Error: $ operator is invalid for atomic vectors
> f(df0,df0)
Error in writeLines(format(x), outFile) : invalid 'text' argument
Calls: f -> writeLines
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  print.proc_time  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.proc_time", pos = 'package:base')
> f()
Error in summary(x, ...) : argument "x" is missing, with no default
Calls: f -> print -> summary
> f(NULL)
Length  Class   Mode 
     0   NULL   NULL 
> f(,NULL)
Error in summary(x, ...) : argument "x" is missing, with no default
Calls: f -> print -> summary
> f(NULL,NULL)
Length  Class   Mode 
     0   NULL   NULL 
> f(list())
Length  Class   Mode 
     0   list   list 
> f(l0)
   Mode    NA's 
logical       0 
> f(c0)
   Length     Class      Mode 
        0 character character 
> f(m0)
< table of extent 0 x 0 >
> f(df0)
< table of extent 0 x 1 >
> f(FALSE)
   Mode   FALSE    NA's 
logical       1       0 
> f(list(),list())
Length  Class   Mode 
     0   list   list 
> f(l0,l0)
   Mode    NA's 
logical       0 
> f(c0,c0)
   Length     Class      Mode 
        0 character character 
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f ... lapply -> FUN -> summary.factor -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '>' not meaningful for factors
> f(FALSE,FALSE)
   Mode   FALSE    NA's 
logical       1       0 
> 
> ##  print.restart  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.restart", pos = 'package:base')
> f()
Error in paste("<restart:", x[[1L]], ">\n") : 
  argument "x" is missing, with no default
Calls: f -> cat -> paste
> f(NULL)
<restart:  >
> f(,NULL)
Error in paste("<restart:", x[[1L]], ">\n") : 
  argument "x" is missing, with no default
Calls: f -> cat -> paste
> f(NULL,NULL)
<restart:  >
> f(list())
Error in x[[1L]] : subscript out of bounds
Calls: f -> cat -> paste
> f(l0)
Error in x[[1L]] : subscript out of bounds
Calls: f -> cat -> paste
> f(c0)
Error in x[[1L]] : subscript out of bounds
Calls: f -> cat -> paste
> f(m0)
Error in x[[1L]] : subscript out of bounds
Calls: f -> cat -> paste
> f(df0)
<restart:  >
> f(FALSE)
<restart: FALSE >
> f(list(),list())
Error in x[[1L]] : subscript out of bounds
Calls: f -> cat -> paste
> f(l0,l0)
Error in x[[1L]] : subscript out of bounds
Calls: f -> cat -> paste
> f(c0,c0)
Error in x[[1L]] : subscript out of bounds
Calls: f -> cat -> paste
> f(df0,df0)
<restart:  >
> f(FALSE,FALSE)
<restart: FALSE >
> 
> ##  print.rle  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.rle", pos = 'package:base')
> f()
Run Length Encoding
  lengths:Error in utils::str(x$lengths) : argument "x" is missing, with no default
Calls: f -> <Anonymous>
> f(NULL)
Run Length Encoding
  lengths: NULL
  values : NULL
> f(,NULL)
Run Length Encoding
  lengths:Error in utils::str(x$lengths) : argument "x" is missing, with no default
Calls: f -> <Anonymous>
> f(NULL,NULL)
Run Length Encoding
  lengths: NULL
  values : NULL
> f(list())
Run Length Encoding
  lengths: NULL
  values : NULL
> f(l0)
Run Length Encoding
  lengths:Error: $ operator is invalid for atomic vectors
> f(c0)
Run Length Encoding
  lengths:Error: $ operator is invalid for atomic vectors
> f(m0)
Run Length Encoding
  lengths:Error: $ operator is invalid for atomic vectors
> f(df0)
Run Length Encoding
  lengths: NULL
  values : NULL
> f(FALSE)
Run Length Encoding
  lengths:Error: $ operator is invalid for atomic vectors
> f(list(),list())
Run Length Encoding
  lengths: NULL
  values :Error in options(digits = digits.d) : 
  invalid 'digits' parameter, allowed 0...22
Calls: f -> <Anonymous> -> str.default -> options
> f(l0,l0)
Run Length Encoding
  lengths:Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Run Length Encoding
  lengths:Error: $ operator is invalid for atomic vectors
> f(df0,df0)
Run Length Encoding
  lengths: NULL
  values :Error in options(digits = digits.d) : 
  invalid 'digits' parameter, allowed 0...22
Calls: f -> <Anonymous> -> str.default -> options
> f(FALSE,FALSE)
Run Length Encoding
  lengths:Error: $ operator is invalid for atomic vectors
> 
> ##  print.simple.list  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.simple.list", pos = 'package:base')
> f()
Error in unlist(x) : argument "x" is missing, with no default
Calls: f -> print -> noquote -> cbind -> unlist
> f(NULL)
Error in noquote(cbind(`_` = unlist(x))) : 
  attempt to set an attribute on NULL
Calls: f -> print -> noquote
> f(,NULL)
Error in unlist(x) : argument "x" is missing, with no default
Calls: f -> print -> noquote -> cbind -> unlist
> f(NULL,NULL)
Error in noquote(cbind(`_` = unlist(x))) : 
  attempt to set an attribute on NULL
Calls: f -> print -> noquote
> f(list())
Error in noquote(cbind(`_` = unlist(x))) : 
  attempt to set an attribute on NULL
Calls: f -> print -> noquote
> f(l0)
     _
> f(c0)
     _
> f(m0)
<0 x 0 matrix>
> f(df0)
     _
> f(FALSE)
         _
[1,] FALSE
> f(list(),list())
Error in noquote(cbind(`_` = unlist(x))) : 
  attempt to set an attribute on NULL
Calls: f -> print -> noquote
> f(l0,l0)
Error in print.default(x, quote = FALSE, ...) : invalid 'digits' argument
Calls: f -> print -> print.noquote -> print -> print.default
> f(c0,c0)
Error in print.default(x, quote = FALSE, ...) : invalid 'digits' argument
Calls: f -> print -> print.noquote -> print -> print.default
> f(df0,df0)
Error in print.default(x, quote = FALSE, ...) : invalid 'digits' argument
Calls: f -> print -> print.noquote -> print -> print.default
> f(FALSE,FALSE)
         _
[1,] FALSE
> 
> ##  print.srcfile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.srcfile", pos = 'package:base')
> f()
Error in cat(x$filename, "\n") : argument "x" is missing, with no default
Calls: f -> cat
> f(NULL)
 
> f(,NULL)
Error in cat(x$filename, "\n") : argument "x" is missing, with no default
Calls: f -> cat
> f(NULL,NULL)
 
> f(list())
 
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
 
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
 
> f(l0,l0)
Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Error: $ operator is invalid for atomic vectors
> f(df0,df0)
 
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  print.srcref  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.srcref", pos = 'package:base')
> f()
Error in cat(as.character(x, useSource = useSource), sep = "\n") : 
  argument "x" is missing, with no default
Calls: f -> cat
> f(NULL)

> f(,NULL)
Error in cat(as.character(x, useSource = useSource), sep = "\n") : 
  argument "x" is missing, with no default
Calls: f -> cat
> f(NULL,NULL)

> f(list())

> f(l0)

> f(c0)

> f(m0)

> f(df0)
integer(0)
> f(FALSE)
FALSE
> f(list(),list())

> f(l0,l0)

> f(c0,c0)

> f(df0,df0)
integer(0)
> f(FALSE,FALSE)
FALSE
> 
> ##  print.summary.table  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.summary.table", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'x' must inherit from class "summary.table"
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'x' must inherit from class "summary.table"
> f(list())
Error in f(list()) : 'x' must inherit from class "summary.table"
> f(l0)
Error in f(l0) : 'x' must inherit from class "summary.table"
> f(c0)
Error in f(c0) : 'x' must inherit from class "summary.table"
> f(m0)
Error in f(m0) : 'x' must inherit from class "summary.table"
> f(df0)
Error in f(df0) : 'x' must inherit from class "summary.table"
> f(FALSE)
Error in f(FALSE) : 'x' must inherit from class "summary.table"
> f(list(),list())
Error in f(list(), list()) : 'x' must inherit from class "summary.table"
> f(l0,l0)
Error in f(l0, l0) : 'x' must inherit from class "summary.table"
> f(c0,c0)
Error in f(c0, c0) : 'x' must inherit from class "summary.table"
> f(df0,df0)
Error in f(df0, df0) : 'x' must inherit from class "summary.table"
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'x' must inherit from class "summary.table"
> 
> ##  print.summaryDefault  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.summaryDefault", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : attempt to set an attribute on NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : attempt to set an attribute on NULL
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
< table of extent 0 x 0 >
> f(df0)
c0 
   
> f(FALSE)
[1] FALSE
> f(list(),list())
character(0)
> f(l0,l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'digits' argument
Calls: f ... print.table -> format -> format.default -> prettyNum
> f(c0,c0)
Error in format.default(unclass(x), digits = digits, justify = justify) : 
  invalid 'digits' argument
Calls: f -> print.table -> format -> format.default
> f(df0,df0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'digits' argument
Calls: f ... format.default -> lapply -> FUN -> format.default -> prettyNum
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  print.table  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.table", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] NULL
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
[1] NULL
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
< table of extent 0 x 0 >
> f(df0)
< table of extent 0 x 1 >
> f(FALSE)
[1] FALSE
> f(list(),list())
character(0)
> f(l0,l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'digits' argument
Calls: f -> format -> format.default -> prettyNum
> f(c0,c0)
Error in format.default(unclass(x), digits = digits, justify = justify) : 
  invalid 'digits' argument
Calls: f -> format -> format.default
> f(df0,df0)
< table of extent 0 x 1 >
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  print.warnings  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("print.warnings", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
Warning message:
c0
> f(FALSE)
Warning message:
Error in strsplit(msgs[i], "\n") : non-character argument
Calls: f -> strsplit
> f(list(),list())
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
Warning message:
c0
> f(FALSE,FALSE)
Warning message:
Error in strsplit(msgs[i], "\n") : non-character argument
Calls: f -> strsplit
> 
> ##  prmatrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("prmatrix", pos = 'package:base')
> f()
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(list())
Error in f(list()) : unimplemented type 'list' in 'printMatrix'
> f(l0)
     [,1]
> f(c0)
     [,1]
> f(m0)
<0 x 0 matrix>
> f(df0)
     c0
> f(FALSE)
      [,1]
[1,] FALSE
> f(list(),list())
Error in f(list(), list()) : unimplemented type 'list' in 'printMatrix'
> f(l0,l0)
     [,1]
> f(c0,c0)
     [,1]
> f(df0,df0)
Error in f(df0, df0) : invalid row labels
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid row labels
> 
> ##  proc.time  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("proc.time", pos = 'package:base')
> f()
   user  system elapsed 
  1.300   0.104   1.420 
> f(NULL)
Error in f(NULL) : 1 argument passed to 'proc.time' which requires 0
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'proc.time' which requires 0
> f(list())
Error in f(list()) : 1 argument passed to 'proc.time' which requires 0
> f(l0)
Error in f(l0) : 1 argument passed to 'proc.time' which requires 0
> f(c0)
Error in f(c0) : 1 argument passed to 'proc.time' which requires 0
> f(m0)
Error in f(m0) : 1 argument passed to 'proc.time' which requires 0
> f(df0)
Error in f(df0) : 1 argument passed to 'proc.time' which requires 0
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'proc.time' which requires 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'proc.time' which requires 0
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'proc.time' which requires 0
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'proc.time' which requires 0
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'proc.time' which requires 0
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'proc.time' which requires 0
> 
> ##  prod  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("prod", pos = 'package:base')
> f()
[1] 1
> f(NULL)
[1] 1
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
[1] 1
> f(list())
Error in f(list()) : invalid 'type' (list) of argument
> f(l0)
[1] 1
> f(c0)
Error in f(c0) : invalid 'type' (character) of argument
> f(m0)
[1] 1
> f(df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : invalid 'type' (list) of argument
> f(l0,l0)
[1] 1
> f(c0,c0)
Error in f(c0, c0) : invalid 'type' (character) of argument
> f(df0,df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE,FALSE)
[1] 0
> 
> ##  prop.table  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("prop.table", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
numeric(0)
> f(list())
Error in sum(x) : invalid 'type' (list) of argument
Calls: f
> f(l0)
numeric(0)
> f(c0)
Error in sum(x) : invalid 'type' (character) of argument
Calls: f
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: f -> Summary.data.frame -> lapply -> FUN
> f(FALSE)
[1] NaN
> f(list(),list())
Error in sum(x) : invalid 'type' (list) of argument
Calls: f
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in sum(x) : invalid 'type' (character) of argument
Calls: f
> f(df0,df0)
Error in seq_along(dims)[-MARGIN] : invalid subscript type 'list'
Calls: f -> sweep
In addition: Warning message:
In Ops.factor(left) : '-' not meaningful for factors
> f(FALSE,FALSE)
Error in margin.table(x, margin) : 'x' is not an array
Calls: f -> sweep -> aperm -> array -> margin.table
> 
> ##  provideDimnames  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("provideDimnames", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : attempt to set an attribute on NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : attempt to set an attribute on NULL
> f(list())
Error in f(list()) : 'dimnames' applied to non-array
> f(l0)
Error in f(l0) : 'dimnames' applied to non-array
> f(c0)
Error in f(c0) : 'dimnames' applied to non-array
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in f(FALSE) : 'dimnames' applied to non-array
> f(list(),list())
Error in f(list(), list()) : 'dimnames' applied to non-array
> f(l0,l0)
Error in f(l0, l0) : 'dimnames' applied to non-array
> f(c0,c0)
Error in f(c0, c0) : 'dimnames' applied to non-array
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'dimnames' applied to non-array
> 
> ##  psigamma  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("psigamma", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in psigamma(x, deriv) : 
  non-numeric argument to mathematical function
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in psigamma(x, deriv) : 
  non-numeric argument to mathematical function
Calls: f
> f(list())
Error in psigamma(x, deriv) : 
  non-numeric argument to mathematical function
Calls: f
> f(l0)
numeric(0)
> f(c0)
Error in psigamma(x, deriv) : 
  non-numeric argument to mathematical function
Calls: f
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in psigamma(x, deriv) : 
  non-numeric argument to mathematical function
Calls: f
> f(FALSE)
[1] NaN
Warning message:
In f(FALSE) : NaNs produced
> f(list(),list())
Error in psigamma(x, deriv) : 
  non-numeric argument to mathematical function
Calls: f
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in psigamma(x, deriv) : 
  non-numeric argument to mathematical function
Calls: f
> f(df0,df0)
Error in psigamma(x, deriv) : 
  non-numeric argument to mathematical function
Calls: f
> f(FALSE,FALSE)
[1] NaN
Warning message:
In f(FALSE, FALSE) : NaNs produced
> 
> ##  pushBack  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("pushBack", pos = 'package:base')
> f()
Error in f() : argument "data" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "connection" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "data" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'data' argument
> f(list())
Error in f(list()) : argument "connection" is missing, with no default
> f(l0)
Error in f(l0) : argument "connection" is missing, with no default
> f(c0)
Error in f(c0) : argument "connection" is missing, with no default
> f(m0)
Error in f(m0) : argument "connection" is missing, with no default
> f(df0)
Error in f(df0) : argument "connection" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "connection" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'data' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'data' argument
> f(c0,c0)
Error in f(c0, c0) : invalid connection
> f(df0,df0)
Error in f(df0, df0) : invalid 'data' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'data' argument
> 
> ##  pushBackLength  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("pushBackLength", pos = 'package:base')
> f()
Error in f() : argument "connection" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid connection
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid connection
> f(l0)
Error in f(l0) : invalid connection
> f(c0)
Error in f(c0) : invalid connection
> f(m0)
Error in f(m0) : invalid connection
> f(df0)
Error in f(df0) : invalid connection
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  qr  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("qr", pos = 'package:base')
> f()
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> qr.default -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... qr.default -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> qr.default -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... qr.default -> as.matrix -> as.matrix.default -> array
> f(list())
$qr
     [,1]

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(l0)
$qr
     [,1]

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(c0)
$qr
     [,1]

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(m0)
$qr
<0 x 0 matrix>

$rank
[1] 0

$qraux
numeric(0)

$pivot
integer(0)

attr(,"class")
[1] "qr"
> f(df0)
$qr
     c0

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(FALSE)
$qr
     [,1]
[1,]    0

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(list(),list())
$qr
     [,1]

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(l0,l0)
$qr
     [,1]

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(c0,c0)
$qr
     [,1]

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(df0,df0)
Error in qr.default(df0, df0) : 
  NA/NaN/Inf in foreign function call (arg 5)
Calls: f -> qr.default
> f(FALSE,FALSE)
$qr
     [,1]
[1,]    0

$rank
[1] 1

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> 
> ##  qr.Q  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("qr.Q", pos = 'package:base')
> f()
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL)
Error in f(NULL) : argument is not a QR decomposition
> f(,NULL)
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL,NULL)
Error in f(NULL, NULL) : argument is not a QR decomposition
> f(list())
Error in f(list()) : argument is not a QR decomposition
> f(l0)
Error in f(l0) : argument is not a QR decomposition
> f(c0)
Error in f(c0) : argument is not a QR decomposition
> f(m0)
Error in f(m0) : argument is not a QR decomposition
> f(df0)
Error in f(df0) : argument is not a QR decomposition
> f(FALSE)
Error in f(FALSE) : argument is not a QR decomposition
> f(list(),list())
Error in f(list(), list()) : argument is not a QR decomposition
> f(l0,l0)
Error in f(l0, l0) : argument is not a QR decomposition
> f(c0,c0)
Error in f(c0, c0) : argument is not a QR decomposition
> f(df0,df0)
Error in f(df0, df0) : argument is not a QR decomposition
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument is not a QR decomposition
> 
> ##  qr.R  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("qr.R", pos = 'package:base')
> f()
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL)
Error in f(NULL) : argument is not a QR decomposition
> f(,NULL)
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL,NULL)
Error in f(NULL, NULL) : argument is not a QR decomposition
> f(list())
Error in f(list()) : argument is not a QR decomposition
> f(l0)
Error in f(l0) : argument is not a QR decomposition
> f(c0)
Error in f(c0) : argument is not a QR decomposition
> f(m0)
Error in f(m0) : argument is not a QR decomposition
> f(df0)
Error in f(df0) : argument is not a QR decomposition
> f(FALSE)
Error in f(FALSE) : argument is not a QR decomposition
> f(list(),list())
Error in f(list(), list()) : argument is not a QR decomposition
> f(l0,l0)
Error in f(l0, l0) : argument is not a QR decomposition
> f(c0,c0)
Error in f(c0, c0) : argument is not a QR decomposition
> f(df0,df0)
Error in f(df0, df0) : argument is not a QR decomposition
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument is not a QR decomposition
> 
> ##  qr.X  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("qr.X", pos = 'package:base')
> f()
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL)
Error in f(NULL) : argument is not a QR decomposition
> f(,NULL)
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL,NULL)
Error in f(NULL, NULL) : argument is not a QR decomposition
> f(list())
Error in f(list()) : argument is not a QR decomposition
> f(l0)
Error in f(l0) : argument is not a QR decomposition
> f(c0)
Error in f(c0) : argument is not a QR decomposition
> f(m0)
Error in f(m0) : argument is not a QR decomposition
> f(df0)
Error in f(df0) : argument is not a QR decomposition
> f(FALSE)
Error in f(FALSE) : argument is not a QR decomposition
> f(list(),list())
Error in f(list(), list()) : argument is not a QR decomposition
> f(l0,l0)
Error in f(l0, l0) : argument is not a QR decomposition
> f(c0,c0)
Error in f(c0, c0) : argument is not a QR decomposition
> f(df0,df0)
Error in f(df0, df0) : argument is not a QR decomposition
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument is not a QR decomposition
> 
> ##  qr.coef  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("qr.coef", pos = 'package:base')
> f()
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL)
Error in f(NULL) : first argument must be a QR decomposition
> f(,NULL)
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL,NULL)
Error in f(NULL, NULL) : first argument must be a QR decomposition
> f(list())
Error in f(list()) : first argument must be a QR decomposition
> f(l0)
Error in f(l0) : first argument must be a QR decomposition
> f(c0)
Error in f(c0) : first argument must be a QR decomposition
> f(m0)
Error in f(m0) : first argument must be a QR decomposition
> f(df0)
Error in f(df0) : first argument must be a QR decomposition
> f(FALSE)
Error in f(FALSE) : first argument must be a QR decomposition
> f(list(),list())
Error in f(list(), list()) : first argument must be a QR decomposition
> f(l0,l0)
Error in f(l0, l0) : first argument must be a QR decomposition
> f(c0,c0)
Error in f(c0, c0) : first argument must be a QR decomposition
> f(df0,df0)
Error in f(df0, df0) : first argument must be a QR decomposition
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : first argument must be a QR decomposition
> 
> ##  qr.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("qr.default", pos = 'package:base')
> f()
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(list())
$qr
     [,1]

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(l0)
$qr
     [,1]

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(c0)
$qr
     [,1]

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(m0)
$qr
<0 x 0 matrix>

$rank
[1] 0

$qraux
numeric(0)

$pivot
integer(0)

attr(,"class")
[1] "qr"
> f(df0)
$qr
     c0

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(FALSE)
$qr
     [,1]
[1,]    0

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(list(),list())
$qr
     [,1]

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(l0,l0)
$qr
     [,1]

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(c0,c0)
$qr
     [,1]

$rank
[1] 0

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> f(df0,df0)
Error in f(df0, df0) : NA/NaN/Inf in foreign function call (arg 5)
> f(FALSE,FALSE)
$qr
     [,1]
[1,]    0

$rank
[1] 1

$qraux
[1] 0

$pivot
[1] 1

attr(,"class")
[1] "qr"
> 
> ##  qr.fitted  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("qr.fitted", pos = 'package:base')
> f()
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL)
Error in f(NULL) : argument is not a QR decomposition
> f(,NULL)
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL,NULL)
Error in f(NULL, NULL) : argument is not a QR decomposition
> f(list())
Error in f(list()) : argument is not a QR decomposition
> f(l0)
Error in f(l0) : argument is not a QR decomposition
> f(c0)
Error in f(c0) : argument is not a QR decomposition
> f(m0)
Error in f(m0) : argument is not a QR decomposition
> f(df0)
Error in f(df0) : argument is not a QR decomposition
> f(FALSE)
Error in f(FALSE) : argument is not a QR decomposition
> f(list(),list())
Error in f(list(), list()) : argument is not a QR decomposition
> f(l0,l0)
Error in f(l0, l0) : argument is not a QR decomposition
> f(c0,c0)
Error in f(c0, c0) : argument is not a QR decomposition
> f(df0,df0)
Error in f(df0, df0) : argument is not a QR decomposition
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument is not a QR decomposition
> 
> ##  qr.qty  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("qr.qty", pos = 'package:base')
> f()
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL)
Error in f(NULL) : argument is not a QR decomposition
> f(,NULL)
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL,NULL)
Error in f(NULL, NULL) : argument is not a QR decomposition
> f(list())
Error in f(list()) : argument is not a QR decomposition
> f(l0)
Error in f(l0) : argument is not a QR decomposition
> f(c0)
Error in f(c0) : argument is not a QR decomposition
> f(m0)
Error in f(m0) : argument is not a QR decomposition
> f(df0)
Error in f(df0) : argument is not a QR decomposition
> f(FALSE)
Error in f(FALSE) : argument is not a QR decomposition
> f(list(),list())
Error in f(list(), list()) : argument is not a QR decomposition
> f(l0,l0)
Error in f(l0, l0) : argument is not a QR decomposition
> f(c0,c0)
Error in f(c0, c0) : argument is not a QR decomposition
> f(df0,df0)
Error in f(df0, df0) : argument is not a QR decomposition
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument is not a QR decomposition
> 
> ##  qr.qy  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("qr.qy", pos = 'package:base')
> f()
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL)
Error in f(NULL) : argument is not a QR decomposition
> f(,NULL)
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL,NULL)
Error in f(NULL, NULL) : argument is not a QR decomposition
> f(list())
Error in f(list()) : argument is not a QR decomposition
> f(l0)
Error in f(l0) : argument is not a QR decomposition
> f(c0)
Error in f(c0) : argument is not a QR decomposition
> f(m0)
Error in f(m0) : argument is not a QR decomposition
> f(df0)
Error in f(df0) : argument is not a QR decomposition
> f(FALSE)
Error in f(FALSE) : argument is not a QR decomposition
> f(list(),list())
Error in f(list(), list()) : argument is not a QR decomposition
> f(l0,l0)
Error in f(l0, l0) : argument is not a QR decomposition
> f(c0,c0)
Error in f(c0, c0) : argument is not a QR decomposition
> f(df0,df0)
Error in f(df0, df0) : argument is not a QR decomposition
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument is not a QR decomposition
> 
> ##  qr.resid  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("qr.resid", pos = 'package:base')
> f()
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL)
Error in f(NULL) : argument is not a QR decomposition
> f(,NULL)
Error in is.qr(qr) : argument "qr" is missing, with no default
Calls: f -> is.qr
> f(NULL,NULL)
Error in f(NULL, NULL) : argument is not a QR decomposition
> f(list())
Error in f(list()) : argument is not a QR decomposition
> f(l0)
Error in f(l0) : argument is not a QR decomposition
> f(c0)
Error in f(c0) : argument is not a QR decomposition
> f(m0)
Error in f(m0) : argument is not a QR decomposition
> f(df0)
Error in f(df0) : argument is not a QR decomposition
> f(FALSE)
Error in f(FALSE) : argument is not a QR decomposition
> f(list(),list())
Error in f(list(), list()) : argument is not a QR decomposition
> f(l0,l0)
Error in f(l0, l0) : argument is not a QR decomposition
> f(c0,c0)
Error in f(c0, c0) : argument is not a QR decomposition
> f(df0,df0)
Error in f(df0, df0) : argument is not a QR decomposition
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument is not a QR decomposition
> 
> ##  qr.solve  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("qr.solve", pos = 'package:base')
> f()
Error in is.qr(a) : argument "a" is missing, with no default
Calls: f -> is.qr
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... qr.default -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in is.qr(a) : argument "a" is missing, with no default
Calls: f -> is.qr
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... qr.default -> as.matrix -> as.matrix.default -> array
> f(list())
Error in f(list()) : only square matrices can be inverted
> f(l0)
Error in f(l0) : only square matrices can be inverted
> f(c0)
Error in f(c0) : only square matrices can be inverted
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : only square matrices can be inverted
> f(FALSE)
Error in f(FALSE) : singular matrix 'a' in solve
> f(list(),list())
[1] 0
> f(l0,l0)
[1] 0
> f(c0,c0)
[1] 0
> f(df0,df0)
[1] 0
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : singular matrix 'a' in solve
> 
> ##  quarters  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("quarters", pos = 'package:base')
> f()
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "character"
Calls: f
> f(df0,df0)
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "data.frame"
Calls: f
> f(FALSE,FALSE)
Error in UseMethod("quarters") : 
  no applicable method for 'quarters' applied to an object of class "logical"
Calls: f
> 
> ##  quarters.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("quarters.Date", pos = 'package:base')
> f()
Error in as.POSIXlt(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXlt
> f(NULL)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(,NULL)
Error in as.POSIXlt(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXlt
> f(NULL,NULL)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(list())
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(l0)
[1] "Q"
> f(c0)
[1] "Q"
> f(m0)
Error in as.POSIXlt.numeric(x) : 'origin' must be supplied
Calls: f -> as.POSIXlt -> as.POSIXlt.numeric
> f(df0)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(FALSE)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(list(),list())
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(l0,l0)
[1] "Q"
> f(c0,c0)
[1] "Q"
> f(df0,df0)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(FALSE,FALSE)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> 
> ##  quarters.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("quarters.POSIXt", pos = 'package:base')
> f()
Error in as.POSIXlt(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXlt
> f(NULL)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(,NULL)
Error in as.POSIXlt(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXlt
> f(NULL,NULL)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(list())
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(l0)
[1] "Q"
> f(c0)
[1] "Q"
> f(m0)
Error in as.POSIXlt.numeric(x) : 'origin' must be supplied
Calls: f -> as.POSIXlt -> as.POSIXlt.numeric
> f(df0)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(FALSE)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(list(),list())
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(l0,l0)
[1] "Q"
> f(c0,c0)
[1] "Q"
> f(df0,df0)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(FALSE,FALSE)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> 
> ##  quote  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("quote", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'quote' which requires 1
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : 2 arguments passed to 'quote' which requires 1
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'quote' which requires 1
> f(list())
list()
> f(l0)
l0
> f(c0)
c0
> f(m0)
m0
> f(df0)
df0
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'quote' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'quote' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'quote' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'quote' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'quote' which requires 1
> 
> ##  range  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("range", pos = 'package:base')
> f()
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(NULL)
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(list())
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(l0)
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(c0)
[1] NA NA
Warning messages:
1: In min(x, na.rm = na.rm) : no non-missing arguments, returning NA
2: In max(x, na.rm = na.rm) : no non-missing arguments, returning NA
> f(m0)
[1]  Inf -Inf
Warning messages:
1: In min(x) : no non-missing arguments to min; returning Inf
2: In max(x) : no non-missing arguments to max; returning -Inf
> f(df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE)
[1] 0 0
> f(list(),list())
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(l0,l0)
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(c0,c0)
[1] NA NA
Warning messages:
1: In min(x, na.rm = na.rm) : no non-missing arguments, returning NA
2: In max(x, na.rm = na.rm) : no non-missing arguments, returning NA
> f(df0,df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE,FALSE)
[1] 0 0
> 
> ##  range.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("range.default", pos = 'package:base')
> f()
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(NULL)
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(,NULL)
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(NULL,NULL)
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(list())
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(l0)
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(c0)
[1] NA NA
Warning messages:
1: In min(x, na.rm = na.rm) : no non-missing arguments, returning NA
2: In max(x, na.rm = na.rm) : no non-missing arguments, returning NA
> f(m0)
[1]  Inf -Inf
Warning messages:
1: In min(x) : no non-missing arguments to min; returning Inf
2: In max(x) : no non-missing arguments to max; returning -Inf
> f(df0)
[1]  Inf -Inf
Warning messages:
1: In min(x) : no non-missing arguments to min; returning Inf
2: In max(x) : no non-missing arguments to max; returning -Inf
> f(FALSE)
[1] 0 0
> f(list(),list())
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(l0,l0)
[1]  Inf -Inf
Warning messages:
1: In min(x, na.rm = na.rm) :
  no non-missing arguments to min; returning Inf
2: In max(x, na.rm = na.rm) :
  no non-missing arguments to max; returning -Inf
> f(c0,c0)
[1] NA NA
Warning messages:
1: In min(x, na.rm = na.rm) : no non-missing arguments, returning NA
2: In max(x, na.rm = na.rm) : no non-missing arguments, returning NA
> f(df0,df0)
[1]  Inf -Inf
Warning messages:
1: In min(x) : no non-missing arguments to min; returning Inf
2: In max(x) : no non-missing arguments to max; returning -Inf
> f(FALSE,FALSE)
[1] 0 0
> 
> ##  rank  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rank", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
numeric(0)
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
numeric(0)
Warning messages:
1: In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
2: In is.na(na.last) :
  is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
numeric(0)
> f(l0)
numeric(0)
> f(c0)
numeric(0)
> f(m0)
numeric(0)
> f(df0)
named numeric(0)
> f(FALSE)
[1] 1
> f(list(),list())
numeric(0)
> f(l0,l0)
numeric(0)
> f(c0,c0)
numeric(0)
> f(df0,df0)
named numeric(0)
> f(FALSE,FALSE)
[1] 1
> 
> ##  rapply  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rapply", pos = 'package:base')
> f()
Error in f() : argument "object" is missing, with no default
> f(NULL)
Error in f(NULL) : 'object' must be a list
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'object' must be a list
> f(list())
Error in f(list()) : argument "f" is missing, with no default
> f(l0)
Error in f(l0) : 'object' must be a list
> f(c0)
Error in f(c0) : 'object' must be a list
> f(m0)
Error in f(m0) : 'object' must be a list
> f(df0)
Error in f(df0) : argument "f" is missing, with no default
> f(FALSE)
Error in f(FALSE) : 'object' must be a list
> f(list(),list())
Error in f(list(), list()) : invalid 'f' argument
> f(l0,l0)
Error in f(l0, l0) : 'object' must be a list
> f(c0,c0)
Error in f(c0, c0) : 'object' must be a list
> f(df0,df0)
Error in f(df0, df0) : invalid 'f' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'object' must be a list
> 
> ##  raw  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("raw", pos = 'package:base')
> f()
raw(0)
> f(NULL)
Error in f(NULL) : invalid 'length' argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'length' argument
> f(l0)
Error in f(l0) : invalid 'length' argument
> f(c0)
Error in f(c0) : invalid 'length' argument
> f(m0)
Error in f(m0) : invalid 'length' argument
> f(df0)
Error in f(df0) : invalid 'length' argument
> f(FALSE)
Error in f(FALSE) : invalid 'length' argument
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  rawConnection  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rawConnection", pos = 'package:base')
> f()
Error in f() : argument "object" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'raw' argument
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'open' argument
> f(list())
Error in f(list()) : invalid 'raw' argument
> f(l0)
Error in f(l0) : invalid 'raw' argument
> f(c0)
Error in f(c0) : invalid 'raw' argument
> f(m0)
Error in f(m0) : invalid 'raw' argument
> f(df0)
Error in f(df0) : invalid 'raw' argument
> f(FALSE)
Error in f(FALSE) : invalid 'raw' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'open' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'open' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'open' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'open' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'open' argument
> 
> ##  rawConnectionValue  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rawConnectionValue", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in f(NULL) : 'con' is not a rawConnection
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : 'con' is not a rawConnection
> f(l0)
Error in f(l0) : 'con' is not a rawConnection
> f(c0)
Error in f(c0) : 'con' is not a rawConnection
> f(m0)
Error in f(m0) : 'con' is not a rawConnection
> f(df0)
Error in f(df0) : 'con' is not a rawConnection
> f(FALSE)
Error in f(FALSE) : 'con' is not a rawConnection
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  rawShift  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rawShift", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "n" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument 'x' must be a raw vector
> f(list())
Error in f(list()) : argument "n" is missing, with no default
> f(l0)
Error in f(l0) : argument "n" is missing, with no default
> f(c0)
Error in f(c0) : argument "n" is missing, with no default
> f(m0)
Error in f(m0) : argument "n" is missing, with no default
> f(df0)
Error in f(df0) : argument "n" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "n" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument 'x' must be a raw vector
> f(l0,l0)
Error in f(l0, l0) : argument 'x' must be a raw vector
> f(c0,c0)
Error in f(c0, c0) : argument 'x' must be a raw vector
> f(df0,df0)
Error in f(df0, df0) : argument 'x' must be a raw vector
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument 'x' must be a raw vector
> 
> ##  rawToBits  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rawToBits", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument 'x' must be a raw vector
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : argument 'x' must be a raw vector
> f(l0)
Error in f(l0) : argument 'x' must be a raw vector
> f(c0)
Error in f(c0) : argument 'x' must be a raw vector
> f(m0)
Error in f(m0) : argument 'x' must be a raw vector
> f(df0)
Error in f(df0) : argument 'x' must be a raw vector
> f(FALSE)
Error in f(FALSE) : argument 'x' must be a raw vector
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  rawToChar  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rawToChar", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument 'x' must be a raw vector
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument 'x' must be a raw vector
> f(list())
Error in f(list()) : argument 'x' must be a raw vector
> f(l0)
Error in f(l0) : argument 'x' must be a raw vector
> f(c0)
Error in f(c0) : argument 'x' must be a raw vector
> f(m0)
Error in f(m0) : argument 'x' must be a raw vector
> f(df0)
Error in f(df0) : argument 'x' must be a raw vector
> f(FALSE)
Error in f(FALSE) : argument 'x' must be a raw vector
> f(list(),list())
Error in f(list(), list()) : argument 'x' must be a raw vector
> f(l0,l0)
Error in f(l0, l0) : argument 'x' must be a raw vector
> f(c0,c0)
Error in f(c0, c0) : argument 'x' must be a raw vector
> f(df0,df0)
Error in f(df0, df0) : argument 'x' must be a raw vector
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument 'x' must be a raw vector
> 
> ##  rbind  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rbind", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
    
[1,]
> f(l0)
  
l0
> f(c0)
  
c0
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
      [,1]
[1,] FALSE
> f(list(),list())
    
[1,]
[2,]
> f(l0,l0)
  
l0
l0
> f(c0,c0)
  
c0
c0
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
      [,1]
[1,] FALSE
[2,] FALSE
> 
> ##  rbind.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rbind.data.frame", pos = 'package:base')
> f()
data frame with 0 columns and 0 rows
> f(NULL)
data frame with 0 columns and 0 rows
> f(,NULL)
data frame with 0 columns and 0 rows
> f(NULL,NULL)
data frame with 0 columns and 0 rows
> f(list())
data frame with 0 columns and 0 rows
> f(l0)
data frame with 0 columns and 0 rows
> f(c0)
data frame with 0 columns and 0 rows
> f(m0)
data frame with 0 columns and 0 rows
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
  FALSE.
1  FALSE
> f(list(),list())
data frame with 0 columns and 0 rows
> f(l0,l0)
data frame with 0 columns and 0 rows
> f(c0,c0)
data frame with 0 columns and 0 rows
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
  c.FALSE..FALSE.
1           FALSE
2           FALSE
> 
> ##  rcond  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rcond", pos = 'package:base')
> f()
Error in stopifnot(is.matrix(x)) : 
  argument "x" is missing, with no default
Calls: f -> stopifnot
> f(NULL)
Error: is.matrix(x) is not TRUE
> f(,NULL)
Error in stopifnot(is.matrix(x)) : 
  argument "x" is missing, with no default
Calls: f -> stopifnot
> f(NULL,NULL)
Error: is.matrix(x) is not TRUE
> f(list())
Error: is.matrix(x) is not TRUE
> f(l0)
Error: is.matrix(x) is not TRUE
> f(c0)
Error: is.matrix(x) is not TRUE
> f(m0)
Error in f(m0) : BLAS/LAPACK routine 'DGETRF' gave error code -4
> f(df0)
Error: is.matrix(x) is not TRUE
> f(FALSE)
Error: is.matrix(x) is not TRUE
> f(list(),list())
Error in match.arg(norm) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(l0,l0)
Error in match.arg(norm) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(c0,c0)
Error in match.arg(norm) : 'arg' should be one of "O", "I", "1"
Calls: f -> match.arg
> f(df0,df0)
Error in match.arg(norm) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(FALSE,FALSE)
Error in match.arg(norm) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> 
> ##  read.dcf  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("read.dcf", pos = 'package:base')
> f()
Error in f() : argument "file" is missing, with no default
> f(NULL)
Error in f(NULL) : 'file' must be a character string or connection
> f(,NULL)
Error in f(, NULL) : argument "file" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'file' must be a character string or connection
> f(list())
Error in f(list()) : 'file' must be a character string or connection
> f(l0)
Error in f(l0) : 'file' must be a character string or connection
> f(c0)
Error in gzfile(file) : invalid 'description' argument
Calls: f -> gzfile
> f(m0)
Error in f(m0) : 'file' must be a character string or connection
> f(df0)
Error in f(df0) : 'file' must be a character string or connection
> f(FALSE)
Error in f(FALSE) : 'file' must be a character string or connection
> f(list(),list())
Error in f(list(), list()) : 
  'file' must be a character string or connection
> f(l0,l0)
Error in f(l0, l0) : 'file' must be a character string or connection
> f(c0,c0)
Error in gzfile(file) : invalid 'description' argument
Calls: f -> gzfile
> f(df0,df0)
Error in f(df0, df0) : 'file' must be a character string or connection
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'file' must be a character string or connection
> 
> ##  readBin  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("readBin", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "what" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "con" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid connection
> f(list())
Error in f(list()) : argument "what" is missing, with no default
> f(l0)
Error in f(l0) : argument "what" is missing, with no default
> f(c0)
Error in file(con, "rb") : invalid 'description' argument
Calls: f -> file
> f(m0)
Error in f(m0) : argument "what" is missing, with no default
> f(df0)
Error in f(df0) : argument "what" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "what" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid connection
> f(l0,l0)
Error in f(l0, l0) : invalid connection
> f(c0,c0)
Error in file(con, "rb") : invalid 'description' argument
Calls: f -> file
> f(df0,df0)
Error in f(df0, df0) : invalid connection
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : can only read from a binary connection
> 
> ##  readChar  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("readChar", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "nchars" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "con" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid connection
> f(list())
Error in f(list()) : argument "nchars" is missing, with no default
> f(l0)
Error in f(l0) : argument "nchars" is missing, with no default
> f(c0)
Error in file(con, "rb") : invalid 'description' argument
Calls: f -> file
> f(m0)
Error in f(m0) : argument "nchars" is missing, with no default
> f(df0)
Error in f(df0) : argument "nchars" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "nchars" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid connection
> f(l0,l0)
Error in f(l0, l0) : invalid connection
> f(c0,c0)
Error in file(con, "rb") : invalid 'description' argument
Calls: f -> file
> f(df0,df0)
Error in f(df0, df0) : invalid connection
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'read' not enabled for this connection
> 
> ##  readRDS  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("readRDS", pos = 'package:base')
> f()
Error in f() : argument "file" is missing, with no default
> f(NULL)
Error in f(NULL) : bad 'file' argument
> f(,NULL)
Error in f(, NULL) : argument "file" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : bad 'file' argument
> f(list())
Error in f(list()) : bad 'file' argument
> f(l0)
Error in f(l0) : bad 'file' argument
> f(c0)
Error in gzfile(file, "rb") : invalid 'description' argument
Calls: f -> gzfile
> f(m0)
Error in f(m0) : bad 'file' argument
> f(df0)
Error in f(df0) : bad 'file' argument
> f(FALSE)
Error in f(FALSE) : bad 'file' argument
> f(list(),list())
Error in f(list(), list()) : bad 'file' argument
> f(l0,l0)
Error in f(l0, l0) : bad 'file' argument
> f(c0,c0)
Error in gzfile(file, "rb") : invalid 'description' argument
Calls: f -> gzfile
> f(df0,df0)
Error in f(df0, df0) : bad 'file' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : bad 'file' argument
> 
> ##  readRenviron  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("readRenviron", pos = 'package:base')
> f()
Error in f() : argument "path" is missing, with no default
> f(NULL)
Error in readRenviron(path) : argument 'x' must be a character string
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in readRenviron(path) : argument 'x' must be a character string
Calls: f
> f(l0)
Error in readRenviron(path) : argument 'x' must be a character string
Calls: f
> f(c0)
Error in readRenviron(path) : argument 'x' must be a character string
Calls: f
> f(m0)
Error in readRenviron(path) : argument 'x' must be a character string
Calls: f
> f(df0)
Error in readRenviron(path) : argument 'x' must be a character string
Calls: f
> f(FALSE)
Error in readRenviron(path) : argument 'x' must be a character string
Calls: f
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  readline  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("readline", pos = 'package:base')
> f()

[1] ""
> f(NULL)

[1] ""
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())

[1] ""
> f(l0)

[1] ""
> f(c0)

[1] ""
> f(m0)

[1] ""
> f(df0)
integer(0)
[1] ""
> f(FALSE)
FALSE
[1] ""
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  reg.finalizer  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("reg.finalizer", pos = 'package:base')
> f()
Error in f() : argument "e" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "f" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "e" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  first argument must be environment or external pointer
> f(list())
Error in f(list()) : argument "f" is missing, with no default
> f(l0)
Error in f(l0) : argument "f" is missing, with no default
> f(c0)
Error in f(c0) : argument "f" is missing, with no default
> f(m0)
Error in f(m0) : argument "f" is missing, with no default
> f(df0)
Error in f(df0) : argument "f" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "f" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : 
  first argument must be environment or external pointer
> f(l0,l0)
Error in f(l0, l0) : 
  first argument must be environment or external pointer
> f(c0,c0)
Error in f(c0, c0) : 
  first argument must be environment or external pointer
> f(df0,df0)
Error in f(df0, df0) : 
  first argument must be environment or external pointer
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  first argument must be environment or external pointer
> 
> ##  regexec  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("regexec", pos = 'package:base')
> f()
Error in f() : argument "pattern" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "text" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "pattern" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'pattern' argument
> f(list())
Error in f(list()) : argument "text" is missing, with no default
> f(l0)
Error in f(l0) : argument "text" is missing, with no default
> f(c0)
Error in f(c0) : argument "text" is missing, with no default
> f(m0)
Error in f(m0) : argument "text" is missing, with no default
> f(df0)
Error in f(df0) : argument "text" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "text" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'pattern' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'pattern' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'pattern' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'pattern' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'pattern' argument
> 
> ##  regexpr  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("regexpr", pos = 'package:base')
> f()
Error in f() : argument "text" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "text" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "pattern" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'pattern' argument
> f(list())
Error in f(list()) : argument "text" is missing, with no default
> f(l0)
Error in f(l0) : argument "text" is missing, with no default
> f(c0)
Error in f(c0) : argument "text" is missing, with no default
> f(m0)
Error in f(m0) : argument "text" is missing, with no default
> f(df0)
Error in f(df0) : argument "text" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "text" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'pattern' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'pattern' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'pattern' argument
> f(df0,df0)
[1] -1
attr(,"match.length")
[1] -1
attr(,"useBytes")
[1] TRUE
> f(FALSE,FALSE)
[1] 1
attr(,"match.length")
[1] 5
attr(,"useBytes")
[1] TRUE
> 
> ##  registerS3method  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("registerS3method", pos = 'package:base')
> f()
Error in match(x, table, nomatch = 0L) : 
  argument "genname" is missing, with no default
Calls: f -> %in% -> match
> f(NULL)
Error in if (genname %in% groupGenerics) .BaseNamespaceEnv else { : 
  argument is of length zero
Calls: f
> f(,NULL)
Error in match(x, table, nomatch = 0L) : 
  argument "genname" is missing, with no default
Calls: f -> %in% -> match
> f(NULL,NULL)
Error in if (genname %in% groupGenerics) .BaseNamespaceEnv else { : 
  argument is of length zero
Calls: f
> f(list())
Error in if (genname %in% groupGenerics) .BaseNamespaceEnv else { : 
  argument is of length zero
Calls: f
> f(l0)
Error in if (genname %in% groupGenerics) .BaseNamespaceEnv else { : 
  argument is of length zero
Calls: f
> f(c0)
Error in if (genname %in% groupGenerics) .BaseNamespaceEnv else { : 
  argument is of length zero
Calls: f
> f(m0)
Error in if (genname %in% groupGenerics) .BaseNamespaceEnv else { : 
  argument is of length zero
Calls: f
> f(df0)
Error in get(genname, envir = envir) : invalid first argument
Calls: f -> get
> f(FALSE)
Error in get(genname, envir = envir) : invalid first argument
Calls: f -> get
> f(list(),list())
Error in if (genname %in% groupGenerics) .BaseNamespaceEnv else { : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (genname %in% groupGenerics) .BaseNamespaceEnv else { : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (genname %in% groupGenerics) .BaseNamespaceEnv else { : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in get(genname, envir = envir) : invalid first argument
Calls: f -> get
> f(FALSE,FALSE)
Error in get(genname, envir = envir) : invalid first argument
Calls: f -> get
> 
> ##  registerS3methods  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("registerS3methods", pos = 'package:base')
> f()
Error in NROW(info) : argument "info" is missing, with no default
Calls: f -> NROW
> f(NULL)
NULL
> f(,NULL)
Error in NROW(info) : argument "info" is missing, with no default
Calls: f -> NROW
> f(NULL,NULL)
NULL
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
Error in info[, 1] : incorrect number of dimensions
Calls: f -> paste
> f(list(),list())
NULL
> f(l0,l0)
NULL
> f(c0,c0)
NULL
> f(df0,df0)
NULL
> f(FALSE,FALSE)
Error in info[, 1] : incorrect number of dimensions
Calls: f -> paste
> 
> ##  regmatches  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("regmatches", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "m" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
character(0)
Warning message:
In is.na(m) : is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
Error in f(list()) : argument "m" is missing, with no default
> f(l0)
Error in f(l0) : argument "m" is missing, with no default
> f(c0)
Error in f(c0) : argument "m" is missing, with no default
> f(m0)
Error in f(m0) : argument "m" is missing, with no default
> f(df0)
Error in f(df0) : argument "m" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "m" is missing, with no default
> f(list(),list())
list()
> f(l0,l0)
character(0)
> f(c0,c0)
Error in so + attr(m, "match.length")[ind] : 
  non-numeric argument to binary operator
Calls: f
> f(df0,df0)
$c0
character(0)

Warning message:
In Ops.factor(so, ml) : '+' not meaningful for factors
> f(FALSE,FALSE)
Error in substring(x[ind], so, eo) : invalid substring arguments
Calls: f -> substring
> 
> ##  regmatches<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("regmatches<-", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in f(df0) : argument "m" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "m" is missing, with no default
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in (function (u, so, ml)  : 'nchar()' requires a character vector
Calls: f -> regmatches -> Map -> mapply -> <Anonymous>
In addition: Warning messages:
1: In Ops.factor(so, ml) : '+' not meaningful for factors
2: In Ops.factor(so, 1L) : '-' not meaningful for factors
> f(FALSE,FALSE)
Error in mapply(FUN = f, ..., SIMPLIFY = FALSE) : 
  zero-length inputs cannot be mixed with those of non-zero length
Calls: f -> regmatches -> Map -> mapply
> 
> ##  removeTaskCallback  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("removeTaskCallback", pos = 'package:base')
> f()
Error in f() : argument "id" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
Error in f(FALSE) : negative index passed to R_removeTaskCallbackByIndex
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  rep  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rep", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
$c0
factor(0)
Levels: 

> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : invalid 'times' argument
> f(FALSE,FALSE)
logical(0)
> 
> ##  rep.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rep.Date", pos = 'package:base')
> f()
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(NULL,NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(df0)
Error in NextMethod() : generic function not specified
Calls: f -> NextMethod
> f(FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in NextMethod() : generic function not specified
Calls: f -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> 
> ##  rep.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rep.POSIXct", pos = 'package:base')
> f()
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(NULL,NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(df0)
Error in NextMethod() : generic function not specified
Calls: f -> NextMethod
> f(FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in NextMethod() : generic function not specified
Calls: f -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> 
> ##  rep.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rep.POSIXlt", pos = 'package:base')
> f()
Error in lapply(X = x, FUN = rep, ...) : 
  argument "x" is missing, with no default
Calls: f -> lapply
> f(NULL)
list()
> f(,NULL)
Error in lapply(X = x, FUN = rep, ...) : 
  argument "x" is missing, with no default
Calls: f -> lapply
> f(NULL,NULL)
list()
> f(list())
list()
> f(l0)
list()
> f(c0)
list()
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[[1]]
[1] FALSE

> f(list(),list())
list()
> f(l0,l0)
list()
> f(c0,c0)
list()
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[[1]]
logical(0)

> 
> ##  rep.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rep.factor", pos = 'package:base')
> f()
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(NULL,NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(df0)
Error in NextMethod() : generic function not specified
Calls: f -> NextMethod
> f(FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in NextMethod() : generic function not specified
Calls: f -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> 
> ##  rep.int  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rep.int", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "times" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : incorrect type for second argument
> f(list())
Error in f(list()) : argument "times" is missing, with no default
> f(l0)
Error in f(l0) : argument "times" is missing, with no default
> f(c0)
Error in f(c0) : argument "times" is missing, with no default
> f(m0)
Error in f(m0) : argument "times" is missing, with no default
> f(df0)
Error in f(df0) : argument "times" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "times" is missing, with no default
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : invalid 'times' value
> f(FALSE,FALSE)
logical(0)
> 
> ##  rep.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rep.numeric_version", pos = 'package:base')
> f()
Error in structure(NextMethod("rep"), class = oldClass(x)) : 
  argument "x" is missing, with no default
Calls: f -> structure
> f(NULL)
Error in NextMethod("rep") : object not specified
Calls: f -> structure -> NextMethod
> f(,NULL)
Error in structure(NextMethod("rep"), class = oldClass(x)) : 
  argument "x" is missing, with no default
Calls: f -> structure
> f(NULL,NULL)
Error in NextMethod("rep") : object not specified
Calls: f -> structure -> NextMethod
> f(list())
Error in NextMethod("rep") : object not specified
Calls: f -> structure -> NextMethod
> f(l0)
Error in NextMethod("rep") : object not specified
Calls: f -> structure -> NextMethod
> f(c0)
Error in NextMethod("rep") : object not specified
Calls: f -> structure -> NextMethod
> f(m0)
Error in NextMethod("rep") : object not specified
Calls: f -> structure -> NextMethod
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in NextMethod("rep") : object not specified
Calls: f -> structure -> NextMethod
> f(list(),list())
Error in NextMethod("rep") : object not specified
Calls: f -> structure -> NextMethod
> f(l0,l0)
Error in NextMethod("rep") : object not specified
Calls: f -> structure -> NextMethod
> f(c0,c0)
Error in NextMethod("rep") : object not specified
Calls: f -> structure -> NextMethod
> f(df0,df0)
Error in rep.default(df0, df0) : invalid 'times' argument
Calls: f -> structure -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod("rep") : object not specified
Calls: f -> structure -> NextMethod
> 
> ##  rep_len  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rep_len", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "length.out" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'length.out' value
> f(list())
Error in f(list()) : argument "length.out" is missing, with no default
> f(l0)
Error in f(l0) : argument "length.out" is missing, with no default
> f(c0)
Error in f(c0) : argument "length.out" is missing, with no default
> f(m0)
Error in f(m0) : argument "length.out" is missing, with no default
> f(df0)
Error in f(df0) : argument "length.out" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "length.out" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'length.out' value
> f(l0,l0)
Error in f(l0, l0) : invalid 'length.out' value
> f(c0,c0)
Error in f(c0, c0) : invalid 'length.out' value
> f(df0,df0)
Error in f(df0, df0) : invalid 'length.out' value
> f(FALSE,FALSE)
logical(0)
> 
> ##  replace  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("replace", pos = 'package:base')
> f()
Error in f() : argument "values" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "values" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "values" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "values" is missing, with no default
> f(list())
Error in f(list()) : argument "values" is missing, with no default
> f(l0)
Error in f(l0) : argument "values" is missing, with no default
> f(c0)
Error in f(c0) : argument "values" is missing, with no default
> f(m0)
Error in f(m0) : argument "values" is missing, with no default
> f(df0)
Error in f(df0) : argument "values" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "values" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : 
  argument "values" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "values" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "values" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "values" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "values" is missing, with no default
> 
> ##  replicate  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("replicate", pos = 'package:base')
> f()
Error in integer(n) : argument "n" is missing, with no default
Calls: f -> sapply -> lapply -> integer
> f(NULL)
Error in integer(n) : invalid 'length' argument
Calls: f -> sapply -> lapply -> integer
> f(,NULL)
Error in integer(n) : argument "n" is missing, with no default
Calls: f -> sapply -> lapply -> integer
> f(NULL,NULL)
Error in integer(n) : invalid 'length' argument
Calls: f -> sapply -> lapply -> integer
> f(list())
Error in integer(n) : invalid 'length' argument
Calls: f -> sapply -> lapply -> integer
> f(l0)
Error in integer(n) : invalid 'length' argument
Calls: f -> sapply -> lapply -> integer
> f(c0)
Error in integer(n) : invalid 'length' argument
Calls: f -> sapply -> lapply -> integer
> f(m0)
Error in integer(n) : invalid 'length' argument
Calls: f -> sapply -> lapply -> integer
> f(df0)
Error in integer(n) : invalid 'length' argument
Calls: f -> sapply -> lapply -> integer
> f(FALSE)
Error in integer(n) : invalid 'length' argument
Calls: f -> sapply -> lapply -> integer
> f(list(),list())
Error in integer(n) : invalid 'length' argument
Calls: f -> sapply -> lapply -> integer
> f(l0,l0)
Error in integer(n) : invalid 'length' argument
Calls: f -> sapply -> lapply -> integer
> f(c0,c0)
Error in integer(n) : invalid 'length' argument
Calls: f -> sapply -> lapply -> integer
> f(df0,df0)
Error in integer(n) : invalid 'length' argument
Calls: f -> sapply -> lapply -> integer
> f(FALSE,FALSE)
Error in integer(n) : invalid 'length' argument
Calls: f -> sapply -> lapply -> integer
> 
> ##  require  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("require", pos = 'package:base')
> f()
Loading required package: 
Failed with error:  'invalid package name'
> f(NULL)
character(0)
Failed with error:  ''package' must be of length 1'
> f(,NULL)
Loading required package: 
Failed with error:  'invalid package name'
> f(NULL,NULL)
character(0)
Failed with error:  ''package' must be of length 1'
> f(list())
Loading required package: list
Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called 'list'
> f(l0)
Loading required package: l0
Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called 'l0'
> f(c0)
Loading required package: c0
Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called 'c0'
> f(m0)
Loading required package: m0
Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called 'm0'
> f(df0)
Loading required package: df0
Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called 'df0'
> f(FALSE)
Loading required package: FALSE
Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called 'FALSE'
> f(list(),list())
Loading required package: list
Failed with error:  'invalid filename argument'
> f(l0,l0)
Loading required package: l0
Failed with error:  'invalid filename argument'
> f(c0,c0)
Loading required package: c0
Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  no library trees found in 'lib.loc'
> f(df0,df0)
Loading required package: df0
Failed with error:  'invalid filename argument'
> f(FALSE,FALSE)
Loading required package: FALSE
Failed with error:  'invalid filename argument'
> 
> ##  requireNamespace  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("requireNamespace", pos = 'package:base')
> f()
Error in f() : argument "package" is missing, with no default
> f(NULL)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "package" is missing, with no default
> f(NULL,NULL)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(list())
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(l0)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(c0)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(m0)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(df0)
Loading required namespace: integer(0)
Failed with error:  'there is no package called 'integer(0)''
> f(FALSE)
Loading required namespace: FALSE
Failed with error:  'there is no package called 'FALSE''
> f(list(),list())
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(l0,l0)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(c0,c0)
Error in as.character(package)[[1L]] : subscript out of bounds
Calls: f
> f(df0,df0)
Loading required namespace: integer(0)
Failed with error:  'there is no package called 'integer(0)''
> f(FALSE,FALSE)
Loading required namespace: FALSE
Failed with error:  'there is no package called 'FALSE''
> 
> ##  restartDescription  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("restartDescription", pos = 'package:base')
> f()
Error in f() : argument "r" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
NULL
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  restartFormals  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("restartFormals", pos = 'package:base')
> f()
Error in formals(r$handler) : argument "r" is missing, with no default
Calls: f -> formals
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
NULL
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  retracemem  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("retracemem", pos = 'package:base')
> f()
> f(NULL)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
> f(FALSE)
> f(list(),list())
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
> f(FALSE,FALSE)
> 
> ##  return  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("return", pos = 'package:base')
> f()
Error: no function to return from, jumping to top level
> f(NULL)
Error: no function to return from, jumping to top level
> f(,NULL)
Error in f(, NULL) : multi-argument returns are not permitted
> f(NULL,NULL)
Error in f(NULL, NULL) : multi-argument returns are not permitted
> f(list())
Error: no function to return from, jumping to top level
> f(l0)
Error: no function to return from, jumping to top level
> f(c0)
Error: no function to return from, jumping to top level
> f(m0)
Error: no function to return from, jumping to top level
> f(df0)
Error: no function to return from, jumping to top level
> f(FALSE)
Error: no function to return from, jumping to top level
> f(list(),list())
Error in f(list(), list()) : multi-argument returns are not permitted
> f(l0,l0)
Error in f(l0, l0) : multi-argument returns are not permitted
> f(c0,c0)
Error in f(c0, c0) : multi-argument returns are not permitted
> f(df0,df0)
Error in f(df0, df0) : multi-argument returns are not permitted
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : multi-argument returns are not permitted
> 
> ##  returnValue  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("returnValue", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  rev  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rev", pos = 'package:base')
> f()
Error in rev.default() : argument "x" is missing, with no default
Calls: f -> rev.default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  rev.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rev.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  rle  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rle", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'x' must be a vector of an atomic type
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Run Length Encoding
  lengths: int(0) 
  values : list()
> f(l0)
Run Length Encoding
  lengths: int(0) 
  values : logi(0) 
> f(c0)
Run Length Encoding
  lengths: int(0) 
  values : chr(0) 
> f(m0)
Error in f(m0) : 'x' must be a vector of an atomic type
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> Ops.data.frame -> matrix
> f(FALSE)
Run Length Encoding
  lengths: int 1
  values : logi FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  round  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("round", pos = 'package:base')
> f()
Error: 0 arguments passed to 'round'which requires 1 or 2 arguments
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : invalid second argument of length 0
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid second argument of length 0
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(list(c0 = integer(0))) : 
  non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : invalid second argument of length 0
> f(l0,l0)
Error in f(l0, l0) : invalid second argument of length 0
> f(c0,c0)
Error in f(c0, c0) : invalid second argument of length 0
> f(df0,df0)
Error in Math.data.frame(list(c0 = integer(0)), list(c0 = integer(0))) : 
  non-numeric variable in data frame: c0
> f(FALSE,FALSE)
[1] 0
> 
> ##  round.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("round.Date", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list())
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(df0)
Error in NextMethod() : generic function not specified
Calls: f -> NextMethod
> f(FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(l0,l0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(c0,c0)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> f(df0,df0)
Error in NextMethod() : generic function not specified
Calls: f -> NextMethod
> f(FALSE,FALSE)
Error in NextMethod() : object not specified
Calls: f -> NextMethod
> 
> ##  round.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("round.POSIXt", pos = 'package:base')
> f()
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> trunc.POSIXt -> as.POSIXlt -> as.POSIXct
> f(NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... trunc.POSIXt -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct(x) : argument "x" is missing, with no default
Calls: f -> trunc.POSIXt -> as.POSIXlt -> as.POSIXct
> f(NULL,NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... trunc.POSIXt -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... trunc.POSIXt -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
Error in as.POSIXct.numeric(x) : 'origin' must be supplied
Calls: f ... trunc.POSIXt -> as.POSIXlt -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... trunc.POSIXt -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... trunc.POSIXt -> as.POSIXlt -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in match.arg(units) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(l0,l0)
Error in match.arg(units) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(c0,c0)
Error in match.arg(units) : 
  'arg' should be one of "secs", "mins", "hours", "days"
Calls: f -> match.arg
> f(df0,df0)
Error in match.arg(units) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(FALSE,FALSE)
Error in match.arg(units) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> 
> ##  row  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("row", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : a matrix-like object is required as argument to 'row'
> f(,NULL)
Error in if (as.factor) { : argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (as.factor) { : argument is of length zero
Calls: f
> f(list())
Error in f(list()) : 
  a matrix-like object is required as argument to 'row'
> f(l0)
Error in f(l0) : a matrix-like object is required as argument to 'row'
> f(c0)
Error in f(c0) : a matrix-like object is required as argument to 'row'
> f(m0)
<0 x 0 matrix>
> f(df0)
     [,1]
> f(FALSE)
Error in f(FALSE) : a matrix-like object is required as argument to 'row'
> f(list(),list())
Error in if (as.factor) { : argument is of length zero
Calls: f
> f(l0,l0)
Error in if (as.factor) { : argument is of length zero
Calls: f
> f(c0,c0)
Error in if (as.factor) { : argument is of length zero
Calls: f
> f(df0,df0)
Error in if (as.factor) { : argument is not interpretable as logical
Calls: f
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  a matrix-like object is required as argument to 'row'
> 
> ##  row.names  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("row.names", pos = 'package:base')
> f()
Error in row.names.default() : argument "x" is missing, with no default
Calls: f -> row.names.default
> f(NULL)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
NULL
> f(df0)
character(0)
> f(FALSE)
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  row.names.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("row.names.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
character(0)
> f(FALSE)
character(0)
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  row.names.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("row.names.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
NULL
> f(df0)
character(0)
> f(FALSE)
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  row.names<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("row.names<-", pos = 'package:base')
> f()
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> row.names<-.default -> rownames<- -> is.data.frame
> f(NULL)
Error in `rownames<-`(x, value) : 
  argument "value" is missing, with no default
Calls: f -> row.names<-.default -> rownames<-
> f(,NULL)
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> row.names<-.default -> rownames<- -> is.data.frame
> f(NULL,NULL)
NULL
> f(list())
Error in `rownames<-`(x, value) : 
  argument "value" is missing, with no default
Calls: f -> row.names<-.default -> rownames<-
> f(l0)
Error in `rownames<-`(x, value) : 
  argument "value" is missing, with no default
Calls: f -> row.names<-.default -> rownames<-
> f(c0)
Error in `rownames<-`(x, value) : 
  argument "value" is missing, with no default
Calls: f -> row.names<-.default -> rownames<-
> f(m0)
Error in `rownames<-`(x, value) : 
  argument "value" is missing, with no default
Calls: f -> row.names<-.default -> rownames<-
> f(df0)
Error in `row.names<-.data.frame`(df0) : 
  argument "value" is missing, with no default
Calls: f -> row.names<-.data.frame
> f(FALSE)
Error in `rownames<-`(x, value) : 
  argument "value" is missing, with no default
Calls: f -> row.names<-.default -> rownames<-
> f(list(),list())
Error in `rownames<-`(x, value) : 
  attempt to set 'rownames' on an object with no dimensions
Calls: f -> row.names<-.default -> rownames<-
> f(l0,l0)
Error in `rownames<-`(x, value) : 
  attempt to set 'rownames' on an object with no dimensions
Calls: f -> row.names<-.default -> rownames<-
> f(c0,c0)
Error in `rownames<-`(x, value) : 
  attempt to set 'rownames' on an object with no dimensions
Calls: f -> row.names<-.default -> rownames<-
> f(df0,df0)
Error in `row.names<-.data.frame`(df0, df0) : invalid 'row.names' length
Calls: f -> row.names<-.data.frame
> f(FALSE,FALSE)
Error in `rownames<-`(x, value) : 
  attempt to set 'rownames' on an object with no dimensions
Calls: f -> row.names<-.default -> rownames<-
> 
> ##  row.names<-.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("row.names<-.data.frame", pos = 'package:base')
> f()
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL,NULL)
data frame with 0 columns and 0 rows
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
data frame with 0 columns and 0 rows
> f(l0,l0)
[1] x
<0 rows> (or 0-length row.names)
> f(c0,c0)
[1] x
<0 rows> (or 0-length row.names)
> f(df0,df0)
Error in f(df0, df0) : invalid 'row.names' length
> f(FALSE,FALSE)
          x
FALSE FALSE
> 
> ##  row.names<-.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("row.names<-.default", pos = 'package:base')
> f()
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> rownames<- -> is.data.frame
> f(NULL)
Error in `rownames<-`(x, value) : 
  argument "value" is missing, with no default
Calls: f -> rownames<-
> f(,NULL)
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> rownames<- -> is.data.frame
> f(NULL,NULL)
NULL
> f(list())
Error in `rownames<-`(x, value) : 
  argument "value" is missing, with no default
Calls: f -> rownames<-
> f(l0)
Error in `rownames<-`(x, value) : 
  argument "value" is missing, with no default
Calls: f -> rownames<-
> f(c0)
Error in `rownames<-`(x, value) : 
  argument "value" is missing, with no default
Calls: f -> rownames<-
> f(m0)
Error in `rownames<-`(x, value) : 
  argument "value" is missing, with no default
Calls: f -> rownames<-
> f(df0)
Error in `rownames<-`(x, value) : 
  argument "value" is missing, with no default
Calls: f -> rownames<-
> f(FALSE)
Error in `rownames<-`(x, value) : 
  argument "value" is missing, with no default
Calls: f -> rownames<-
> f(list(),list())
Error in `rownames<-`(x, value) : 
  attempt to set 'rownames' on an object with no dimensions
Calls: f -> rownames<-
> f(l0,l0)
Error in `rownames<-`(x, value) : 
  attempt to set 'rownames' on an object with no dimensions
Calls: f -> rownames<-
> f(c0,c0)
Error in `rownames<-`(x, value) : 
  attempt to set 'rownames' on an object with no dimensions
Calls: f -> rownames<-
> f(df0,df0)
Error in `row.names<-.data.frame`(`*tmp*`, value = value) : 
  invalid 'row.names' length
Calls: f ... rownames<- -> row.names<- -> row.names<-.data.frame
> f(FALSE,FALSE)
Error in `rownames<-`(x, value) : 
  attempt to set 'rownames' on an object with no dimensions
Calls: f -> rownames<-
> 
> ##  rowMeans  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rowMeans", pos = 'package:base')
> f()
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL)
Error in f(NULL) : 'x' must be an array of at least two dimensions
> f(,NULL)
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL,NULL)
Error in f(NULL, NULL) : 'x' must be an array of at least two dimensions
> f(list())
Error in f(list()) : 'x' must be an array of at least two dimensions
> f(l0)
Error in f(l0) : 'x' must be an array of at least two dimensions
> f(c0)
Error in f(c0) : 'x' must be an array of at least two dimensions
> f(m0)
numeric(0)
> f(df0)
numeric(0)
> f(FALSE)
Error in f(FALSE) : 'x' must be an array of at least two dimensions
> f(list(),list())
Error in f(list(), list()) : 
  'x' must be an array of at least two dimensions
> f(l0,l0)
Error in f(l0, l0) : 'x' must be an array of at least two dimensions
> f(c0,c0)
Error in f(c0, c0) : 'x' must be an array of at least two dimensions
> f(df0,df0)
Error in f(df0, df0) : invalid 'na.rm' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'x' must be an array of at least two dimensions
> 
> ##  rowSums  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rowSums", pos = 'package:base')
> f()
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL)
Error in f(NULL) : 'x' must be an array of at least two dimensions
> f(,NULL)
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL,NULL)
Error in f(NULL, NULL) : 'x' must be an array of at least two dimensions
> f(list())
Error in f(list()) : 'x' must be an array of at least two dimensions
> f(l0)
Error in f(l0) : 'x' must be an array of at least two dimensions
> f(c0)
Error in f(c0) : 'x' must be an array of at least two dimensions
> f(m0)
numeric(0)
> f(df0)
numeric(0)
> f(FALSE)
Error in f(FALSE) : 'x' must be an array of at least two dimensions
> f(list(),list())
Error in f(list(), list()) : 
  'x' must be an array of at least two dimensions
> f(l0,l0)
Error in f(l0, l0) : 'x' must be an array of at least two dimensions
> f(c0,c0)
Error in f(c0, c0) : 'x' must be an array of at least two dimensions
> f(df0,df0)
Error in f(df0, df0) : invalid 'na.rm' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'x' must be an array of at least two dimensions
> 
> ##  rownames  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rownames", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in if (do.NULL) NULL else if (nr > 0L) paste0(prefix, seq_len(nr)) else character() : 
  argument is of length zero
Calls: f
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
character(0)
> f(FALSE)
NULL
> f(list(),list())
Error in if (do.NULL) NULL else if (nr > 0L) paste0(prefix, seq_len(nr)) else character() : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (do.NULL) NULL else if (nr > 0L) paste0(prefix, seq_len(nr)) else character() : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (do.NULL) NULL else if (nr > 0L) paste0(prefix, seq_len(nr)) else character() : 
  argument is of length zero
Calls: f
> f(df0,df0)
character(0)
> f(FALSE,FALSE)
[1] "row1"
> 
> ##  rownames<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rownames<-", pos = 'package:base')
> f()
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL)
Error in f(NULL) : argument "value" is missing, with no default
> f(,NULL)
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : argument "value" is missing, with no default
> f(l0)
Error in f(l0) : argument "value" is missing, with no default
> f(c0)
Error in f(c0) : argument "value" is missing, with no default
> f(m0)
Error in f(m0) : argument "value" is missing, with no default
> f(df0)
Error in f(df0) : argument "value" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "value" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : 
  attempt to set 'rownames' on an object with no dimensions
> f(l0,l0)
Error in f(l0, l0) : 
  attempt to set 'rownames' on an object with no dimensions
> f(c0,c0)
Error in f(c0, c0) : 
  attempt to set 'rownames' on an object with no dimensions
> f(df0,df0)
Error in `row.names<-.data.frame`(`*tmp*`, value = value) : 
  invalid 'row.names' length
Calls: f -> row.names<- -> row.names<-.data.frame
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  attempt to set 'rownames' on an object with no dimensions
> 
> ##  rowsum  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rowsum", pos = 'package:base')
> f()
Error in rowsum.default() : argument "x" is missing, with no default
Calls: f -> rowsum.default
> f(NULL)
Error in rowsum.default(NULL) : 'x' must be numeric
Calls: f -> rowsum.default
> f(,NULL)
Error in rowsum.default(, NULL) : 
  argument "x" is missing, with no default
Calls: f -> rowsum.default
> f(NULL,NULL)
Error in rowsum.default(NULL, NULL) : 'x' must be numeric
Calls: f -> rowsum.default
> f(list())
Error in rowsum.default(list()) : 'x' must be numeric
Calls: f -> rowsum.default
> f(l0)
Error in rowsum.default(l0) : 'x' must be numeric
Calls: f -> rowsum.default
> f(c0)
Error in rowsum.default(c0) : 'x' must be numeric
Calls: f -> rowsum.default
> f(m0)
Error in rowsum.default(m0) : 
  argument "group" is missing, with no default
Calls: f -> rowsum.default
> f(df0)
Error in rowsum.data.frame(df0) : 
  argument "group" is missing, with no default
Calls: f -> rowsum.data.frame
> f(FALSE)
Error in rowsum.default(FALSE) : 'x' must be numeric
Calls: f -> rowsum.default
> f(list(),list())
Error in rowsum.default(list(), list()) : 'x' must be numeric
Calls: f -> rowsum.default
> f(l0,l0)
Error in rowsum.default(l0, l0) : 'x' must be numeric
Calls: f -> rowsum.default
> f(c0,c0)
Error in rowsum.default(c0, c0) : 'x' must be numeric
Calls: f -> rowsum.default
> f(df0,df0)
Error in rowsum.data.frame(df0, df0) : incorrect length for 'group'
Calls: f -> rowsum.data.frame
> f(FALSE,FALSE)
Error in rowsum.default(FALSE, FALSE) : 'x' must be numeric
Calls: f -> rowsum.default
> 
> ##  rowsum.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rowsum.data.frame", pos = 'package:base')
> f()
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL)
Error in f(NULL) : not a data frame
> f(,NULL)
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL,NULL)
Error in f(NULL, NULL) : not a data frame
> f(list())
Error in f(list()) : not a data frame
> f(l0)
Error in f(l0) : not a data frame
> f(c0)
Error in f(c0) : not a data frame
> f(m0)
Error in f(m0) : not a data frame
> f(df0)
Error in f(df0) : argument "group" is missing, with no default
> f(FALSE)
Error in f(FALSE) : not a data frame
> f(list(),list())
Error in f(list(), list()) : not a data frame
> f(l0,l0)
Error in f(l0, l0) : not a data frame
> f(c0,c0)
Error in f(c0, c0) : not a data frame
> f(df0,df0)
Error in f(df0, df0) : incorrect length for 'group'
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : not a data frame
> 
> ##  rowsum.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("rowsum.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : 'x' must be numeric
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'x' must be numeric
> f(list())
Error in f(list()) : 'x' must be numeric
> f(l0)
Error in f(l0) : 'x' must be numeric
> f(c0)
Error in f(c0) : 'x' must be numeric
> f(m0)
Error in f(m0) : argument "group" is missing, with no default
> f(df0)
Error in f(df0) : 'x' must be numeric
> f(FALSE)
Error in f(FALSE) : 'x' must be numeric
> f(list(),list())
Error in f(list(), list()) : 'x' must be numeric
> f(l0,l0)
Error in f(l0, l0) : 'x' must be numeric
> f(c0,c0)
Error in f(c0, c0) : 'x' must be numeric
> f(df0,df0)
Error in f(df0, df0) : 'x' must be numeric
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'x' must be numeric
> 
> ##  sQuote  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sQuote", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "'integer(0)'"
> f(FALSE)
[1] "'FALSE'"
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  sample  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sample", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in sample.int(length(x), size, replace, prob) : 
  invalid 'size' argument
Calls: f -> sample.int
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in sample.int(length(x), size, replace, prob) : 
  invalid 'size' argument
Calls: f -> sample.int
> f(l0,l0)
Error in sample.int(length(x), size, replace, prob) : 
  invalid 'size' argument
Calls: f -> sample.int
> f(c0,c0)
Error in sample.int(length(x), size, replace, prob) : 
  invalid 'size' argument
Calls: f -> sample.int
> f(df0,df0)
Error in sample.int(length(x), size, replace, prob) : 
  invalid 'size' argument
Calls: f -> [ -> [.data.frame -> sample.int
> f(FALSE,FALSE)
Error in sample.int(length(x), size, replace, prob) : 
  invalid 'size' argument
Calls: f -> sample.int
> 
> ##  sample.int  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sample.int", pos = 'package:base')
> f()
Error in f() : argument "n" is missing, with no default
> f(NULL)
Error in if (!replace && is.null(prob) && n > 1e+07 && size <= n/2) .Internal(sample2(n,  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "n" is missing, with no default
> f(NULL,NULL)
Error in if (!replace && is.null(prob) && n > 1e+07 && size <= n/2) .Internal(sample2(n,  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(list())
Error in n/2 : non-numeric argument to binary operator
Calls: f
> f(l0)
Error in if (!replace && is.null(prob) && n > 1e+07 && size <= n/2) .Internal(sample2(n,  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0)
Error in n/2 : non-numeric argument to binary operator
Calls: f
> f(m0)
Error in if (!replace && is.null(prob) && n > 1e+07 && size <= n/2) .Internal(sample2(n,  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '>' not meaningful for factors
> f(FALSE)
Error in f(FALSE) : invalid 'size' argument
> f(list(),list())
Error in n/2 : non-numeric argument to binary operator
Calls: f
> f(l0,l0)
Error in if (!replace && is.null(prob) && n > 1e+07 && size <= n/2) .Internal(sample2(n,  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0,c0)
Error in n/2 : non-numeric argument to binary operator
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '>' not meaningful for factors
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'size' argument
> 
> ##  sapply  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sapply", pos = 'package:base')
> f()
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(NULL)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(,NULL)
Error in match.fun(FUN) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(NULL,NULL)
Error in match.fun(FUN) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(list())
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(l0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(c0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(m0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(df0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(FALSE)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(list(),list())
Error in match.fun(FUN) : 'list()' is not a function, character or symbol
Calls: f -> match.fun
> f(l0,l0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'l0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(c0,c0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'c0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(df0,df0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'df0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(FALSE,FALSE)
Error in match.fun(FUN) : 'FALSE' is not a function, character or symbol
Calls: f -> match.fun
> 
> ##  save  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("save", pos = 'package:base')
> f()
Error in f() : 'file' must be specified
In addition: Warning message:
In f() : nothing specified to be save()d
> f(NULL)
Error in f(NULL) : object 'NULL' not found
> f(,NULL)
Error in FUN(X[[i]], ...) : invalid first argument
Calls: f -> vapply -> FUN
> f(NULL,NULL)
Error in f(NULL, NULL) : objects 'NULL', 'NULL' not found
> f(list())
Error in f(list()) : object 'list()' not found
> f(l0)
Error in f(l0) : 'file' must be specified
> f(c0)
Error in f(c0) : 'file' must be specified
> f(m0)
Error in f(m0) : 'file' must be specified
> f(df0)
Error in f(df0) : 'file' must be specified
> f(FALSE)
Error in f(FALSE) : object 'FALSE' not found
> f(list(),list())
Error in f(list(), list()) : objects 'list()', 'list()' not found
> f(l0,l0)
Error in f(l0, l0) : 'file' must be specified
> f(c0,c0)
Error in f(c0, c0) : 'file' must be specified
> f(df0,df0)
Error in f(df0, df0) : 'file' must be specified
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : objects 'FALSE', 'FALSE' not found
> 
> ##  save.image  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("save.image", pos = 'package:base')
> f()
Error in save(list = names(.GlobalEnv), file = outfile, version = version,  : 
  attempt to use zero-length variable name
Calls: f -> save
> f(NULL)
Error in f(NULL) : 'file' must be non-empty string
> f(,NULL)
Error in save(list = names(.GlobalEnv), file = outfile, version = version,  : 
  attempt to use zero-length variable name
Calls: f -> save
> f(NULL,NULL)
Error in f(NULL, NULL) : 'file' must be non-empty string
> f(list())
Error in f(list()) : 'file' must be non-empty string
> f(l0)
Error in f(l0) : 'file' must be non-empty string
> f(c0)
Error in if (!is.character(file) || file == "") stop("'file' must be non-empty string") : 
  missing value where TRUE/FALSE needed
Calls: f
> f(m0)
Error in f(m0) : 'file' must be non-empty string
> f(df0)
Error in f(df0) : 'file' must be non-empty string
> f(FALSE)
Error in f(FALSE) : 'file' must be non-empty string
> f(list(),list())
Error in f(list(), list()) : 'file' must be non-empty string
> f(l0,l0)
Error in f(l0, l0) : 'file' must be non-empty string
> f(c0,c0)
Error in if (!is.character(file) || file == "") stop("'file' must be non-empty string") : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0,df0)
Error in f(df0, df0) : 'file' must be non-empty string
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'file' must be non-empty string
> 
> ##  saveRDS  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("saveRDS", pos = 'package:base')
> f()
Error in f() : 'file' must be non-empty string
> f(NULL)
Error in f(NULL) : 'file' must be non-empty string
> f(,NULL)
Error in f(, NULL) : bad 'file' argument
> f(NULL,NULL)
Error in f(NULL, NULL) : bad 'file' argument
> f(list())
Error in f(list()) : 'file' must be non-empty string
> f(l0)
Error in f(l0) : 'file' must be non-empty string
> f(c0)
Error in f(c0) : 'file' must be non-empty string
> f(m0)
Error in f(m0) : 'file' must be non-empty string
> f(df0)
Error in f(df0) : 'file' must be non-empty string
> f(FALSE)
Error in f(FALSE) : 'file' must be non-empty string
> f(list(),list())
Error in f(list(), list()) : bad 'file' argument
> f(l0,l0)
Error in f(l0, l0) : bad 'file' argument
> f(c0,c0)
Error in if (file == "") stop("'file' must be non-empty string") : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in f(df0, df0) : bad 'file' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : bad 'file' argument
> 
> ##  scale  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("scale", pos = 'package:base')
> f()
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> scale.default -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... scale.default -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> scale.default -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... scale.default -> as.matrix -> as.matrix.default -> array
> f(list())
Error in colMeans(x, na.rm = TRUE) : 'x' must be numeric
Calls: f -> scale.default -> colMeans
> f(l0)
     [,1]
attr(,"scaled:center")
[1] NaN
attr(,"scaled:scale")
[1] 0
> f(c0)
Error in colMeans(x, na.rm = TRUE) : 'x' must be numeric
Calls: f -> scale.default -> colMeans
> f(m0)
<0 x 0 matrix>
attr(,"scaled:center")
numeric(0)
attr(,"scaled:scale")
numeric(0)
> f(df0)
     c0
attr(,"scaled:center")
 c0 
NaN 
attr(,"scaled:scale")
c0 
 0 
> f(FALSE)
     [,1]
[1,]  NaN
attr(,"scaled:center")
[1] 0
attr(,"scaled:scale")
[1] 0
> f(list(),list())
Error in scale.default(list(), list()) : 
  length of 'center' must equal the number of columns of 'x'
Calls: f -> scale.default
> f(l0,l0)
Error in if (center) { : argument is of length zero
Calls: f -> scale.default
> f(c0,c0)
Error in scale.default(c0, c0) : 
  length of 'center' must equal the number of columns of 'x'
Calls: f -> scale.default
> f(df0,df0)
Error in scale.default(df0, df0) : 
  length of 'center' must equal the number of columns of 'x'
Calls: f -> scale.default
> f(FALSE,FALSE)
     [,1]
[1,]  NaN
attr(,"scaled:scale")
[1] 0
> 
> ##  scale.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("scale.default", pos = 'package:base')
> f()
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(list())
Error in colMeans(x, na.rm = TRUE) : 'x' must be numeric
Calls: f -> colMeans
> f(l0)
     [,1]
attr(,"scaled:center")
[1] NaN
attr(,"scaled:scale")
[1] 0
> f(c0)
Error in colMeans(x, na.rm = TRUE) : 'x' must be numeric
Calls: f -> colMeans
> f(m0)
<0 x 0 matrix>
attr(,"scaled:center")
numeric(0)
attr(,"scaled:scale")
numeric(0)
> f(df0)
     c0
attr(,"scaled:center")
 c0 
NaN 
attr(,"scaled:scale")
c0 
 0 
> f(FALSE)
     [,1]
[1,]  NaN
attr(,"scaled:center")
[1] 0
attr(,"scaled:scale")
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  length of 'center' must equal the number of columns of 'x'
> f(l0,l0)
Error in if (center) { : argument is of length zero
Calls: f
> f(c0,c0)
Error in f(c0, c0) : 
  length of 'center' must equal the number of columns of 'x'
> f(df0,df0)
Error in f(df0, df0) : 
  length of 'center' must equal the number of columns of 'x'
> f(FALSE,FALSE)
     [,1]
[1,]  NaN
attr(,"scaled:scale")
[1] 0
> 
> ##  scan  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("scan", pos = 'package:base')
> f()
1: f(NULL)
1: f(,NULL)
Error in f() : scan() expected 'a real', got 'f(NULL)'
> f(NULL,NULL)
Error in f(NULL, NULL) : 'file' must be a character string or connection
> f(list())
Error in f(list()) : 'file' must be a character string or connection
> f(l0)
Error in f(l0) : 'file' must be a character string or connection
> f(c0)
Error in if (file == "") file <- stdin() else { : 
  argument is of length zero
Calls: f
> f(m0)
Error in f(m0) : 'file' must be a character string or connection
> f(df0)
Error in f(df0) : 'file' must be a character string or connection
> f(FALSE)
Error in f(FALSE) : 'file' must be a character string or connection
> f(list(),list())
Error in f(list(), list()) : 
  'file' must be a character string or connection
> f(l0,l0)
Error in f(l0, l0) : 'file' must be a character string or connection
> f(c0,c0)
Error in if (file == "") file <- stdin() else { : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in f(df0, df0) : 'file' must be a character string or connection
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'file' must be a character string or connection
> 
> ##  search  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("search", pos = 'package:base')
> f()
[1] ".GlobalEnv"        "package:stats"     "package:graphics" 
[4] "package:grDevices" "package:utils"     "package:datasets" 
[7] "package:methods"   "Autoloads"         "package:base"     
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  searchpaths  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("searchpaths", pos = 'package:base')
> f()
[1] ".GlobalEnv"                               
[2] "/home/aviral/projects/r/library/stats"    
[3] "/home/aviral/projects/r/library/graphics" 
[4] "/home/aviral/projects/r/library/grDevices"
[5] "/home/aviral/projects/r/library/utils"    
[6] "/home/aviral/projects/r/library/datasets" 
[7] "/home/aviral/projects/r/library/methods"  
[8] "Autoloads"                                
[9] "/home/aviral/projects/r/library/base"     
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  seek  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("seek", pos = 'package:base')
> f()
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "character"
Calls: f
> f(df0,df0)
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "data.frame"
Calls: f
> f(FALSE,FALSE)
Error in UseMethod("seek") : 
  no applicable method for 'seek' applied to an object of class "logical"
Calls: f
> 
> ##  seek.connection  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("seek.connection", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in f(NULL) : 'con' is not a connection
> f(,NULL)
Error in f(, NULL) : argument "con" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'con' is not a connection
> f(list())
Error in f(list()) : 'con' is not a connection
> f(l0)
Error in f(l0) : 'con' is not a connection
> f(c0)
Error in f(c0) : 'con' is not a connection
> f(m0)
Error in f(m0) : 'con' is not a connection
> f(df0)
Error in f(df0) : 'con' is not a connection
> f(FALSE)
Error in f(FALSE) : 'con' is not a connection
> f(list(),list())
Error in f(list(), list()) : 'con' is not a connection
> f(l0,l0)
Error in f(l0, l0) : 'con' is not a connection
> f(c0,c0)
Error in f(c0, c0) : 'con' is not a connection
> f(df0,df0)
Error in f(df0, df0) : 'con' is not a connection
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'con' is not a connection
> 
> ##  seq  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("seq", pos = 'package:base')
> f()
[1] 1
> f(NULL)
integer(0)
> f(,NULL)
Error in seq.default(, NULL) : 'to' must be of length 1
Calls: f -> seq.default
> f(NULL,NULL)
Error in seq.default(NULL, NULL) : 'from' must be of length 1
Calls: f -> seq.default
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
[1] 1
> f(FALSE)
[1] 1
> f(list(),list())
Error in seq.default(list(), list()) : 'from' must be of length 1
Calls: f -> seq.default
> f(l0,l0)
Error in seq.default(l0, l0) : 'from' must be of length 1
Calls: f -> seq.default
> f(c0,c0)
Error in seq.default(c0, c0) : 'from' must be of length 1
Calls: f -> seq.default
> f(df0,df0)
Error in is.finite(from) : default method not implemented for type 'list'
Calls: f -> seq.default
> f(FALSE,FALSE)
[1] 0
> 
> ##  seq.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("seq.Date", pos = 'package:base')
> f()
Error in f() : 'from' must be specified
> f(NULL)
Error in f(NULL) : 'from' must be a "Date" object
> f(,NULL)
Error in f(, NULL) : 'from' must be specified
> f(NULL,NULL)
Error in f(NULL, NULL) : 'from' must be a "Date" object
> f(list())
Error in f(list()) : 'from' must be a "Date" object
> f(l0)
Error in f(l0) : 'from' must be a "Date" object
> f(c0)
Error in f(c0) : 'from' must be a "Date" object
> f(m0)
Error in f(m0) : 'from' must be a "Date" object
> f(df0)
Error in f(df0) : 'from' must be a "Date" object
> f(FALSE)
Error in f(FALSE) : 'from' must be a "Date" object
> f(list(),list())
Error in f(list(), list()) : 'from' must be a "Date" object
> f(l0,l0)
Error in f(l0, l0) : 'from' must be a "Date" object
> f(c0,c0)
Error in f(c0, c0) : 'from' must be a "Date" object
> f(df0,df0)
Error in f(df0, df0) : 'from' must be a "Date" object
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'from' must be a "Date" object
> 
> ##  seq.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("seq.POSIXt", pos = 'package:base')
> f()
Error in f() : 'from' must be specified
> f(NULL)
Error in f(NULL) : 'from' must be a "POSIXt" object
> f(,NULL)
Error in f(, NULL) : 'from' must be specified
> f(NULL,NULL)
Error in f(NULL, NULL) : 'from' must be a "POSIXt" object
> f(list())
Error in f(list()) : 'from' must be a "POSIXt" object
> f(l0)
Error in f(l0) : 'from' must be a "POSIXt" object
> f(c0)
Error in f(c0) : 'from' must be a "POSIXt" object
> f(m0)
Error in f(m0) : 'from' must be a "POSIXt" object
> f(df0)
Error in f(df0) : 'from' must be a "POSIXt" object
> f(FALSE)
Error in f(FALSE) : 'from' must be a "POSIXt" object
> f(list(),list())
Error in f(list(), list()) : 'from' must be a "POSIXt" object
> f(l0,l0)
Error in f(l0, l0) : 'from' must be a "POSIXt" object
> f(c0,c0)
Error in f(c0, c0) : 'from' must be a "POSIXt" object
> f(df0,df0)
Error in f(df0, df0) : 'from' must be a "POSIXt" object
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'from' must be a "POSIXt" object
> 
> ##  seq.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("seq.default", pos = 'package:base')
> f()
[1] 1
> f(NULL)
integer(0)
> f(,NULL)
Error in f(, NULL) : 'to' must be of length 1
> f(NULL,NULL)
Error in f(NULL, NULL) : 'from' must be of length 1
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
[1] 1
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : 'from' must be of length 1
> f(l0,l0)
Error in f(l0, l0) : 'from' must be of length 1
> f(c0,c0)
Error in f(c0, c0) : 'from' must be of length 1
> f(df0,df0)
Error in is.finite(from) : default method not implemented for type 'list'
Calls: f
> f(FALSE,FALSE)
[1] 0
> 
> ##  seq.int  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("seq.int", pos = 'package:base')
> f()
[1] 1
> f(NULL)
integer(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error: 'from' must be of length 1
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
[1] 1
> f(FALSE)
[1] 1
> f(list(),list())
Error: 'from' must be of length 1
> f(l0,l0)
Error: 'from' must be of length 1
> f(c0,c0)
Error: 'from' must be of length 1
> f(df0,df0)
Error in is.finite(from) : default method not implemented for type 'list'
Calls: f -> seq.default
> f(FALSE,FALSE)
[1] 0
> 
> ##  seq_along  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("seq_along", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'seq_along' which requires 1
> f(NULL)
integer(0)
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'seq_along' which requires 1
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
[1] 1
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'seq_along' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'seq_along' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'seq_along' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'seq_along' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'seq_along' which requires 1
> 
> ##  seq_len  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("seq_len", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'seq_len' which requires 1
> f(NULL)
Error in f(NULL) : argument must be coercible to non-negative integer
In addition: Warning message:
In f(NULL) : first element used of 'length.out' argument
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'seq_len' which requires 1
> f(list())
Error in f(list()) : argument must be coercible to non-negative integer
In addition: Warning message:
In f(list()) : first element used of 'length.out' argument
> f(l0)
Error in f(l0) : argument must be coercible to non-negative integer
In addition: Warning message:
In f(l0) : first element used of 'length.out' argument
> f(c0)
Error in f(c0) : argument must be coercible to non-negative integer
In addition: Warning message:
In f(c0) : first element used of 'length.out' argument
> f(m0)
Error in f(m0) : argument must be coercible to non-negative integer
In addition: Warning message:
In f(m0) : first element used of 'length.out' argument
> f(df0)
Error in f(df0) : argument must be coercible to non-negative integer
> f(FALSE)
integer(0)
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'seq_len' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'seq_len' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'seq_len' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'seq_len' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'seq_len' which requires 1
> 
> ##  sequence  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sequence", pos = 'package:base')
> f()
Error in lapply(nvec, seq_len) : 
  argument "nvec" is missing, with no default
Calls: f -> unlist -> lapply
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
Error in FUN(X[[i]], ...) : 
  argument must be coercible to non-negative integer
Calls: f -> unlist -> lapply
In addition: Warning message:
In FUN(X[[i]], ...) : first element used of 'length.out' argument
> f(FALSE)
integer(0)
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  serialize  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("serialize", pos = 'package:base')
> f()
Error in f() : argument "connection" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "connection" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
 [1] 58 0a 00 00 00 02 00 03 03 00 00 02 03 00 00 00 00 fe
> f(list())
Error in f(list()) : argument "connection" is missing, with no default
> f(l0)
Error in f(l0) : argument "connection" is missing, with no default
> f(c0)
Error in f(c0) : argument "connection" is missing, with no default
> f(m0)
Error in f(m0) : argument "connection" is missing, with no default
> f(df0)
Error in f(df0) : argument "connection" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "connection" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : 'connection' must be a connection
> f(l0,l0)
Error in f(l0, l0) : 'connection' must be a connection
> f(c0,c0)
Error in f(c0, c0) : 'connection' must be a connection
> f(df0,df0)
Error in f(df0, df0) : 'connection' must be a connection
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'connection' must be a connection
> 
> ##  set.seed  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("set.seed", pos = 'package:base')
> f()
Error in f() : argument "seed" is missing, with no default
> f(NULL)
> f(,NULL)
Error in f(, NULL) : argument "seed" is missing, with no default
> f(NULL,NULL)
> f(list())
Error in f(list()) : supplied seed is not a valid integer
> f(l0)
Error in f(l0) : supplied seed is not a valid integer
> f(c0)
Error in f(c0) : supplied seed is not a valid integer
> f(m0)
Error in f(m0) : supplied seed is not a valid integer
> f(df0)
Error in f(df0) : supplied seed is not a valid integer
> f(FALSE)
> f(list(),list())
Error in f(list(), list()) : supplied seed is not a valid integer
> f(l0,l0)
Error in f(l0, l0) : supplied seed is not a valid integer
> f(c0,c0)
Error in f(c0, c0) : supplied seed is not a valid integer
> f(df0,df0)
Error in f(df0, df0) : 
  'kind' must be a character string of length 1 (RNG to be used).
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'kind' must be a character string of length 1 (RNG to be used).
> 
> ##  setHook  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("setHook", pos = 'package:base')
> f()
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  argument "hookName" is missing, with no default
Calls: f -> getHook -> get0
> f(NULL)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> getHook -> get0
> f(,NULL)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  argument "hookName" is missing, with no default
Calls: f -> getHook -> get0
> f(NULL,NULL)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> getHook -> get0
> f(list())
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> getHook -> get0
> f(l0)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> getHook -> get0
> f(c0)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> getHook -> get0
> f(m0)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> getHook -> get0
> f(df0)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> getHook -> get0
> f(FALSE)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> getHook -> get0
> f(list(),list())
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> getHook -> get0
> f(l0,l0)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> getHook -> get0
> f(c0,c0)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> getHook -> get0
> f(df0,df0)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> getHook -> get0
> f(FALSE,FALSE)
Error in get0(hookName, envir = .userHooksEnv, inherits = FALSE, ifnotfound = list()) : 
  invalid first argument
Calls: f -> getHook -> get0
> 
> ##  setNamespaceInfo  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("setNamespaceInfo", pos = 'package:base')
> f()
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(NULL)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(,NULL)
Error in asNamespace(ns, base.OK = FALSE) : 
  argument "ns" is missing, with no default
Calls: f -> asNamespace
> f(NULL,NULL)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(list())
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(l0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> asNamespace -> getNamespace
> f(m0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(df0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(FALSE)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(list(),list())
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(l0,l0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(c0,c0)
Error in getNamespace(ns) : invalid data of mode 'character' (too short)
Calls: f -> asNamespace -> getNamespace
> f(df0,df0)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> f(FALSE,FALSE)
Error in asNamespace(ns, base.OK = FALSE) : not a namespace
Calls: f -> asNamespace
> 
> ##  setSessionTimeLimit  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("setSessionTimeLimit", pos = 'package:base')
> f()
> f(NULL)
> f(,NULL)
> f(NULL,NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
> f(FALSE)
> f(list(),list())
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
> f(FALSE,FALSE)
> 
> ##  setTimeLimit  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("setTimeLimit", pos = 'package:base')
> f()
> f(NULL)
> f(,NULL)
> f(NULL,NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
> f(FALSE)
> f(list(),list())
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
> f(FALSE,FALSE)
> 
> ##  setdiff  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("setdiff", pos = 'package:base')
> f()
Error in as.vector(x) : argument "x" is missing, with no default
Calls: f -> as.vector
> f(NULL)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(,NULL)
Error in as.vector(x) : argument "x" is missing, with no default
Calls: f -> as.vector
> f(NULL,NULL)
NULL
> f(list())
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(l0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(c0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(m0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(df0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(FALSE)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
data frame with 0 columns and 0 rows
> f(FALSE,FALSE)
logical(0)
> 
> ##  setequal  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("setequal", pos = 'package:base')
> f()
Error in as.vector(x) : argument "x" is missing, with no default
Calls: f -> as.vector
> f(NULL)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(,NULL)
Error in as.vector(x) : argument "x" is missing, with no default
Calls: f -> as.vector
> f(NULL,NULL)
[1] TRUE
> f(list())
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(l0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(c0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(m0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(df0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(FALSE)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> as.vector
> f(list(),list())
[1] TRUE
> f(l0,l0)
[1] TRUE
> f(c0,c0)
[1] TRUE
> f(df0,df0)
[1] TRUE
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  setwd  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("setwd", pos = 'package:base')
> f()
Error in f() : argument "dir" is missing, with no default
> f(NULL)
Error in f(NULL) : character argument expected
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : character argument expected
> f(l0)
Error in f(l0) : character argument expected
> f(c0)
Error in f(c0) : character argument expected
> f(m0)
Error in f(m0) : character argument expected
> f(df0)
Error in f(df0) : character argument expected
> f(FALSE)
Error in f(FALSE) : character argument expected
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  shQuote  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("shQuote", pos = 'package:base')
> f()
Error in f() : argument "string" is missing, with no default
> f(NULL)
[1] ""
> f(,NULL)
Error in f(, NULL) : argument "string" is missing, with no default
> f(NULL,NULL)
[1] ""
> f(list())
[1] ""
> f(l0)
[1] ""
> f(c0)
[1] ""
> f(m0)
[1] ""
> f(df0)
[1] "'integer(0)'"
> f(FALSE)
[1] "'FALSE'"
> f(list(),list())
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(l0,l0)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(c0,c0)
Error in match.arg(type) : 
  'arg' should be one of "sh", "csh", "cmd", "cmd2"
Calls: f -> match.arg
> f(df0,df0)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(FALSE,FALSE)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> 
> ##  showConnections  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("showConnections", pos = 'package:base')
> f()
     description class mode text isopen can read can write
> f(NULL)
Error in !all : invalid argument type
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in if (!all) set <- set[set > 2L] : argument is of length zero
Calls: f
> f(l0)
Error in if (!all) set <- set[set > 2L] : argument is of length zero
Calls: f
> f(c0)
Error in if (!all) set <- set[set > 2L] : argument is of length zero
Calls: f
> f(m0)
Error in if (!all) set <- set[set > 2L] : argument is of length zero
Calls: f
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left) : '!' not meaningful for factors
> f(FALSE)
     description class mode text isopen can read can write
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  sign  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sign", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'sign' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'sign' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'sign' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'sign' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'sign' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'sign' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'sign' which requires 1
> 
> ##  signalCondition  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("signalCondition", pos = 'package:base')
> f()
Error in f() : argument "cond" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  signif  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("signif", pos = 'package:base')
> f()
Error: 0 arguments passed to 'signif'which requires 1 or 2 arguments
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : invalid second argument of length 0
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid second argument of length 0
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(list(c0 = integer(0))) : 
  non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : invalid second argument of length 0
> f(l0,l0)
Error in f(l0, l0) : invalid second argument of length 0
> f(c0,c0)
Error in f(c0, c0) : invalid second argument of length 0
> f(df0,df0)
Error in Math.data.frame(list(c0 = integer(0)), list(c0 = integer(0))) : 
  non-numeric variable in data frame: c0
> f(FALSE,FALSE)
[1] 0
> 
> ##  simpleCondition  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("simpleCondition", pos = 'package:base')
> f()
Error in structure(list(message = as.character(message), call = call),  : 
  argument "message" is missing, with no default
Calls: f -> structure
> f(NULL)
<simpleCondition: >
> f(,NULL)
Error in structure(list(message = as.character(message), call = call),  : 
  argument "message" is missing, with no default
Calls: f -> structure
> f(NULL,NULL)
<simpleCondition: >
> f(list())
<simpleCondition: >
> f(l0)
<simpleCondition: >
> f(c0)
<simpleCondition: >
> f(m0)
<simpleCondition: >
> f(df0)
<simpleCondition: integer(0)>
> f(FALSE)
<simpleCondition: FALSE>
> f(list(),list())
<simpleCondition in list(): >
> f(l0,l0)
<simpleCondition in logical(0): >
> f(c0,c0)
<simpleCondition in character(0): >
> f(df0,df0)
<simpleCondition in structure(list(c0 = structure(integer(0), .Label = character(0), class = "factor")), .Names = "c0", row.names = character(0), class = "data.frame"): integer(0)>
> f(FALSE,FALSE)
<simpleCondition in FALSE: FALSE>
> 
> ##  simpleError  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("simpleError", pos = 'package:base')
> f()
Error in structure(list(message = as.character(message), call = call),  : 
  argument "message" is missing, with no default
Calls: f -> structure
> f(NULL)
<simpleError: >
> f(,NULL)
Error in structure(list(message = as.character(message), call = call),  : 
  argument "message" is missing, with no default
Calls: f -> structure
> f(NULL,NULL)
<simpleError: >
> f(list())
<simpleError: >
> f(l0)
<simpleError: >
> f(c0)
<simpleError: >
> f(m0)
<simpleError: >
> f(df0)
<simpleError: integer(0)>
> f(FALSE)
<simpleError: FALSE>
> f(list(),list())
<simpleError in list(): >
> f(l0,l0)
<simpleError in logical(0): >
> f(c0,c0)
<simpleError in character(0): >
> f(df0,df0)
<simpleError in structure(list(c0 = structure(integer(0), .Label = character(0), class = "factor")), .Names = "c0", row.names = character(0), class = "data.frame"): integer(0)>
> f(FALSE,FALSE)
<simpleError in FALSE: FALSE>
> 
> ##  simpleMessage  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("simpleMessage", pos = 'package:base')
> f()
Error in structure(list(message = message, call = call), class = c("simpleMessage",  : 
  argument "message" is missing, with no default
Calls: f -> structure
> f(NULL)
<simpleMessage: >
> f(,NULL)
Error in structure(list(message = message, call = call), class = c("simpleMessage",  : 
  argument "message" is missing, with no default
Calls: f -> structure
> f(NULL,NULL)
<simpleMessage: >
> f(list())
<simpleMessage: >
> f(l0)
<simpleMessage: >
> f(c0)
<simpleMessage: >
> f(m0)
<simpleMessage: >
> f(df0)
<simpleMessage: Error in cat(list(...), file, sep, fill, labels, append) : 
  argument 4 (type 'list') cannot be handled by 'cat'
Calls: <Anonymous> -> print.condition -> cat
> f(FALSE)
<simpleMessage: FALSE>
> f(list(),list())
<simpleMessage in list(): >
> f(l0,l0)
<simpleMessage in logical(0): >
> f(c0,c0)
<simpleMessage in character(0): >
> f(df0,df0)
<simpleMessage in structure(list(c0 = structure(integer(0), .Label = character(0), class = "factor")), .Names = "c0", row.names = character(0), class = "data.frame"): Error in cat(list(...), file, sep, fill, labels, append) : 
  argument 6 (type 'list') cannot be handled by 'cat'
Calls: <Anonymous> -> print.condition -> cat
> f(FALSE,FALSE)
<simpleMessage in FALSE: FALSE>
> 
> ##  simpleWarning  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("simpleWarning", pos = 'package:base')
> f()
Error in structure(list(message = as.character(message), call = call),  : 
  argument "message" is missing, with no default
Calls: f -> structure
> f(NULL)
<simpleWarning: >
> f(,NULL)
Error in structure(list(message = as.character(message), call = call),  : 
  argument "message" is missing, with no default
Calls: f -> structure
> f(NULL,NULL)
<simpleWarning: >
> f(list())
<simpleWarning: >
> f(l0)
<simpleWarning: >
> f(c0)
<simpleWarning: >
> f(m0)
<simpleWarning: >
> f(df0)
<simpleWarning: integer(0)>
> f(FALSE)
<simpleWarning: FALSE>
> f(list(),list())
<simpleWarning in list(): >
> f(l0,l0)
<simpleWarning in logical(0): >
> f(c0,c0)
<simpleWarning in character(0): >
> f(df0,df0)
<simpleWarning in structure(list(c0 = structure(integer(0), .Label = character(0), class = "factor")), .Names = "c0", row.names = character(0), class = "data.frame"): integer(0)>
> f(FALSE,FALSE)
<simpleWarning in FALSE: FALSE>
> 
> ##  simplify2array  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("simplify2array", pos = 'package:base')
> f()
Error in lengths(x) : argument "x" is missing, with no default
Calls: f -> unique -> lengths
> f(NULL)
Error in if (common.len == 1L) unlist(x, recursive = FALSE) else if (common.len >  : 
  argument is of length zero
Calls: f
> f(,NULL)
Error in lengths(x) : argument "x" is missing, with no default
Calls: f -> unique -> lengths
> f(NULL,NULL)
Error in if (common.len == 1L) unlist(x, recursive = FALSE) else if (common.len >  : 
  argument is of length zero
Calls: f
> f(list())
Error in if (common.len == 1L) unlist(x, recursive = FALSE) else if (common.len >  : 
  argument is of length zero
Calls: f
> f(l0)
Error in if (common.len == 1L) unlist(x, recursive = FALSE) else if (common.len >  : 
  argument is of length zero
Calls: f
> f(c0)
Error in if (common.len == 1L) unlist(x, recursive = FALSE) else if (common.len >  : 
  argument is of length zero
Calls: f
> f(m0)
Error in if (common.len == 1L) unlist(x, recursive = FALSE) else if (common.len >  : 
  argument is of length zero
Calls: f
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in if (common.len == 1L) unlist(x, recursive = FALSE) else if (common.len >  : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (common.len == 1L) unlist(x, recursive = FALSE) else if (common.len >  : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (common.len == 1L) unlist(x, recursive = FALSE) else if (common.len >  : 
  argument is of length zero
Calls: f
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  sin  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sin", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'sin' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'sin' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to 'sin' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'sin' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'sin' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'sin' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'sin' which requires 1
> 
> ##  single  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("single", pos = 'package:base')
> f()
numeric(0)
attr(,"Csingle")
[1] TRUE
> f(NULL)
Error in structure(vector("double", length), Csingle = TRUE) : 
  invalid 'length' argument
Calls: f -> structure
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in structure(vector("double", length), Csingle = TRUE) : 
  invalid 'length' argument
Calls: f -> structure
> f(l0)
Error in structure(vector("double", length), Csingle = TRUE) : 
  invalid 'length' argument
Calls: f -> structure
> f(c0)
Error in structure(vector("double", length), Csingle = TRUE) : 
  invalid 'length' argument
Calls: f -> structure
> f(m0)
Error in structure(vector("double", length), Csingle = TRUE) : 
  invalid 'length' argument
Calls: f -> structure
> f(df0)
Error in structure(vector("double", length), Csingle = TRUE) : 
  invalid 'length' argument
Calls: f -> structure
> f(FALSE)
Error in structure(vector("double", length), Csingle = TRUE) : 
  invalid 'length' argument
Calls: f -> structure
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  sinh  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sinh", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'sinh' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'sinh' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'sinh' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'sinh' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'sinh' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'sinh' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'sinh' which requires 1
> 
> ##  sink  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sink", pos = 'package:base')
> f()
Warning message:
In f() : no sink to remove
> f(NULL)
Warning message:
In f(NULL) : no sink to remove
> f(,NULL)
Warning message:
In f(, NULL) : no sink to remove
> f(NULL,NULL)
Warning message:
In f(NULL, NULL) : no sink to remove
> f(list())
Error in f(list()) : 
  'file' must be NULL, a connection or a character string
> f(l0)
Error in f(l0) : 'file' must be NULL, a connection or a character string
> f(c0)
Error in file(file, if (append) "a" else "w") : 
  invalid 'description' argument
Calls: f -> file
> f(m0)
Error in f(m0) : 'file' must be NULL, a connection or a character string
> f(df0)
Error in f(df0) : 'file' must be NULL, a connection or a character string
> f(FALSE)
Error in f(FALSE) : 
  'file' must be NULL, a connection or a character string
> f(list(),list())
Error in f(list(), list()) : 
  'file' must be NULL, a connection or a character string
> f(l0,l0)
Error in f(l0, l0) : 
  'file' must be NULL, a connection or a character string
> f(c0,c0)
Error in if (append) "a" else "w" : argument is of length zero
Calls: f -> file
> f(df0,df0)
Error in f(df0, df0) : 
  'file' must be NULL, a connection or a character string
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'file' must be NULL, a connection or a character string
> 
> ##  sink.number  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sink.number", pos = 'package:base')
> f()
[1] 0
> f(NULL)
[1] 0
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(l0)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(c0)
Error in match.arg(type) : 'arg' should be one of "output", "message"
Calls: f -> match.arg
> f(m0)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(df0)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(FALSE)
Error in match.arg(type) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  sinpi  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sinpi", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'sinpi' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'sinpi' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'sinpi' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'sinpi' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'sinpi' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'sinpi' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'sinpi' which requires 1
> 
> ##  slice.index  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("slice.index", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "MARGIN" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in if ((length(MARGIN) > 1L) || (MARGIN < 1L) || (MARGIN > n)) stop("incorrect value for 'MARGIN'") : 
  missing value where TRUE/FALSE needed
Calls: f
> f(list())
Error in f(list()) : argument "MARGIN" is missing, with no default
> f(l0)
Error in f(l0) : argument "MARGIN" is missing, with no default
> f(c0)
Error in f(c0) : argument "MARGIN" is missing, with no default
> f(m0)
Error in f(m0) : argument "MARGIN" is missing, with no default
> f(df0)
Error in f(df0) : argument "MARGIN" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "MARGIN" is missing, with no default
> f(list(),list())
Error in if ((length(MARGIN) > 1L) || (MARGIN < 1L) || (MARGIN > n)) stop("incorrect value for 'MARGIN'") : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0,l0)
Error in if ((length(MARGIN) > 1L) || (MARGIN < 1L) || (MARGIN > n)) stop("incorrect value for 'MARGIN'") : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0,c0)
Error in if ((length(MARGIN) > 1L) || (MARGIN < 1L) || (MARGIN > n)) stop("incorrect value for 'MARGIN'") : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<' not meaningful for factors
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : incorrect value for 'MARGIN'
> 
> ##  solve  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("solve", pos = 'package:base')
> f()
Error in solve.default() : argument "a" is missing, with no default
Calls: f -> solve.default
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... solve.default -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in solve.default(, NULL) : argument "a" is missing, with no default
Calls: f -> solve.default
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f ... solve.default -> as.matrix -> as.matrix.default -> array
> f(list())
Error in solve.default(list()) : 'a' must be a numeric matrix
Calls: f -> solve.default
> f(l0)
Error in solve.default(l0) : 'a' is 0-diml
Calls: f -> solve.default
> f(c0)
Error in solve.default(c0) : 'a' must be a numeric matrix
Calls: f -> solve.default
> f(m0)
Error in solve.default(m0) : 'a' is 0-diml
Calls: f -> solve.default
> f(df0)
Error in solve.default(df0) : 'a' is 0-diml
Calls: f -> solve.default
> f(FALSE)
Error in solve.default(FALSE) : 
  Lapack routine dgesv: system is exactly singular: U[1,1] = 0
Calls: f -> solve.default
> f(list(),list())
Error in solve.default(list(), list()) : 'a' must be a numeric matrix
Calls: f -> solve.default
> f(l0,l0)
Error in solve.default(l0, l0) : 'a' is 0-diml
Calls: f -> solve.default
> f(c0,c0)
Error in solve.default(c0, c0) : 'a' must be a numeric matrix
Calls: f -> solve.default
> f(df0,df0)
Error in solve.default(df0, df0) : 'a' is 0-diml
Calls: f -> solve.default
> f(FALSE,FALSE)
Error in solve.default(FALSE, FALSE) : 
  Lapack routine dgesv: system is exactly singular: U[1,1] = 0
Calls: f -> solve.default
> 
> ##  solve.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("solve.default", pos = 'package:base')
> f()
Error in f() : argument "a" is missing, with no default
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in f(, NULL) : argument "a" is missing, with no default
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(list())
Error in f(list()) : 'a' must be a numeric matrix
> f(l0)
Error in f(l0) : 'a' is 0-diml
> f(c0)
Error in f(c0) : 'a' must be a numeric matrix
> f(m0)
Error in f(m0) : 'a' is 0-diml
> f(df0)
Error in f(df0) : 'a' is 0-diml
> f(FALSE)
Error in f(FALSE) : 
  Lapack routine dgesv: system is exactly singular: U[1,1] = 0
> f(list(),list())
Error in f(list(), list()) : 'a' must be a numeric matrix
> f(l0,l0)
Error in f(l0, l0) : 'a' is 0-diml
> f(c0,c0)
Error in f(c0, c0) : 'a' must be a numeric matrix
> f(df0,df0)
Error in f(df0, df0) : 'a' is 0-diml
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  Lapack routine dgesv: system is exactly singular: U[1,1] = 0
> 
> ##  solve.qr  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("solve.qr", pos = 'package:base')
> f()
Error in is.qr(a) : argument "a" is missing, with no default
Calls: f -> is.qr
> f(NULL)
Error in f(NULL) : 
  this is the "qr" method for the generic function solve()
> f(,NULL)
Error in is.qr(a) : argument "a" is missing, with no default
Calls: f -> is.qr
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  this is the "qr" method for the generic function solve()
> f(list())
Error in f(list()) : 
  this is the "qr" method for the generic function solve()
> f(l0)
Error in f(l0) : this is the "qr" method for the generic function solve()
> f(c0)
Error in f(c0) : this is the "qr" method for the generic function solve()
> f(m0)
Error in f(m0) : this is the "qr" method for the generic function solve()
> f(df0)
Error in f(df0) : 
  this is the "qr" method for the generic function solve()
> f(FALSE)
Error in f(FALSE) : 
  this is the "qr" method for the generic function solve()
> f(list(),list())
Error in f(list(), list()) : 
  this is the "qr" method for the generic function solve()
> f(l0,l0)
Error in f(l0, l0) : 
  this is the "qr" method for the generic function solve()
> f(c0,c0)
Error in f(c0, c0) : 
  this is the "qr" method for the generic function solve()
> f(df0,df0)
Error in f(df0, df0) : 
  this is the "qr" method for the generic function solve()
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  this is the "qr" method for the generic function solve()
> 
> ##  sort  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sort", pos = 'package:base')
> f()
Error in sort.default() : argument "x" is missing, with no default
Calls: f -> sort.default
> f(NULL)
NULL
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : 'decreasing' must be a length-1 logical vector.
Did you intend to set 'partial'?
> f(NULL,NULL)
Error in f(NULL, NULL) : 'decreasing' must be a length-1 logical vector.
Did you intend to set 'partial'?
> f(list())
Error in sort.int(x, na.last = na.last, decreasing = decreasing, ...) : 
  'x' must be atomic
Calls: f -> sort.default -> sort.int
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
data frame with 0 columns and 0 rows
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  'decreasing' must be a length-1 logical vector.
Did you intend to set 'partial'?
> f(l0,l0)
Error in f(l0, l0) : 'decreasing' must be a length-1 logical vector.
Did you intend to set 'partial'?
> f(c0,c0)
Error in f(c0, c0) : 'decreasing' must be a length-1 logical vector.
Did you intend to set 'partial'?
> f(df0,df0)
Error in f(df0, df0) : 'decreasing' must be a length-1 logical vector.
Did you intend to set 'partial'?
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  sort.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sort.POSIXlt", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> order -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> order -> as.POSIXct -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> order -> as.POSIXct -> as.POSIXct.default
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
Error in as.POSIXct.numeric(x) : 'origin' must be supplied
Calls: f -> order -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... [.data.frame -> order -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> order -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> order -> as.POSIXct -> as.POSIXct.default
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f ... [.data.frame -> order -> as.POSIXct -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(x) : 
  do not know how to convert 'x' to class "POSIXct"
Calls: f -> order -> as.POSIXct -> as.POSIXct.default
> 
> ##  sort.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sort.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in sort.int(x, na.last = na.last, decreasing = decreasing, ...) : 
  'decreasing' must be TRUE or FALSE
Calls: f -> sort.int
In addition: Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
Error in sort.int(x, na.last = na.last, decreasing = decreasing, ...) : 
  'x' must be atomic
Calls: f -> sort.int
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
data frame with 0 columns and 0 rows
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in sort.int(x, na.last = na.last, decreasing = decreasing, ...) : 
  'x' must be atomic
Calls: f -> sort.int
> f(l0,l0)
Error in order(x, na.last = na.last, decreasing = decreasing, method = "radix") : 
  'decreasing' elements must be TRUE or FALSE
Calls: f -> sort.int -> order
> f(c0,c0)
Error in sort.int(x, na.last = na.last, decreasing = decreasing, ...) : 
  'decreasing' must be TRUE or FALSE
Calls: f -> sort.int
> f(df0,df0)
data frame with 0 columns and 0 rows
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  sort.int  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sort.int", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
Error in f(list()) : 'x' must be atomic
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
Error in f(df0) : 'x' must be atomic
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 'x' must be atomic
> f(l0,l0)
logical(0)
> f(c0,c0)
Error in f(c0, c0) : argument is not a numeric vector
> f(df0,df0)
Error in f(df0, df0) : 'x' must be atomic
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : index 0 outside bounds
> 
> ##  sort.list  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sort.list", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument 1 is not a vector
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument 1 is not a vector
> f(list())
Error in f(list()) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
Error in f(df0) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
> f(l0,l0)
Error: argument 'partial != NULL' is not used (yet)
> f(c0,c0)
Error: argument 'partial != NULL' is not used (yet)
> f(df0,df0)
Error in f(df0, df0) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
> f(FALSE,FALSE)
Error: argument 'partial != NULL' is not used (yet)
> 
> ##  split  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("split", pos = 'package:base')
> f()
Error in split.default() : argument "f" is missing, with no default
Calls: f -> split.default
> f(NULL)
Error in split.default(NULL) : argument "f" is missing, with no default
Calls: f -> split.default
> f(,NULL)
Error in split.default(, NULL) : argument "x" is missing, with no default
Calls: f -> split.default
> f(NULL,NULL)
Error in split.default(NULL, NULL) : first argument must be a vector
Calls: f -> split.default
> f(list())
Error in split.default(list()) : argument "f" is missing, with no default
Calls: f -> split.default
> f(l0)
Error in split.default(l0) : argument "f" is missing, with no default
Calls: f -> split.default
> f(c0)
Error in split.default(c0) : argument "f" is missing, with no default
Calls: f -> split.default
> f(m0)
Error in split.default(m0) : argument "f" is missing, with no default
Calls: f -> split.default
> f(df0)
Error in split.default(x = seq_len(nrow(x)), f = f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f ... split.data.frame -> lapply -> split -> split.default
> f(FALSE)
Error in split.default(FALSE) : argument "f" is missing, with no default
Calls: f -> split.default
> f(list(),list())
Error in args[[i]] : 
  attempt to select less than one element in integerOneIndex
Calls: f ... split.default -> interaction -> as.factor -> is.factor
> f(l0,l0)
named list()
> f(c0,c0)
named list()
> f(df0,df0)
named list()
> f(FALSE,FALSE)
$`FALSE`
[1] FALSE

> 
> ##  split.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("split.Date", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in split.default(unclass(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> split.default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in split.default(unclass(x), f, drop = drop) : 
  first argument must be a vector
Calls: f -> split.default
> f(list())
Error in split.default(unclass(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> split.default
> f(l0)
Error in split.default(unclass(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> split.default
> f(c0)
Error in split.default(unclass(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> split.default
> f(m0)
Error in split.default(unclass(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> split.default
> f(df0)
Error in split.default(unclass(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> split.default
> f(FALSE)
Error in split.default(unclass(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> split.default
> f(list(),list())
Error in args[[i]] : 
  attempt to select less than one element in integerOneIndex
Calls: f ... split.default -> interaction -> as.factor -> is.factor
> f(l0,l0)
named list()
> f(c0,c0)
named list()
> f(df0,df0)
Error in split.default(unclass(x), f, drop = drop) : 
  group length is 0 but data length > 0
Calls: f -> split.default
> f(FALSE,FALSE)
$`FALSE`
[1] FALSE

> 
> ##  split.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("split.POSIXct", pos = 'package:base')
> f()
Error in split.default(as.double(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> lapply -> split.default
> f(NULL)
Error in split.default(as.double(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> lapply -> split.default
> f(,NULL)
Error in split.default(as.double(x), f, drop = drop) : 
  argument "x" is missing, with no default
Calls: f -> lapply -> split.default
> f(NULL,NULL)
named list()
> f(list())
Error in split.default(as.double(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> lapply -> split.default
> f(l0)
Error in split.default(as.double(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> lapply -> split.default
> f(c0)
Error in split.default(as.double(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> lapply -> split.default
> f(m0)
Error in split.default(as.double(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> lapply -> split.default
> f(df0)
Error in split.default(as.double(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> lapply -> split.default
> f(FALSE)
Error in split.default(as.double(x), f, drop = drop) : 
  argument "f" is missing, with no default
Calls: f -> lapply -> split.default
> f(list(),list())
Error in args[[i]] : 
  attempt to select less than one element in integerOneIndex
Calls: f ... split.default -> interaction -> as.factor -> is.factor
> f(l0,l0)
named list()
> f(c0,c0)
named list()
> f(df0,df0)
Error in split.default(as.double(x), f, drop = drop) : 
  group length is 0 but data length > 0
Calls: f -> lapply -> split.default
> f(FALSE,FALSE)
$`FALSE`
[1] "1969-12-31 19:00:00 EST"

> 
> ##  split.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("split.data.frame", pos = 'package:base')
> f()
Error in nrow(x) : argument "x" is missing, with no default
Calls: f -> lapply -> split -> nrow
> f(NULL)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> lapply -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(,NULL)
Error in nrow(x) : argument "x" is missing, with no default
Calls: f -> lapply -> split -> nrow
> f(NULL,NULL)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> lapply -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(list())
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> lapply -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(l0)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> lapply -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(c0)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> lapply -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(m0)
Error in split.default(x = seq_len(nrow(x)), f = f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> lapply -> split -> split.default
> f(df0)
Error in split.default(x = seq_len(nrow(x)), f = f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> lapply -> split -> split.default
> f(FALSE)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> lapply -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(list(),list())
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> lapply -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(l0,l0)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> lapply -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(c0,c0)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> lapply -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(df0,df0)
named list()
> f(FALSE,FALSE)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> lapply -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> 
> ##  split.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("split.default", pos = 'package:base')
> f()
Error in f() : argument "f" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "f" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : first argument must be a vector
> f(list())
Error in f(list()) : argument "f" is missing, with no default
> f(l0)
Error in f(l0) : argument "f" is missing, with no default
> f(c0)
Error in f(c0) : argument "f" is missing, with no default
> f(m0)
Error in f(m0) : argument "f" is missing, with no default
> f(df0)
Error in f(df0) : argument "f" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "f" is missing, with no default
> f(list(),list())
Error in args[[i]] : 
  attempt to select less than one element in integerOneIndex
Calls: f -> interaction -> as.factor -> is.factor
> f(l0,l0)
named list()
> f(c0,c0)
named list()
> f(df0,df0)
Error in f(df0, df0) : group length is 0 but data length > 0
> f(FALSE,FALSE)
$`FALSE`
[1] FALSE

> 
> ##  split<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("split<-", pos = 'package:base')
> f()
Error in split(seq_along(x), f, drop = drop, ...) : 
  argument "x" is missing, with no default
Calls: f -> split<-.default -> split
> f(NULL)
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split<-.default -> split -> split.default
> f(,NULL)
Error in split(seq_along(x), f, drop = drop, ...) : 
  argument "x" is missing, with no default
Calls: f -> split<-.default -> split
> f(NULL,NULL)
Error in `split<-.default`(NULL, NULL) : 
  argument "value" is missing, with no default
Calls: f -> split<-.default
> f(list())
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split<-.default -> split -> split.default
> f(l0)
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split<-.default -> split -> split.default
> f(c0)
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split<-.default -> split -> split.default
> f(m0)
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split<-.default -> split -> split.default
> f(df0)
Error in split.default(seq_len(nrow(x)), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split<-.data.frame -> split -> split.default
> f(FALSE)
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split<-.default -> split -> split.default
> f(list(),list())
Error in args[[i]] : 
  attempt to select less than one element in integerOneIndex
Calls: f ... split.default -> interaction -> as.factor -> is.factor
> f(l0,l0)
Error in `split<-.default`(l0, l0) : 
  argument "value" is missing, with no default
Calls: f -> split<-.default
> f(c0,c0)
Error in `split<-.default`(c0, c0) : 
  argument "value" is missing, with no default
Calls: f -> split<-.default
> f(df0,df0)
Error in `split<-.data.frame`(df0, df0) : 
  argument "value" is missing, with no default
Calls: f -> split<-.data.frame
> f(FALSE,FALSE)
Error in `split<-.default`(FALSE, FALSE) : 
  argument "value" is missing, with no default
Calls: f -> split<-.default
> 
> ##  split<-.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("split<-.data.frame", pos = 'package:base')
> f()
Error in nrow(x) : argument "x" is missing, with no default
Calls: f -> split -> nrow
> f(NULL)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(,NULL)
Error in nrow(x) : argument "x" is missing, with no default
Calls: f -> split -> nrow
> f(NULL,NULL)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(list())
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(l0)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(c0)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(m0)
Error in split.default(seq_len(nrow(x)), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split -> split.default
> f(df0)
Error in split.default(seq_len(nrow(x)), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split -> split.default
> f(FALSE)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(list(),list())
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(l0,l0)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(c0,c0)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> f(df0,df0)
Error in f(df0, df0) : argument "value" is missing, with no default
> f(FALSE,FALSE)
Error in seq_len(nrow(x)) : 
  argument must be coercible to non-negative integer
Calls: f -> split
In addition: Warning message:
In seq_len(nrow(x)) : first element used of 'length.out' argument
> 
> ##  split<-.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("split<-.default", pos = 'package:base')
> f()
Error in split(seq_along(x), f, drop = drop, ...) : 
  argument "x" is missing, with no default
Calls: f -> split
> f(NULL)
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split -> split.default
> f(,NULL)
Error in split(seq_along(x), f, drop = drop, ...) : 
  argument "x" is missing, with no default
Calls: f -> split
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "value" is missing, with no default
> f(list())
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split -> split.default
> f(l0)
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split -> split.default
> f(c0)
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split -> split.default
> f(m0)
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split -> split.default
> f(df0)
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split -> split.default
> f(FALSE)
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  argument "f" is missing, with no default
Calls: f -> split -> split.default
> f(list(),list())
Error in args[[i]] : 
  attempt to select less than one element in integerOneIndex
Calls: f ... split.default -> interaction -> as.factor -> is.factor
> f(l0,l0)
Error in f(l0, l0) : argument "value" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "value" is missing, with no default
> f(df0,df0)
Error in split.default(seq_along(x), f, drop = drop, ...) : 
  group length is 0 but data length > 0
Calls: f -> split -> split.default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "value" is missing, with no default
> 
> ##  sprintf  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sprintf", pos = 'package:base')
> f()
Error in f() : argument "fmt" is missing, with no default
> f(NULL)
Error in f(NULL) : 'fmt' is not a character vector
> f(,NULL)
Error in f(, NULL) : argument "fmt" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'fmt' is not a character vector
> f(list())
Error in f(list()) : 'fmt' is not a character vector
> f(l0)
Error in f(l0) : 'fmt' is not a character vector
> f(c0)
character(0)
> f(m0)
Error in f(m0) : 'fmt' is not a character vector
> f(df0)
Error in f(df0) : 'fmt' is not a character vector
> f(FALSE)
Error in f(FALSE) : 'fmt' is not a character vector
> f(list(),list())
Error in f(list(), list()) : 'fmt' is not a character vector
> f(l0,l0)
Error in f(l0, l0) : 'fmt' is not a character vector
> f(c0,c0)
character(0)
> f(df0,df0)
Error in f(df0, df0) : 'fmt' is not a character vector
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'fmt' is not a character vector
> 
> ##  sqrt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sqrt", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'sqrt' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'sqrt' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'sqrt' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'sqrt' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'sqrt' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'sqrt' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'sqrt' which requires 1
> 
> ##  srcfile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("srcfile", pos = 'package:base')
> f()
Error in stopifnot(is.character(filename), length(filename) == 1L) : 
  argument "filename" is missing, with no default
Calls: f -> stopifnot
> f(NULL)
Error: is.character(filename) is not TRUE
> f(,NULL)
Error in stopifnot(is.character(filename), length(filename) == 1L) : 
  argument "filename" is missing, with no default
Calls: f -> stopifnot
> f(NULL,NULL)
Error: is.character(filename) is not TRUE
> f(list())
Error: is.character(filename) is not TRUE
> f(l0)
Error: is.character(filename) is not TRUE
> f(c0)
Error: length(filename) == 1L is not TRUE
> f(m0)
Error: is.character(filename) is not TRUE
> f(df0)
Error: is.character(filename) is not TRUE
> f(FALSE)
Error: is.character(filename) is not TRUE
> f(list(),list())
Error: is.character(filename) is not TRUE
> f(l0,l0)
Error: is.character(filename) is not TRUE
> f(c0,c0)
Error: length(filename) == 1L is not TRUE
> f(df0,df0)
Error: is.character(filename) is not TRUE
> f(FALSE,FALSE)
Error: is.character(filename) is not TRUE
> 
> ##  srcfilealias  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("srcfilealias", pos = 'package:base')
> f()
Error in stopifnot(is.character(filename), length(filename) == 1L) : 
  argument "filename" is missing, with no default
Calls: f -> stopifnot
> f(NULL)
Error: is.character(filename) is not TRUE
> f(,NULL)
Error in stopifnot(is.character(filename), length(filename) == 1L) : 
  argument "filename" is missing, with no default
Calls: f -> stopifnot
> f(NULL,NULL)
Error: is.character(filename) is not TRUE
> f(list())
Error: is.character(filename) is not TRUE
> f(l0)
Error: is.character(filename) is not TRUE
> f(c0)
Error: length(filename) == 1L is not TRUE
> f(m0)
Error: is.character(filename) is not TRUE
> f(df0)
Error: is.character(filename) is not TRUE
> f(FALSE)
Error: is.character(filename) is not TRUE
> f(list(),list())
Error: is.character(filename) is not TRUE
> f(l0,l0)
Error: is.character(filename) is not TRUE
> f(c0,c0)
Error: length(filename) == 1L is not TRUE
> f(df0,df0)
Error: is.character(filename) is not TRUE
> f(FALSE,FALSE)
Error: is.character(filename) is not TRUE
> 
> ##  srcfilecopy  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("srcfilecopy", pos = 'package:base')
> f()
Error in stopifnot(is.character(filename), length(filename) == 1L) : 
  argument "filename" is missing, with no default
Calls: f -> stopifnot
> f(NULL)
Error: is.character(filename) is not TRUE
> f(,NULL)
Error in stopifnot(is.character(filename), length(filename) == 1L) : 
  argument "filename" is missing, with no default
Calls: f -> stopifnot
> f(NULL,NULL)
Error: is.character(filename) is not TRUE
> f(list())
Error: is.character(filename) is not TRUE
> f(l0)
Error: is.character(filename) is not TRUE
> f(c0)
Error: length(filename) == 1L is not TRUE
> f(m0)
Error: is.character(filename) is not TRUE
> f(df0)
Error: is.character(filename) is not TRUE
> f(FALSE)
Error: is.character(filename) is not TRUE
> f(list(),list())
Error: is.character(filename) is not TRUE
> f(l0,l0)
Error: is.character(filename) is not TRUE
> f(c0,c0)
Error: length(filename) == 1L is not TRUE
> f(df0,df0)
Error: is.character(filename) is not TRUE
> f(FALSE,FALSE)
Error: is.character(filename) is not TRUE
> 
> ##  srcref  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("srcref", pos = 'package:base')
> f()
Error in stopifnot(inherits(srcfile, "srcfile"), length(lloc) %in% c(4L,  : 
  argument "srcfile" is missing, with no default
Calls: f -> stopifnot
> f(NULL)
Error in match(x, table, nomatch = 0L) : 
  argument "lloc" is missing, with no default
Calls: f -> stopifnot -> %in% -> match
> f(,NULL)
Error in stopifnot(inherits(srcfile, "srcfile"), length(lloc) %in% c(4L,  : 
  argument "srcfile" is missing, with no default
Calls: f -> stopifnot
> f(NULL,NULL)
Error: inherits(srcfile, "srcfile") is not TRUE
> f(list())
Error in match(x, table, nomatch = 0L) : 
  argument "lloc" is missing, with no default
Calls: f -> stopifnot -> %in% -> match
> f(l0)
Error in match(x, table, nomatch = 0L) : 
  argument "lloc" is missing, with no default
Calls: f -> stopifnot -> %in% -> match
> f(c0)
Error in match(x, table, nomatch = 0L) : 
  argument "lloc" is missing, with no default
Calls: f -> stopifnot -> %in% -> match
> f(m0)
Error in match(x, table, nomatch = 0L) : 
  argument "lloc" is missing, with no default
Calls: f -> stopifnot -> %in% -> match
> f(df0)
Error in match(x, table, nomatch = 0L) : 
  argument "lloc" is missing, with no default
Calls: f -> stopifnot -> %in% -> match
> f(FALSE)
Error in match(x, table, nomatch = 0L) : 
  argument "lloc" is missing, with no default
Calls: f -> stopifnot -> %in% -> match
> f(list(),list())
Error: inherits(srcfile, "srcfile") is not TRUE
> f(l0,l0)
Error: inherits(srcfile, "srcfile") is not TRUE
> f(c0,c0)
Error: inherits(srcfile, "srcfile") is not TRUE
> f(df0,df0)
Error: inherits(srcfile, "srcfile") is not TRUE
> f(FALSE,FALSE)
Error: inherits(srcfile, "srcfile") is not TRUE
> 
> ##  standardGeneric  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("standardGeneric", pos = 'package:base')
> f()
Error in f() : 
  argument to 'standardGeneric' must be a non-empty character string
> f(NULL)
Error in f(NULL) : 
  argument to 'standardGeneric' must be a non-empty character string
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  argument to 'standardGeneric' must be a non-empty character string
> f(list())
Error in f(list()) : 
  argument to 'standardGeneric' must be a non-empty character string
> f(l0)
Error in f(l0) : 
  argument to 'standardGeneric' must be a non-empty character string
> f(c0)
Error in f(c0) : 
  argument to 'standardGeneric' must be a non-empty character string
> f(m0)
Error in f(m0) : 
  argument to 'standardGeneric' must be a non-empty character string
> f(df0)
Error in f(df0) : 
  argument to 'standardGeneric' must be a non-empty character string
> f(FALSE)
Error in f(FALSE) : 
  argument to 'standardGeneric' must be a non-empty character string
> f(list(),list())
Error in f(list(), list()) : 
  argument to 'standardGeneric' must be a non-empty character string
> f(l0,l0)
Error in f(l0, l0) : 
  argument to 'standardGeneric' must be a non-empty character string
> f(c0,c0)
Error in f(c0, c0) : 
  argument to 'standardGeneric' must be a non-empty character string
> f(df0,df0)
Error in f(df0, df0) : 
  argument to 'standardGeneric' must be a non-empty character string
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  argument to 'standardGeneric' must be a non-empty character string
> 
> ##  startsWith  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("startsWith", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "prefix" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : non-character object(s)
> f(list())
Error in f(list()) : argument "prefix" is missing, with no default
> f(l0)
Error in f(l0) : argument "prefix" is missing, with no default
> f(c0)
Error in f(c0) : argument "prefix" is missing, with no default
> f(m0)
Error in f(m0) : argument "prefix" is missing, with no default
> f(df0)
Error in f(df0) : argument "prefix" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "prefix" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : non-character object(s)
> f(l0,l0)
Error in f(l0, l0) : non-character object(s)
> f(c0,c0)
logical(0)
> f(df0,df0)
Error in f(df0, df0) : non-character object(s)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : non-character object(s)
> 
> ##  stderr  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("stderr", pos = 'package:base')
> f()
description       class        mode        text      opened    can read 
   "stderr"  "terminal"         "w"      "text"    "opened"        "no" 
  can write 
      "yes" 
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  stdin  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("stdin", pos = 'package:base')
> f()
description       class        mode        text      opened    can read 
    "stdin"  "terminal"         "r"      "text"    "opened"       "yes" 
  can write 
       "no" 
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  stdout  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("stdout", pos = 'package:base')
> f()
description       class        mode        text      opened    can read 
   "stdout"  "terminal"         "w"      "text"    "opened"        "no" 
  can write 
      "yes" 
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  stop  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("stop", pos = 'package:base')
> f()
Error: 
> f(NULL)
Error: 
> f(,NULL)
Error: 
> f(NULL,NULL)
Error: 
> f(list())
Error: 
> f(l0)
Error: 
> f(c0)
Error: 
> f(m0)
Error: 
> f(df0)
Error: integer(0)
> f(FALSE)
Error: FALSE
> f(list(),list())
Error: 
> f(l0,l0)
Error: 
> f(c0,c0)
Error: 
> f(df0,df0)
Error: integer(0)integer(0)
> f(FALSE,FALSE)
Error: FALSEFALSE
> 
> ##  stopifnot  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("stopifnot", pos = 'package:base')
> f()
> f(NULL)
Error: NULL are not all TRUE
> f(,NULL)
Error:  are not all TRUE
> f(NULL,NULL)
Error: NULL are not all TRUE
> f(list())
Error: list() are not all TRUE
> f(l0)
> f(c0)
Error: c0 are not all TRUE
> f(m0)
Error: m0 are not all TRUE
> f(df0)
Error: df0 is not TRUE
> f(FALSE)
Error: FALSE is not TRUE
> f(list(),list())
Error: list() are not all TRUE
> f(l0,l0)
> f(c0,c0)
Error: c0 are not all TRUE
> f(df0,df0)
Error: df0 is not TRUE
> f(FALSE,FALSE)
Error: FALSE is not TRUE
> 
> ##  storage.mode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("storage.mode", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] "list"
> f(l0)
[1] "logical"
> f(c0)
[1] "character"
> f(m0)
[1] "double"
> f(df0)
[1] "list"
> f(FALSE)
[1] "logical"
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  storage.mode<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("storage.mode<-", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'storage.mode<-' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to 'storage.mode<-' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error: 'value' must be non-null character string
> f(list())
Error in f(list()) : 
  1 argument passed to 'storage.mode<-' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to 'storage.mode<-' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to 'storage.mode<-' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to 'storage.mode<-' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to 'storage.mode<-' which requires 2
> f(FALSE)
Error in f(FALSE) : 
  1 argument passed to 'storage.mode<-' which requires 2
> f(list(),list())
Error: 'value' must be non-null character string
> f(l0,l0)
Error: 'value' must be non-null character string
> f(c0,c0)
Error: 'value' must be non-null character string
> f(df0,df0)
Error: 'value' must be non-null character string
> f(FALSE,FALSE)
Error: 'value' must be non-null character string
> 
> ##  strftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("strftime", pos = 'package:base')
> f()
Error in as.POSIXlt(x, tz = tz) : 
  argument "x" is missing, with no default
Calls: f -> format -> as.POSIXlt
> f(NULL)
Error in as.POSIXlt.default(x, tz = tz) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(,NULL)
Error in as.POSIXlt(x, tz = tz) : 
  argument "x" is missing, with no default
Calls: f -> format -> as.POSIXlt
> f(NULL,NULL)
Error in as.POSIXlt.default(x, tz = tz) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(list())
Error in as.POSIXlt.default(x, tz = tz) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
Error in as.POSIXlt.numeric(x, tz = tz) : 'origin' must be supplied
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.numeric
> f(df0)
Error in as.POSIXlt.default(x, tz = tz) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(FALSE)
Error in as.POSIXlt.default(x, tz = tz) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(list(),list())
Error in as.POSIXlt.default(x, tz = tz) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(l0,l0)
Error in format.POSIXlt(as.POSIXlt(x, tz = tz), format = format, usetz = usetz,  : 
  invalid 'format' argument
Calls: f -> format -> format.POSIXlt
> f(c0,c0)
Error in format.POSIXlt(as.POSIXlt(x, tz = tz), format = format, usetz = usetz,  : 
  invalid 'format' argument
Calls: f -> format -> format.POSIXlt
> f(df0,df0)
Error in as.POSIXlt.default(x, tz = tz) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> f(FALSE,FALSE)
Error in as.POSIXlt.default(x, tz = tz) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> format -> as.POSIXlt -> as.POSIXlt.default
> 
> ##  strptime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("strptime", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "format" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'x' argument
> f(list())
Error in f(list()) : argument "format" is missing, with no default
> f(l0)
Error in f(l0) : argument "format" is missing, with no default
> f(c0)
Error in f(c0) : argument "format" is missing, with no default
> f(m0)
Error in f(m0) : argument "format" is missing, with no default
> f(df0)
Error in f(df0) : argument "format" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "format" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'x' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'x' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'x' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'x' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'x' argument
> 
> ##  strrep  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("strrep", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "times" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
Error in f(list()) : argument "times" is missing, with no default
> f(l0)
Error in f(l0) : argument "times" is missing, with no default
> f(c0)
Error in f(c0) : argument "times" is missing, with no default
> f(m0)
Error in f(m0) : argument "times" is missing, with no default
> f(df0)
Error in f(df0) : argument "times" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "times" is missing, with no default
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[1] NA
> f(FALSE,FALSE)
[1] ""
> 
> ##  strsplit  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("strsplit", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "split" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : non-character argument
> f(list())
Error in f(list()) : argument "split" is missing, with no default
> f(l0)
Error in f(l0) : argument "split" is missing, with no default
> f(c0)
Error in f(c0) : argument "split" is missing, with no default
> f(m0)
Error in f(m0) : argument "split" is missing, with no default
> f(df0)
Error in f(df0) : argument "split" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "split" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : non-character argument
> f(l0,l0)
Error in f(l0, l0) : non-character argument
> f(c0,c0)
list()
> f(df0,df0)
Error in f(df0, df0) : non-character argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : non-character argument
> 
> ##  strtoi  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("strtoi", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
integer(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'base' argument
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
[1] NA
> f(FALSE)
[1] NA
> f(list(),list())
Error in f(list(), list()) : invalid 'base' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'base' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'base' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'base' argument
> f(FALSE,FALSE)
[1] NA
> 
> ##  strtrim  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("strtrim", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "width" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'width' argument
> f(list())
Error in f(list()) : argument "width" is missing, with no default
> f(l0)
Error in f(l0) : argument "width" is missing, with no default
> f(c0)
Error in f(c0) : argument "width" is missing, with no default
> f(m0)
Error in f(m0) : argument "width" is missing, with no default
> f(df0)
Error in f(df0) : argument "width" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "width" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : invalid 'width' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'width' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'width' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'width' argument
> f(FALSE,FALSE)
[1] ""
> 
> ##  structure  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("structure", pos = 'package:base')
> f()
Error in f() : argument ".Data" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument ".Data" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : attributes must be named
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : attributes must be named
> f(l0,l0)
Error in f(l0, l0) : attributes must be named
> f(c0,c0)
Error in f(c0, c0) : attributes must be named
> f(df0,df0)
Error in f(df0, df0) : all attributes must have names [4 does not]
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : attributes must be named
> 
> ##  strwrap  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("strwrap", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in if (nc[currentIndex] == 0L) upperBlockIndex <- c(upperBlockIndex,  : 
  missing value where TRUE/FALSE needed
Calls: f
In addition: Warning messages:
1: In Ops.factor(left, right) : '-' not meaningful for factors
2: In Ops.factor(left, right) : '-' not meaningful for factors
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  sub  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sub", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "x" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "x" is missing, with no default
> f(list())
Error in f(list()) : argument "x" is missing, with no default
> f(l0)
Error in f(l0) : argument "x" is missing, with no default
> f(c0)
Error in f(c0) : argument "x" is missing, with no default
> f(m0)
Error in f(m0) : argument "x" is missing, with no default
> f(df0)
Error in f(df0) : argument "x" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "x" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "x" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "x" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "x" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "x" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "x" is missing, with no default
> 
> ##  subset  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("subset", pos = 'package:base')
> f()
Error in subset.default() : argument "subset" is missing, with no default
Calls: f -> subset.default
> f(NULL)
Error in subset.default(NULL) : 
  argument "subset" is missing, with no default
Calls: f -> subset.default
> f(,NULL)
Error in subset.default(, NULL) : 'subset' must be logical
Calls: f -> subset.default
> f(NULL,NULL)
Error in subset.default(NULL, NULL) : 'subset' must be logical
Calls: f -> subset.default
> f(list())
Error in subset.default(list()) : 
  argument "subset" is missing, with no default
Calls: f -> subset.default
> f(l0)
Error in subset.default(l0) : 
  argument "subset" is missing, with no default
Calls: f -> subset.default
> f(c0)
Error in subset.default(c0) : 
  argument "subset" is missing, with no default
Calls: f -> subset.default
> f(m0)
Error in x[subset & !is.na(subset), vars, drop = drop] : 
  (subscript) logical subscript too long
Calls: f -> subset.matrix
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in subset.default(FALSE) : 
  argument "subset" is missing, with no default
Calls: f -> subset.default
> f(list(),list())
Error in subset.default(list(), list()) : 'subset' must be logical
Calls: f -> subset.default
> f(l0,l0)
logical(0)
> f(c0,c0)
Error in subset.default(c0, c0) : 'subset' must be logical
Calls: f -> subset.default
> f(df0,df0)
Error in subset.data.frame(df0, df0) : 'subset' must be logical
Calls: f -> subset.data.frame
> f(FALSE,FALSE)
logical(0)
> 
> ##  subset.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("subset.data.frame", pos = 'package:base')
> f()
Error in nrow(x) : argument "x" is missing, with no default
Calls: f -> rep_len -> nrow
> f(NULL)
Error in rep_len(TRUE, nrow(x)) : invalid 'length.out' value
Calls: f -> rep_len
> f(,NULL)
Error in eval(e, x, parent.frame()) : 
  argument "x" is missing, with no default
Calls: f -> eval
> f(NULL,NULL)
Error in f(NULL, NULL) : 'subset' must be logical
> f(list())
Error in rep_len(TRUE, nrow(x)) : invalid 'length.out' value
Calls: f -> rep_len
> f(l0)
Error in rep_len(TRUE, nrow(x)) : invalid 'length.out' value
Calls: f -> rep_len
> f(c0)
Error in rep_len(TRUE, nrow(x)) : invalid 'length.out' value
Calls: f -> rep_len
> f(m0)
Error in x[r, vars, drop = drop] : (subscript) logical subscript too long
Calls: f
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in rep_len(TRUE, nrow(x)) : invalid 'length.out' value
Calls: f -> rep_len
> f(list(),list())
Error in f(list(), list()) : 'subset' must be logical
> f(l0,l0)
Error in eval(e, x, parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> eval
> f(c0,c0)
Error in eval(e, x, parent.frame()) : 
  invalid 'envir' argument of type 'character'
Calls: f -> eval
> f(df0,df0)
Error in f(df0, df0) : 'subset' must be logical
> f(FALSE,FALSE)
Error in eval(e, x, parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> eval
> 
> ##  subset.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("subset.default", pos = 'package:base')
> f()
Error in f() : argument "subset" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "subset" is missing, with no default
> f(,NULL)
Error in f(, NULL) : 'subset' must be logical
> f(NULL,NULL)
Error in f(NULL, NULL) : 'subset' must be logical
> f(list())
Error in f(list()) : argument "subset" is missing, with no default
> f(l0)
Error in f(l0) : argument "subset" is missing, with no default
> f(c0)
Error in f(c0) : argument "subset" is missing, with no default
> f(m0)
Error in f(m0) : argument "subset" is missing, with no default
> f(df0)
Error in f(df0) : argument "subset" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "subset" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : 'subset' must be logical
> f(l0,l0)
logical(0)
> f(c0,c0)
Error in f(c0, c0) : 'subset' must be logical
> f(df0,df0)
Error in f(df0, df0) : 'subset' must be logical
> f(FALSE,FALSE)
logical(0)
> 
> ##  subset.matrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("subset.matrix", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : 'subset' must be logical
> f(NULL,NULL)
Error in f(NULL, NULL) : 'subset' must be logical
> f(list())
Error in x[subset & !is.na(subset), vars, drop = drop] : 
  incorrect number of dimensions
Calls: f
> f(l0)
Error in x[subset & !is.na(subset), vars, drop = drop] : 
  incorrect number of dimensions
Calls: f
> f(c0)
Error in x[subset & !is.na(subset), vars, drop = drop] : 
  incorrect number of dimensions
Calls: f
> f(m0)
Error in x[subset & !is.na(subset), vars, drop = drop] : 
  (subscript) logical subscript too long
Calls: f
> f(df0)
     c0
NA <NA>
> f(FALSE)
Error in x[subset & !is.na(subset), vars, drop = drop] : 
  incorrect number of dimensions
Calls: f
> f(list(),list())
Error in f(list(), list()) : 'subset' must be logical
> f(l0,l0)
Error in x[subset & !is.na(subset), vars, drop = drop] : 
  incorrect number of dimensions
Calls: f
> f(c0,c0)
Error in f(c0, c0) : 'subset' must be logical
> f(df0,df0)
Error in f(df0, df0) : 'subset' must be logical
> f(FALSE,FALSE)
Error in x[subset & !is.na(subset), vars, drop = drop] : 
  incorrect number of dimensions
Calls: f
> 
> ##  substitute  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("substitute", pos = 'package:base')
> f()

> f(NULL)
NULL
> f(,NULL)

> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
l0
> f(c0)
c0
> f(m0)
m0
> f(df0)
df0
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
Error in f(l0, l0) : invalid environment specified
> f(c0,c0)
Error in f(c0, c0) : invalid environment specified
> f(df0,df0)
df0
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid environment specified
> 
> ##  substr  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("substr", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "start" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "stop" is missing, with no default
> f(list())
Error in f(list()) : argument "start" is missing, with no default
> f(l0)
Error in f(l0) : argument "start" is missing, with no default
> f(c0)
Error in f(c0) : argument "start" is missing, with no default
> f(m0)
Error in f(m0) : argument "start" is missing, with no default
> f(df0)
Error in f(df0) : argument "start" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "start" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "stop" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "stop" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "stop" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "stop" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "stop" is missing, with no default
> 
> ##  substr<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("substr<-", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "start" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "stop" is missing, with no default
> f(list())
Error in f(list()) : argument "start" is missing, with no default
> f(l0)
Error in f(l0) : argument "start" is missing, with no default
> f(c0)
Error in f(c0) : argument "start" is missing, with no default
> f(m0)
Error in f(m0) : argument "start" is missing, with no default
> f(df0)
Error in f(df0) : argument "start" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "start" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "stop" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "stop" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "stop" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "stop" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "stop" is missing, with no default
> 
> ##  substring  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("substring", pos = 'package:base')
> f()
Error in f() : argument "text" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "first" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "text" is missing, with no default
> f(NULL,NULL)
character(0)
> f(list())
Error in f(list()) : argument "first" is missing, with no default
> f(l0)
Error in f(l0) : argument "first" is missing, with no default
> f(c0)
Error in f(c0) : argument "first" is missing, with no default
> f(m0)
Error in f(m0) : argument "first" is missing, with no default
> f(df0)
Error in f(df0) : argument "first" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "first" is missing, with no default
> f(list(),list())
character(0)
> f(l0,l0)
character(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[1] NA
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  substring<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("substring<-", pos = 'package:base')
> f()
Error in f() : argument "text" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "first" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "text" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "value" is missing, with no default
> f(list())
Error in f(list()) : argument "first" is missing, with no default
> f(l0)
Error in f(l0) : argument "first" is missing, with no default
> f(c0)
Error in f(c0) : argument "first" is missing, with no default
> f(m0)
Error in f(m0) : argument "first" is missing, with no default
> f(df0)
Error in f(df0) : argument "first" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "first" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "value" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "value" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "value" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "value" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "value" is missing, with no default
> 
> ##  sum  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sum", pos = 'package:base')
> f()
[1] 0
> f(NULL)
[1] 0
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
[1] 0
> f(list())
Error in f(list()) : invalid 'type' (list) of argument
> f(l0)
[1] 0
> f(c0)
Error in f(c0) : invalid 'type' (character) of argument
> f(m0)
[1] 0
> f(df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : invalid 'type' (list) of argument
> f(l0,l0)
[1] 0
> f(c0,c0)
Error in f(c0, c0) : invalid 'type' (character) of argument
> f(df0,df0)
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: Summary.data.frame -> lapply -> FUN
> f(FALSE,FALSE)
[1] 0
> 
> ##  summary  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("summary", pos = 'package:base')
> f()
Error in is.factor(object) : 
  argument "object" is missing, with no default
Calls: f -> summary.default -> is.factor
> f(NULL)
Length  Class   Mode 
     0   NULL   NULL 
> f(,NULL)
Error in is.factor(object) : 
  argument "object" is missing, with no default
Calls: f -> summary.default -> is.factor
> f(NULL,NULL)
Length  Class   Mode 
     0   NULL   NULL 
> f(list())
Length  Class   Mode 
     0   list   list 
> f(l0)
   Mode    NA's 
logical       0 
> f(c0)
   Length     Class      Mode 
        0 character character 
> f(m0)
< table of extent 0 x 0 >
> f(df0)
< table of extent 0 x 1 >
> f(FALSE)
   Mode   FALSE    NA's 
logical       1       0 
> f(list(),list())
Length  Class   Mode 
     0   list   list 
> f(l0,l0)
   Mode    NA's 
logical       0 
> f(c0,c0)
   Length     Class      Mode 
        0 character character 
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f ... lapply -> FUN -> summary.factor -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '>' not meaningful for factors
> f(FALSE,FALSE)
   Mode   FALSE    NA's 
logical       1       0 
> 
> ##  summary.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("summary.Date", pos = 'package:base')
> f()
Error in is.factor(object) : 
  argument "object" is missing, with no default
Calls: f -> summary.default -> is.factor
> f(NULL)
Length  Class   Mode 
     0   NULL   NULL 
> f(,NULL)
Error in is.factor(object) : 
  argument "object" is missing, with no default
Calls: f -> summary.default -> is.factor
> f(NULL,NULL)
Length  Class   Mode 
     0   NULL   NULL 
> f(list())
Length  Class   Mode 
     0   list   list 
> f(l0)
   Mode 
logical 
> f(c0)
   Length     Class      Mode 
        0 character character 
> f(m0)
< table of extent 0 x 0 >
> f(df0)
< table of extent 0 x 3 >
> f(FALSE)
   Mode   FALSE 
logical       1 
> f(list(),list())
Length  Class   Mode 
     0   list   list 
> f(l0,l0)
   Mode 
logical 
> f(c0,c0)
   Length     Class      Mode 
        0 character character 
> f(df0,df0)
< table of extent 0 x 3 >
> f(FALSE,FALSE)
   Mode   FALSE 
logical       1 
> 
> ##  summary.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("summary.POSIXct", pos = 'package:base')
> f()
Error in is.factor(object) : 
  argument "object" is missing, with no default
Calls: f -> summary.default -> is.factor
> f(NULL)
Length  Class   Mode 
     0   NULL   NULL 
> f(,NULL)
Error in is.factor(object) : 
  argument "object" is missing, with no default
Calls: f -> summary.default -> is.factor
> f(NULL,NULL)
Length  Class   Mode 
     0   NULL   NULL 
> f(list())
Length  Class   Mode 
     0   list   list 
> f(l0)
   Mode 
logical 
> f(c0)
   Length     Class      Mode 
        0 character character 
> f(m0)
< table of extent 0 x 0 >
> f(df0)
< table of extent 0 x 3 >
> f(FALSE)
   Mode   FALSE 
logical       1 
> f(list(),list())
Length  Class   Mode 
     0   list   list 
> f(l0,l0)
   Mode 
logical 
> f(c0,c0)
   Length     Class      Mode 
        0 character character 
> f(df0,df0)
< table of extent 0 x 3 >
> f(FALSE,FALSE)
   Mode   FALSE 
logical       1 
> 
> ##  summary.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("summary.POSIXlt", pos = 'package:base')
> f()
Error in as.POSIXct(object) : 
  argument "object" is missing, with no default
Calls: f -> summary -> as.POSIXct
> f(NULL)
Error in as.POSIXct.default(object) : 
  do not know how to convert 'object' to class "POSIXct"
Calls: f -> summary -> as.POSIXct -> as.POSIXct.default
> f(,NULL)
Error in as.POSIXct(object) : 
  argument "object" is missing, with no default
Calls: f -> summary -> as.POSIXct
> f(NULL,NULL)
Error in as.POSIXct.default(object) : 
  do not know how to convert 'object' to class "POSIXct"
Calls: f -> summary -> as.POSIXct -> as.POSIXct.default
> f(list())
Error in as.POSIXct.default(object) : 
  do not know how to convert 'object' to class "POSIXct"
Calls: f -> summary -> as.POSIXct -> as.POSIXct.default
> f(l0)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
     NA      NA      NA      NA      NA      NA 
> f(c0)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
     NA      NA      NA      NA      NA      NA 
> f(m0)
Error in as.POSIXct.numeric(object) : 'origin' must be supplied
Calls: f -> summary -> as.POSIXct -> as.POSIXct.numeric
> f(df0)
Error in as.POSIXct.default(object) : 
  do not know how to convert 'object' to class "POSIXct"
Calls: f -> summary -> as.POSIXct -> as.POSIXct.default
> f(FALSE)
Error in as.POSIXct.default(object) : 
  do not know how to convert 'object' to class "POSIXct"
Calls: f -> summary -> as.POSIXct -> as.POSIXct.default
> f(list(),list())
Error in as.POSIXct.default(object) : 
  do not know how to convert 'object' to class "POSIXct"
Calls: f -> summary -> as.POSIXct -> as.POSIXct.default
> f(l0,l0)
Error in signif(c(qq[1L:3L], mean(object), qq[4L:5L]), digits) : 
  invalid second argument of length 0
Calls: f -> summary -> summary.POSIXct -> summary.default
> f(c0,c0)
Error in signif(c(qq[1L:3L], mean(object), qq[4L:5L]), digits) : 
  invalid second argument of length 0
Calls: f -> summary -> summary.POSIXct -> summary.default
> f(df0,df0)
Error in as.POSIXct.default(object) : 
  do not know how to convert 'object' to class "POSIXct"
Calls: f -> summary -> as.POSIXct -> as.POSIXct.default
> f(FALSE,FALSE)
Error in as.POSIXct.default(object) : 
  do not know how to convert 'object' to class "POSIXct"
Calls: f -> summary -> as.POSIXct -> as.POSIXct.default
> 
> ##  summary.connection  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("summary.connection", pos = 'package:base')
> f()
Error in f() : argument "object" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid connection
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid connection
> f(list())
Error in f(list()) : invalid connection
> f(l0)
Error in f(l0) : invalid connection
> f(c0)
Error in f(c0) : invalid connection
> f(m0)
Error in f(m0) : invalid connection
> f(df0)
Error in f(df0) : invalid connection
> f(FALSE)
$description
[1] "stdin"

$class
[1] "terminal"

$mode
[1] "r"

$text
[1] "text"

$opened
[1] "opened"

$`can read`
[1] "yes"

$`can write`
[1] "no"

> f(list(),list())
Error in f(list(), list()) : invalid connection
> f(l0,l0)
Error in f(l0, l0) : invalid connection
> f(c0,c0)
Error in f(c0, c0) : invalid connection
> f(df0,df0)
Error in f(df0, df0) : invalid connection
> f(FALSE,FALSE)
$description
[1] "stdin"

$class
[1] "terminal"

$mode
[1] "r"

$text
[1] "text"

$opened
[1] "opened"

$`can read`
[1] "yes"

$`can write`
[1] "no"

> 
> ##  summary.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("summary.data.frame", pos = 'package:base')
> f()
Error in as.list(object) : argument "object" is missing, with no default
Calls: f -> lapply -> as.list
> f(NULL)
< table of extent 0 x 0 >
> f(,NULL)
Error in as.list(object) : argument "object" is missing, with no default
Calls: f -> lapply -> as.list
> f(NULL,NULL)
< table of extent 0 x 0 >
> f(list())
< table of extent 0 x 0 >
> f(l0)
< table of extent 0 x 0 >
> f(c0)
< table of extent 0 x 0 >
> f(m0)
< table of extent 0 x 0 >
> f(df0)
< table of extent 0 x 1 >
> f(FALSE)
Error in substring(blanks, 1, pad) : invalid substring arguments
Calls: f -> paste0 -> substring
> f(list(),list())
< table of extent 0 x 0 >
> f(l0,l0)
< table of extent 0 x 0 >
> f(c0,c0)
< table of extent 0 x 0 >
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f ... lapply -> FUN -> summary.factor -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '>' not meaningful for factors
> f(FALSE,FALSE)
Error in substring(blanks, 1, pad) : invalid substring arguments
Calls: f -> paste0 -> substring
> 
> ##  summary.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("summary.default", pos = 'package:base')
> f()
Error in is.factor(object) : 
  argument "object" is missing, with no default
Calls: f -> is.factor
> f(NULL)
Length  Class   Mode 
     0   NULL   NULL 
> f(,NULL)
Error in is.factor(object) : 
  argument "object" is missing, with no default
Calls: f -> is.factor
> f(NULL,NULL)
Length  Class   Mode 
     0   NULL   NULL 
> f(list())
Length  Class   Mode 
     0   list   list 
> f(l0)
   Mode    NA's 
logical       0 
> f(c0)
   Length     Class      Mode 
        0 character character 
> f(m0)
< table of extent 0 x 0 >
> f(df0)
   Length Class  Mode   
c0 0      factor numeric
> f(FALSE)
   Mode   FALSE    NA's 
logical       1       0 
> f(list(),list())
Length  Class   Mode 
     0   list   list 
> f(l0,l0)
   Mode    NA's 
logical       0 
> f(c0,c0)
   Length     Class      Mode 
        0 character character 
> f(df0,df0)
   Length Class  Mode   
c0 0      factor numeric
> f(FALSE,FALSE)
   Mode   FALSE    NA's 
logical       1       0 
> 
> ##  summary.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("summary.factor", pos = 'package:base')
> f()
Error in f() : argument "object" is missing, with no default
> f(NULL)
integer(0)
Warning message:
In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
Error in if (length(ll) > maxsum) { : argument is of length zero
Calls: f
In addition: Warning message:
In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
Error in table(object) : attempt to set an attribute on NULL
Calls: f -> table
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
integer(0)
> f(FALSE)
FALSE 
    1 
> f(list(),list())
Error in table(object) : attempt to set an attribute on NULL
Calls: f -> table
> f(l0,l0)
Error in if (length(ll) > maxsum) { : argument is of length zero
Calls: f
> f(c0,c0)
Error in if (length(ll) > maxsum) { : argument is of length zero
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '>' not meaningful for factors
> f(FALSE,FALSE)
FALSE 
    1 
> 
> ##  summary.matrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("summary.matrix", pos = 'package:base')
> f()
Error in as.data.frame.matrix(object) : 
  argument "object" is missing, with no default
Calls: f ... summary.data.frame -> lapply -> as.list -> as.data.frame.matrix
> f(NULL)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f ... summary.data.frame -> lapply -> as.list -> as.data.frame.matrix
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(,NULL)
Error in as.data.frame.matrix(object) : 
  argument "object" is missing, with no default
Calls: f ... summary.data.frame -> lapply -> as.list -> as.data.frame.matrix
> f(NULL,NULL)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f ... summary.data.frame -> lapply -> as.list -> as.data.frame.matrix
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(list())
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f ... summary.data.frame -> lapply -> as.list -> as.data.frame.matrix
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(l0)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f ... summary.data.frame -> lapply -> as.list -> as.data.frame.matrix
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(c0)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f ... summary.data.frame -> lapply -> as.list -> as.data.frame.matrix
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(m0)
< table of extent 0 x 0 >
> f(df0)
      c0           
 Length:0          
 Class :character  
 Mode  :character  
> f(FALSE)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f ... summary.data.frame -> lapply -> as.list -> as.data.frame.matrix
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(list(),list())
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f ... summary.data.frame -> lapply -> as.list -> as.data.frame.matrix
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(l0,l0)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f ... summary.data.frame -> lapply -> as.list -> as.data.frame.matrix
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(c0,c0)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f ... summary.data.frame -> lapply -> as.list -> as.data.frame.matrix
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> f(df0,df0)
      c0           
 Length:0          
 Class :character  
 Mode  :character  
> f(FALSE,FALSE)
Error in seq_len(ncols) : 
  argument must be coercible to non-negative integer
Calls: f ... summary.data.frame -> lapply -> as.list -> as.data.frame.matrix
In addition: Warning message:
In seq_len(ncols) : first element used of 'length.out' argument
> 
> ##  summary.proc_time  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("summary.proc_time", pos = 'package:base')
> f()
Error in f() : argument "object" is missing, with no default
> f(NULL)
Error in if (!is.na(object[4L])) object[1L] <- object[1L] + object[4L] : 
  argument is of length zero
Calls: f
In addition: Warning message:
In is.na(object[4L]) :
  is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
Error in if (!is.na(object[4L])) object[1L] <- object[1L] + object[4L] : 
  argument is of length zero
Calls: f
In addition: Warning message:
In is.na(object[4L]) :
  is.na() applied to non-(list or vector) of type 'NULL'
> f(list())
Error in object[1L] + object[4L] : 
  non-numeric argument to binary operator
Calls: f
> f(l0)
   user  system elapsed 
     NA      NA      NA 
> f(c0)
   user  system elapsed 
     NA      NA      NA 
> f(m0)
   user  system elapsed 
     NA      NA      NA 
> f(df0)
Error in `[.data.frame`(object, 4L) : undefined columns selected
Calls: f -> [ -> [.data.frame
> f(FALSE)
   user  system elapsed 
  FALSE      NA      NA 
> f(list(),list())
Error in object[1L] + object[4L] : 
  non-numeric argument to binary operator
Calls: f
> f(l0,l0)
   user  system elapsed 
     NA      NA      NA 
> f(c0,c0)
   user  system elapsed 
     NA      NA      NA 
> f(df0,df0)
Error in `[.data.frame`(object, 4L) : undefined columns selected
Calls: f -> [ -> [.data.frame
> f(FALSE,FALSE)
   user  system elapsed 
  FALSE      NA      NA 
> 
> ##  summary.srcfile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("summary.srcfile", pos = 'package:base')
> f()
Error in utils:::.normalizePath(object$filename, object$wd) : 
  argument "object" is missing, with no default
Calls: f -> cat -> <Anonymous>
> f(NULL)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> cat -> <Anonymous>
> f(,NULL)
Error in utils:::.normalizePath(object$filename, object$wd) : 
  argument "object" is missing, with no default
Calls: f -> cat -> <Anonymous>
> f(NULL,NULL)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> cat -> <Anonymous>
> f(list())
Error in path.expand(path) : invalid 'path' argument
Calls: f -> cat -> <Anonymous>
> f(l0)
Error: $ operator is invalid for atomic vectors
> f(c0)
Error: $ operator is invalid for atomic vectors
> f(m0)
Error: $ operator is invalid for atomic vectors
> f(df0)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> cat -> <Anonymous>
> f(FALSE)
Error: $ operator is invalid for atomic vectors
> f(list(),list())
Error in path.expand(path) : invalid 'path' argument
Calls: f -> cat -> <Anonymous>
> f(l0,l0)
Error: $ operator is invalid for atomic vectors
> f(c0,c0)
Error: $ operator is invalid for atomic vectors
> f(df0,df0)
Error in path.expand(path) : invalid 'path' argument
Calls: f -> cat -> <Anonymous>
> f(FALSE,FALSE)
Error: $ operator is invalid for atomic vectors
> 
> ##  summary.srcref  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("summary.srcref", pos = 'package:base')
> f()
Error in cat(as.character(object, useSource = useSource), sep = "\n") : 
  argument "object" is missing, with no default
Calls: f -> cat
> f(NULL)

> f(,NULL)
Error in cat(as.character(object, useSource = useSource), sep = "\n") : 
  argument "object" is missing, with no default
Calls: f -> cat
> f(NULL,NULL)

> f(list())

> f(l0)

> f(c0)

> f(m0)

> f(df0)
integer(0)
> f(FALSE)
FALSE
> f(list(),list())

> f(l0,l0)

> f(c0,c0)

> f(df0,df0)
integer(0)
> f(FALSE,FALSE)
FALSE
> 
> ##  summary.table  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("summary.table", pos = 'package:base')
> f()
Error in f() : argument "object" is missing, with no default
> f(NULL)
Error in f(NULL) : 'object' must inherit from class "table"
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'object' must inherit from class "table"
> f(list())
Error in f(list()) : 'object' must inherit from class "table"
> f(l0)
Error in f(l0) : 'object' must inherit from class "table"
> f(c0)
Error in f(c0) : 'object' must inherit from class "table"
> f(m0)
Error in f(m0) : 'object' must inherit from class "table"
> f(df0)
Error in f(df0) : 'object' must inherit from class "table"
> f(FALSE)
Error in f(FALSE) : 'object' must inherit from class "table"
> f(list(),list())
Error in f(list(), list()) : 'object' must inherit from class "table"
> f(l0,l0)
Error in f(l0, l0) : 'object' must inherit from class "table"
> f(c0,c0)
Error in f(c0, c0) : 'object' must inherit from class "table"
> f(df0,df0)
Error in f(df0, df0) : 'object' must inherit from class "table"
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'object' must inherit from class "table"
> 
> ##  suppressMessages  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("suppressMessages", pos = 'package:base')
> f()
Error in withCallingHandlers(expr, message = function(c) invokeRestart("muffleMessage")) : 
  argument "expr" is missing, with no default
Calls: f -> withCallingHandlers
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  suppressPackageStartupMessages  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("suppressPackageStartupMessages", pos = 'package:base')
> f()
Error in withCallingHandlers(expr, packageStartupMessage = function(c) invokeRestart("muffleMessage")) : 
  argument "expr" is missing, with no default
Calls: f -> withCallingHandlers
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  suppressWarnings  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("suppressWarnings", pos = 'package:base')
> f()
Error in withCallingHandlers(expr, warning = function(w) invokeRestart("muffleWarning")) : 
  argument "expr" is missing, with no default
Calls: f -> withCallingHandlers
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  svd  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("svd", pos = 'package:base')
> f()
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(list())
Error in is.finite(x) : default method not implemented for type 'list'
Calls: f
> f(l0)
Error in f(l0) : a dimension is zero
> f(c0)
Error in f(c0) : a dimension is zero
> f(m0)
Error in f(m0) : a dimension is zero
> f(df0)
Error in f(df0) : a dimension is zero
> f(FALSE)
$d
[1] 0

$u
     [,1]
[1,]    1

$v
     [,1]
[1,]    1

> f(list(),list())
Error in is.finite(x) : default method not implemented for type 'list'
Calls: f
> f(l0,l0)
Error in f(l0, l0) : a dimension is zero
> f(c0,c0)
Error in f(c0, c0) : a dimension is zero
> f(df0,df0)
Error in f(df0, df0) : a dimension is zero
> f(FALSE,FALSE)
$d
[1] 0

$v
     [,1]
[1,]    1

> 
> ##  sweep  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sweep", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "STATS" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "STATS" is missing, with no default
> f(list())
Error in f(list()) : argument "STATS" is missing, with no default
> f(l0)
Error in f(l0) : argument "STATS" is missing, with no default
> f(c0)
Error in f(c0) : argument "STATS" is missing, with no default
> f(m0)
Error in f(m0) : argument "STATS" is missing, with no default
> f(df0)
Error in f(df0) : argument "STATS" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "STATS" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "STATS" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "STATS" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "STATS" is missing, with no default
> f(df0,df0)
Error in dims[MARGIN] : invalid subscript type 'list'
Calls: f
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "STATS" is missing, with no default
> 
> ##  switch  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("switch", pos = 'package:base')
> f()
Error in f() : 'EXPR' is missing
> f(NULL)
Error in f(NULL) : EXPR must be a length 1 vector
> f(,NULL)
Error in f(, NULL) : EXPR must be a length 1 vector
> f(NULL,NULL)
Error in f(NULL, NULL) : EXPR must be a length 1 vector
> f(list())
Error in f(list()) : EXPR must be a length 1 vector
> f(l0)
Error in f(l0) : EXPR must be a length 1 vector
> f(c0)
Error in f(c0) : EXPR must be a length 1 vector
> f(m0)
Error in f(m0) : EXPR must be a length 1 vector
> f(df0)
Warning message:
In f(df0) : 'switch' with no alternatives
> f(FALSE)
Warning message:
In f(FALSE) : 'switch' with no alternatives
> f(list(),list())
Error in f(list(), list()) : EXPR must be a length 1 vector
> f(l0,l0)
Error in f(l0, l0) : EXPR must be a length 1 vector
> f(c0,c0)
Error in f(c0, c0) : EXPR must be a length 1 vector
> f(df0,df0)
> f(FALSE,FALSE)
> 
> ##  sys.call  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sys.call", pos = 'package:base')
> f()
NULL
> f(NULL)
Error in f(NULL) : invalid 'which' argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'which' argument
> f(l0)
Error in f(l0) : invalid 'which' argument
> f(c0)
Error in f(c0) : invalid 'which' argument
> f(m0)
Error in f(m0) : invalid 'which' argument
> f(df0)
Error in f(df0) : invalid 'which' argument
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  sys.calls  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sys.calls", pos = 'package:base')
> f()
NULL
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  sys.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sys.frame", pos = 'package:base')
> f()
<environment: R_GlobalEnv>
> f(NULL)
Error in f(NULL) : invalid 'which' argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'which' argument
> f(l0)
Error in f(l0) : invalid 'which' argument
> f(c0)
Error in f(c0) : invalid 'which' argument
> f(m0)
Error in f(m0) : invalid 'which' argument
> f(df0)
Error in f(df0) : invalid 'which' argument
> f(FALSE)
<environment: R_GlobalEnv>
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  sys.frames  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sys.frames", pos = 'package:base')
> f()
NULL
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  sys.function  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sys.function", pos = 'package:base')
> f()
NULL
> f(NULL)
Error in f(NULL) : invalid 'which' value
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'which' value
> f(l0)
Error in f(l0) : invalid 'which' value
> f(c0)
Error in f(c0) : invalid 'which' value
> f(m0)
Error in f(m0) : invalid 'which' value
> f(df0)
Error in f(df0) : invalid 'which' value
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  sys.load.image  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sys.load.image", pos = 'package:base')
> f()
Error in file.exists(name) : argument "name" is missing, with no default
Calls: f -> file.exists
> f(NULL)
Error in file.exists(name) : invalid 'file' argument
Calls: f -> file.exists
> f(,NULL)
Error in file.exists(name) : argument "name" is missing, with no default
Calls: f -> file.exists
> f(NULL,NULL)
Error in file.exists(name) : invalid 'file' argument
Calls: f -> file.exists
> f(list())
Error in file.exists(name) : invalid 'file' argument
Calls: f -> file.exists
> f(l0)
Error in file.exists(name) : invalid 'file' argument
Calls: f -> file.exists
> f(c0)
Error in if (file.exists(name)) { : argument is of length zero
Calls: f
> f(m0)
Error in file.exists(name) : invalid 'file' argument
Calls: f -> file.exists
> f(df0)
Error in file.exists(name) : invalid 'file' argument
Calls: f -> file.exists
> f(FALSE)
Error in file.exists(name) : invalid 'file' argument
Calls: f -> file.exists
> f(list(),list())
Error in file.exists(name) : invalid 'file' argument
Calls: f -> file.exists
> f(l0,l0)
Error in file.exists(name) : invalid 'file' argument
Calls: f -> file.exists
> f(c0,c0)
Error in if (file.exists(name)) { : argument is of length zero
Calls: f
> f(df0,df0)
Error in file.exists(name) : invalid 'file' argument
Calls: f -> file.exists
> f(FALSE,FALSE)
Error in file.exists(name) : invalid 'file' argument
Calls: f -> file.exists
> 
> ##  sys.nframe  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sys.nframe", pos = 'package:base')
> f()
[1] 0
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  sys.on.exit  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sys.on.exit", pos = 'package:base')
> f()
NULL
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  sys.parent  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sys.parent", pos = 'package:base')
> f()
[1] 0
> f(NULL)
Error in f(NULL) : invalid 'n' argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'n' argument
> f(l0)
Error in f(l0) : invalid 'n' argument
> f(c0)
Error in f(c0) : invalid 'n' argument
> f(m0)
Error in f(m0) : invalid 'n' argument
> f(df0)
Error in f(df0) : invalid 'n' argument
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  sys.parents  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sys.parents", pos = 'package:base')
> f()
integer(0)
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  sys.save.image  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sys.save.image", pos = 'package:base')
> f()
Error in save.image(name) : argument "name" is missing, with no default
Calls: f -> save.image
> f(NULL)
Error in save.image(name) : 'file' must be non-empty string
Calls: f -> save.image
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in save.image(name) : 'file' must be non-empty string
Calls: f -> save.image
> f(l0)
Error in save.image(name) : 'file' must be non-empty string
Calls: f -> save.image
> f(c0)
Error in if (!is.character(file) || file == "") stop("'file' must be non-empty string") : 
  missing value where TRUE/FALSE needed
Calls: f -> save.image
> f(m0)
Error in save.image(name) : 'file' must be non-empty string
Calls: f -> save.image
> f(df0)
Error in save.image(name) : 'file' must be non-empty string
Calls: f -> save.image
> f(FALSE)
Error in save.image(name) : 'file' must be non-empty string
Calls: f -> save.image
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  sys.source  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sys.source", pos = 'package:base')
> f()
Error in f() : argument "file" is missing, with no default
> f(NULL)
Error in f(NULL) : 
> f(,NULL)
Error in f(, NULL) : argument "file" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 
> f(list())
Error in f(list()) : 
> f(l0)
Error in f(l0) : 
> f(c0)
Error in if (!(is.character(file) && file.exists(file))) stop(gettextf("'%s' is not an existing file",  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(m0)
Error in f(m0) : 
> f(df0)
Error in f(df0) : 'integer(0)' is not an existing file
> f(FALSE)
Error in f(FALSE) : 'FALSE' is not an existing file
> f(list(),list())
Error in f(list(), list()) : 
> f(l0,l0)
Error in f(l0, l0) : 
> f(c0,c0)
Error in if (!(is.character(file) && file.exists(file))) stop(gettextf("'%s' is not an existing file",  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0,df0)
Error in f(df0, df0) : 'integer(0)' is not an existing file
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'FALSE' is not an existing file
> 
> ##  sys.status  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("sys.status", pos = 'package:base')
> f()
$sys.calls
$sys.calls[[1]]
f()


$sys.parents
[1] 0

$sys.frames
$sys.frames[[1]]
<environment: 0x23b2710>


> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  system  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("system", pos = 'package:base')
> f()
Error in f() : argument "command" is missing, with no default
> f(NULL)
Error in f(NULL) : non-empty character argument expected
> f(,NULL)
Error in f(, NULL) : 'intern' must be TRUE or FALSE
> f(NULL,NULL)
Error in f(NULL, NULL) : 'intern' must be TRUE or FALSE
> f(list())
Error in f(list()) : non-empty character argument expected
> f(l0)
Error in f(l0) : non-empty character argument expected
> f(c0)
Error in f(c0) : non-empty character argument expected
> f(m0)
Error in f(m0) : non-empty character argument expected
> f(df0)
Error in f(df0) : non-empty character argument expected
> f(FALSE)
Error in f(FALSE) : non-empty character argument expected
> f(list(),list())
Error in f(list(), list()) : 'intern' must be TRUE or FALSE
> f(l0,l0)
Error in if (!is.logical(intern) || is.na(intern)) stop("'intern' must be TRUE or FALSE") : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0,c0)
Error in f(c0, c0) : 'intern' must be TRUE or FALSE
> f(df0,df0)
Error in f(df0, df0) : 'intern' must be TRUE or FALSE
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : non-empty character argument expected
> 
> ##  system.file  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("system.file", pos = 'package:base')
> f()
[1] "/home/aviral/projects/r/library/base"
> f(NULL)
[1] ""
> f(,NULL)
[1] ""
> f(NULL,NULL)
[1] ""
> f(list())
[1] ""
> f(l0)
[1] ""
> f(c0)
[1] ""
> f(m0)
[1] ""
> f(df0)
[1] ""
> f(FALSE)
[1] ""
> f(list(),list())
[1] ""
> f(l0,l0)
[1] ""
> f(c0,c0)
[1] ""
> f(df0,df0)
[1] ""
> f(FALSE,FALSE)
[1] ""
> 
> ##  system.time  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("system.time", pos = 'package:base')
> f()
Error in f() : argument "expr" is missing, with no default
Timing stopped at: 0 0 0 
> f(NULL)
   user  system elapsed 
      0       0       0 
> f(,NULL)
Error in if (gcFirst) gc(FALSE) : argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (gcFirst) gc(FALSE) : argument is of length zero
Calls: f
> f(list())
   user  system elapsed 
      0       0       0 
> f(l0)
   user  system elapsed 
      0       0       0 
> f(c0)
   user  system elapsed 
      0       0       0 
> f(m0)
   user  system elapsed 
      0       0       0 
> f(df0)
   user  system elapsed 
      0       0       0 
> f(FALSE)
   user  system elapsed 
      0       0       0 
> f(list(),list())
Error in if (gcFirst) gc(FALSE) : argument is of length zero
Calls: f
> f(l0,l0)
Error in if (gcFirst) gc(FALSE) : argument is of length zero
Calls: f
> f(c0,c0)
Error in if (gcFirst) gc(FALSE) : argument is of length zero
Calls: f
> f(df0,df0)
Error in if (gcFirst) gc(FALSE) : 
  argument is not interpretable as logical
Calls: f
> f(FALSE,FALSE)
   user  system elapsed 
      0       0       0 
> 
> ##  system2  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("system2", pos = 'package:base')
> f()
Error in shQuote(command) : 
  argument "command" is missing, with no default
Calls: f -> paste -> shQuote
> f(NULL)
Error in f(NULL) : non-empty character argument expected
> f(,NULL)
Error in shQuote(command) : 
  argument "command" is missing, with no default
Calls: f -> paste -> shQuote
> f(NULL,NULL)
Error in f(NULL, NULL) : non-empty character argument expected
> f(list())
Error in f(list()) : non-empty character argument expected
> f(l0)
Error in f(l0) : non-empty character argument expected
> f(c0)
Error in f(c0) : non-empty character argument expected
> f(m0)
Error in f(m0) : non-empty character argument expected
> f(df0)
sh: 1: integer(0): not found
> f(FALSE)
sh: 1: FALSE: not found
> f(list(),list())
Error in f(list(), list()) : non-empty character argument expected
> f(l0,l0)
Error in f(l0, l0) : non-empty character argument expected
> f(c0,c0)
Error in f(c0, c0) : non-empty character argument expected
> f(df0,df0)
sh: 1: Syntax error: "(" unexpected
> f(FALSE,FALSE)
sh: 1: FALSE: not found
> 
> ##  t  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("t", pos = 'package:base')
> f()
Error in t.default() : argument "x" is missing, with no default
Calls: f -> t.default
> f(NULL)
Error in t.default(NULL) : argument is not a matrix
Calls: f -> t.default
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
    
[1,]
> f(l0)
    
[1,]
> f(c0)
    
[1,]
> f(m0)
<0 x 0 matrix>
> f(df0)
  
c0
> f(FALSE)
      [,1]
[1,] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  t.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("t.data.frame", pos = 'package:base')
> f()
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in NextMethod("t") : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod("t") : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod("t") : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod("t") : object not specified
Calls: f -> NextMethod
> f(df0)
Error in NextMethod("t") : wrong value for .Method
Calls: f -> NextMethod -> t.data.frame -> NextMethod
> f(FALSE)
Error in NextMethod("t") : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  t.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("t.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument is not a matrix
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
    
[1,]
> f(l0)
    
[1,]
> f(c0)
    
[1,]
> f(m0)
<0 x 0 matrix>
> f(df0)
NULL
<0 rows> (or 0-length row.names)
> f(FALSE)
      [,1]
[1,] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  table  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("table", pos = 'package:base')
> f()
Error in f() : nothing to tabulate
> f(NULL)
< table of extent 0 >
> f(,NULL)
< table of extent 0 x 0 >
> f(NULL,NULL)
< table of extent 0 x 0 >
> f(list())
Error in f(list()) : attempt to set an attribute on NULL
> f(l0)
< table of extent 0 >
> f(c0)
< table of extent 0 >
> f(m0)
< table of extent 0 >
> f(df0)
< table of extent 0 >
> f(FALSE)

FALSE 
    1 
> f(list(),list())
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(l0,l0)
< table of extent 0 x 0 >
> f(c0,c0)
< table of extent 0 x 0 >
> f(df0,df0)
Error in sort.list(y) : 'x' must be atomic for 'sort.list'
Have you called 'sort' on a list?
Calls: f -> factor -> sort.list
> f(FALSE,FALSE)
       
        FALSE
  FALSE     1
> 
> ##  tabulate  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("tabulate", pos = 'package:base')
> f()
Error in f() : argument "bin" is missing, with no default
> f(NULL)
Error in f(NULL) : 'bin' must be numeric or a factor
> f(,NULL)
Error in f(, NULL) : argument "bin" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'bin' must be numeric or a factor
> f(list())
Error in f(list()) : 'bin' must be numeric or a factor
> f(l0)
Error in f(l0) : 'bin' must be numeric or a factor
> f(c0)
Error in f(c0) : 'bin' must be numeric or a factor
> f(m0)
[1] 0
> f(df0)
Error in f(df0) : 'bin' must be numeric or a factor
> f(FALSE)
Error in f(FALSE) : 'bin' must be numeric or a factor
> f(list(),list())
Error in f(list(), list()) : 'bin' must be numeric or a factor
> f(l0,l0)
Error in f(l0, l0) : 'bin' must be numeric or a factor
> f(c0,c0)
Error in f(c0, c0) : 'bin' must be numeric or a factor
> f(df0,df0)
Error in f(df0, df0) : 'bin' must be numeric or a factor
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'bin' must be numeric or a factor
> 
> ##  tan  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("tan", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'tan' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'tan' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 2 arguments passed to 'tan' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'tan' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'tan' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'tan' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'tan' which requires 1
> 
> ##  tanh  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("tanh", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'tanh' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'tanh' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'tanh' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'tanh' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'tanh' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'tanh' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'tanh' which requires 1
> 
> ##  tanpi  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("tanpi", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'tanpi' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'tanpi' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'tanpi' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'tanpi' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'tanpi' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'tanpi' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'tanpi' which requires 1
> 
> ##  tapply  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("tapply", pos = 'package:base')
> f()
Error in f() : argument "INDEX" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "INDEX" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "X" is missing, with no default
> f(NULL,NULL)
integer(0)
> f(list())
Error in f(list()) : argument "INDEX" is missing, with no default
> f(l0)
Error in f(l0) : argument "INDEX" is missing, with no default
> f(c0)
Error in f(c0) : argument "INDEX" is missing, with no default
> f(m0)
Error in f(m0) : argument "INDEX" is missing, with no default
> f(df0)
Error in f(df0) : argument "INDEX" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "INDEX" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : 'INDEX' is of length zero
> f(l0,l0)
integer(0)
> f(c0,c0)
integer(0)
> f(df0,df0)
Error in f(df0, df0) : arguments must have same length
> f(FALSE,FALSE)
[1] 1
> 
> ##  taskCallbackManager  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("taskCallbackManager", pos = 'package:base')
> f()
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a38c48>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a38c48>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a38c48>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a38c48>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a38c48>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a38c48>

> f(NULL)
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a384f8>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a384f8>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a384f8>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a384f8>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a384f8>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a384f8>

> f(,NULL)
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a37e50>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a37e50>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a37e50>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a37e50>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a37e50>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a37e50>

> f(NULL,NULL)
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a377e0>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a377e0>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a377e0>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a377e0>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a377e0>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a377e0>

> f(list())
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a361d0>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a361d0>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a361d0>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a361d0>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a361d0>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a361d0>

> f(l0)
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a35a48>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a35a48>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a35a48>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a35a48>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a35a48>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a35a48>

> f(c0)
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a34b00>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a34b00>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a34b00>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a34b00>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a34b00>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a34b00>

> f(m0)
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a34378>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a34378>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a34378>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a34378>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a34378>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a34378>

> f(df0)
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a33bf0>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a33bf0>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a33bf0>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a33bf0>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a33bf0>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a33bf0>

> f(FALSE)
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a33468>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a33468>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a33468>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a33468>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a33468>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a33468>

> f(list(),list())
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a33028>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a33028>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a33028>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a33028>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a33028>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a33028>

> f(l0,l0)
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a32980>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a32980>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a32980>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a32980>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a32980>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a32980>

> f(c0,c0)
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a30d70>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a30d70>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a30d70>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a30d70>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a30d70>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a30d70>

> f(df0,df0)
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a2fcd8>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a2fcd8>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a2fcd8>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a2fcd8>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a2fcd8>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a2fcd8>

> f(FALSE,FALSE)
$add
function (f, data = NULL, name = NULL, register = TRUE) 
{
    if (is.null(name)) 
        name <- as.character(length(handlers) + 1L)
    handlers[[name]] <<- list(f = f)
    if (!missing(data)) 
        handlers[[name]][["data"]] <<- data
    if (!registered && register) {
        register()
    }
    name
}
<bytecode: 0x2a3e348>
<environment: 0x2a2f630>

$evaluate
function (expr, value, ok, visible) 
{
    if (suspended) 
        return(TRUE)
    discard <- character()
    for (i in names(handlers)) {
        h <- handlers[[i]]
        if (length(h) > 1L) {
            val <- h[["f"]](expr, value, ok, visible, i[["data"]])
        }
        else {
            val <- h[["f"]](expr, value, ok, visible)
        }
        if (!val) {
            discard <- c(discard, i)
        }
    }
    if (length(discard)) {
        if (.verbose) 
            cat(gettextf("Removing %s", paste(discard, collapse = ", ")), 
                "\n")
        idx <- is.na(match(names(handlers), discard))
        if (length(idx)) 
            handlers <<- handlers[idx]
        else handlers <<- list()
    }
    return(TRUE)
}
<bytecode: 0x2a3c4b8>
<environment: 0x2a2f630>

$remove
function (which) 
{
    if (is.character(which)) {
        tmp <- seq_along(handlers)[!is.na(match(which, names(handlers)))]
        if (length(tmp)) 
            stop(gettextf("no such element '%s'", which), domain = NA)
        which <- tmp
    }
    else which <- as.integer(which)
    handlers <<- handlers[-which]
    return(TRUE)
}
<bytecode: 0x2a3d470>
<environment: 0x2a2f630>

$register
function (name = "R-taskCallbackManager", verbose = .verbose) 
{
    if (verbose) 
        cat(gettext("Registering 'evaluate' as low-level callback\n"))
    id <- addTaskCallback(evaluate, name = name)
    registered <<- TRUE
    id
}
<bytecode: 0x2a39210>
<environment: 0x2a2f630>

$suspend
function (status = TRUE) 
{
    suspended <<- status
}
<bytecode: 0x2a39050>
<environment: 0x2a2f630>

$callbacks
function () 
handlers
<bytecode: 0x2a38820>
<environment: 0x2a2f630>

> 
> ##  tcrossprod  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("tcrossprod", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in tcrossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in tcrossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(list())
Error in tcrossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(l0)
<0 x 0 matrix>
> f(c0)
Error in tcrossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in tcrossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(FALSE)
     [,1]
[1,]    0
> f(list(),list())
Error in tcrossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(l0,l0)
<0 x 0 matrix>
> f(c0,c0)
Error in tcrossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(df0,df0)
Error in tcrossprod(x, y) : 
  requires numeric/complex matrix/vector arguments
Calls: f
> f(FALSE,FALSE)
     [,1]
[1,]    0
> 
> ##  tempdir  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("tempdir", pos = 'package:base')
> f()
[1] "/tmp/aviral/Rtmpfvg13H"
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  tempfile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("tempfile", pos = 'package:base')
> f()
[1] "/tmp/aviral/Rtmpfvg13H/file51ea7f73cb31"
> f(NULL)
Error in f(NULL) : invalid filename pattern
> f(,NULL)
Error in f(, NULL) : invalid 'tempdir' value
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid filename pattern
> f(list())
Error in f(list()) : invalid filename pattern
> f(l0)
Error in f(l0) : invalid filename pattern
> f(c0)
Error in f(c0) : no 'pattern'
> f(m0)
Error in f(m0) : invalid filename pattern
> f(df0)
Error in f(df0) : invalid filename pattern
> f(FALSE)
Error in f(FALSE) : invalid filename pattern
> f(list(),list())
Error in f(list(), list()) : invalid filename pattern
> f(l0,l0)
Error in f(l0, l0) : invalid filename pattern
> f(c0,c0)
Error in f(c0, c0) : no 'pattern'
> f(df0,df0)
Error in f(df0, df0) : invalid filename pattern
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid filename pattern
> 
> ##  testPlatformEquivalence  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("testPlatformEquivalence", pos = 'package:base')
> f()
Error in gsub("([^-]*)-([^-]*)-(.*)", "\\1-\\3", built) : 
  argument "built" is missing, with no default
Calls: f -> gsub
> f(NULL)
Error in gsub("([^-]*)-([^-]*)-(.*)", "\\1-\\3", run) : 
  argument "run" is missing, with no default
Calls: f -> gsub
> f(,NULL)
Error in gsub("([^-]*)-([^-]*)-(.*)", "\\1-\\3", built) : 
  argument "built" is missing, with no default
Calls: f -> gsub
> f(NULL,NULL)
Error in agrep(built, run) : invalid 'pattern' argument
Calls: f -> agrep
> f(list())
Error in gsub("([^-]*)-([^-]*)-(.*)", "\\1-\\3", run) : 
  argument "run" is missing, with no default
Calls: f -> gsub
> f(l0)
Error in gsub("([^-]*)-([^-]*)-(.*)", "\\1-\\3", run) : 
  argument "run" is missing, with no default
Calls: f -> gsub
> f(c0)
Error in gsub("([^-]*)-([^-]*)-(.*)", "\\1-\\3", run) : 
  argument "run" is missing, with no default
Calls: f -> gsub
> f(m0)
Error in gsub("([^-]*)-([^-]*)-(.*)", "\\1-\\3", run) : 
  argument "run" is missing, with no default
Calls: f -> gsub
> f(df0)
Error in gsub("([^-]*)-([^-]*)-(.*)", "\\1-\\3", run) : 
  argument "run" is missing, with no default
Calls: f -> gsub
> f(FALSE)
Error in gsub("([^-]*)-([^-]*)-(.*)", "\\1-\\3", run) : 
  argument "run" is missing, with no default
Calls: f -> gsub
> f(list(),list())
Error in agrep(built, run) : invalid 'pattern' argument
Calls: f -> agrep
> f(l0,l0)
Error in agrep(built, run) : invalid 'pattern' argument
Calls: f -> agrep
> f(c0,c0)
Error in agrep(built, run) : invalid 'pattern' argument
Calls: f -> agrep
> f(df0,df0)
[1] TRUE
> f(FALSE,FALSE)
[1] TRUE
> 
> ##  textConnection  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("textConnection", pos = 'package:base')
> f()
Error in f() : argument "object" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'text' argument
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'open' argument
> f(list())
Error in f(list()) : invalid 'text' argument
> f(l0)
Error in f(l0) : invalid 'text' argument
> f(c0)
     description            class             mode             text 
            "c0" "textConnection"              "r"           "text" 
          opened         can read        can write 
        "opened"            "yes"             "no" 
> f(m0)
Error in f(m0) : invalid 'text' argument
> f(df0)
Error in f(df0) : invalid 'text' argument
> f(FALSE)
Error in f(FALSE) : invalid 'text' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'open' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'open' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'open' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'open' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'open' argument
> 
> ##  textConnectionValue  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("textConnectionValue", pos = 'package:base')
> f()
Error in f() : argument "con" is missing, with no default
> f(NULL)
Error in f(NULL) : 'con' is not a textConnection
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : 'con' is not a textConnection
> f(l0)
Error in f(l0) : 'con' is not a textConnection
> f(c0)
Error in f(c0) : 'con' is not a textConnection
> f(m0)
Error in f(m0) : 'con' is not a textConnection
> f(df0)
Error in f(df0) : 'con' is not a textConnection
> f(FALSE)
Error in f(FALSE) : 'con' is not a textConnection
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  toString  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("toString", pos = 'package:base')
> f()
Error in paste(x, collapse = ", ") : 
  argument "x" is missing, with no default
Calls: f -> toString.default -> paste
> f(NULL)
[1] ""
> f(,NULL)
Error in paste(x, collapse = ", ") : 
  argument "x" is missing, with no default
Calls: f -> toString.default -> paste
> f(NULL,NULL)
[1] ""
> f(list())
[1] ""
> f(l0)
[1] ""
> f(c0)
[1] ""
> f(m0)
[1] ""
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
Error in if (missing(width) || is.null(width) || width == 0) return(string) : 
  missing value where TRUE/FALSE needed
Calls: f -> toString.default
> f(l0,l0)
Error in if (missing(width) || is.null(width) || width == 0) return(string) : 
  missing value where TRUE/FALSE needed
Calls: f -> toString.default
> f(c0,c0)
Error in if (missing(width) || is.null(width) || width == 0) return(string) : 
  missing value where TRUE/FALSE needed
Calls: f -> toString.default
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> toString.default -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  toString.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("toString.default", pos = 'package:base')
> f()
Error in paste(x, collapse = ", ") : 
  argument "x" is missing, with no default
Calls: f -> paste
> f(NULL)
[1] ""
> f(,NULL)
Error in paste(x, collapse = ", ") : 
  argument "x" is missing, with no default
Calls: f -> paste
> f(NULL,NULL)
[1] ""
> f(list())
[1] ""
> f(l0)
[1] ""
> f(c0)
[1] ""
> f(m0)
[1] ""
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
Error in if (missing(width) || is.null(width) || width == 0) return(string) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(l0,l0)
Error in if (missing(width) || is.null(width) || width == 0) return(string) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0,c0)
Error in if (missing(width) || is.null(width) || width == 0) return(string) : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
[1] "FALSE"
> 
> ##  tolower  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("tolower", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "false"
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  topenv  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("topenv", pos = 'package:base')
> f()
<environment: R_GlobalEnv>
> f(NULL)
<environment: namespace:base>
> f(,NULL)
<environment: R_GlobalEnv>
> f(NULL,NULL)
<environment: namespace:base>
> f(list())
<environment: namespace:base>
> f(l0)
<environment: namespace:base>
> f(c0)
<environment: namespace:base>
> f(m0)
<environment: namespace:base>
> f(df0)
<environment: namespace:base>
> f(FALSE)
<environment: namespace:base>
> f(list(),list())
<environment: namespace:base>
> f(l0,l0)
<environment: namespace:base>
> f(c0,c0)
<environment: namespace:base>
> f(df0,df0)
<environment: namespace:base>
> f(FALSE,FALSE)
<environment: namespace:base>
> 
> ##  toupper  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("toupper", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
character(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "INTEGER(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  traceback  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("traceback", pos = 'package:base')
> f()
1: f(FALSE, FALSE)
> f(NULL)
1: f(FALSE, FALSE)
> f(,NULL)
1: f(FALSE, FALSE)
> f(NULL,NULL)
1: f(FALSE, FALSE)
> f(list())
No traceback available 
> f(l0)
No traceback available 
> f(c0)
No traceback available 
> f(m0)
Error in .traceback(x) : invalid 'skip' value
Calls: f -> .traceback
> f(df0)
1: 
> f(FALSE)
1: FALSE
> f(list(),list())
No traceback available 
> f(l0,l0)
No traceback available 
> f(c0,c0)
No traceback available 
> f(df0,df0)
1: 
> f(FALSE,FALSE)
1: FALSE
> 
> ##  tracemem  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("tracemem", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'tracemem' which requires 1
> f(NULL)
Error in f(NULL) : R was not compiled with support for memory profiling
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'tracemem' which requires 1
> f(list())
Error in f(list()) : R was not compiled with support for memory profiling
> f(l0)
Error in f(l0) : R was not compiled with support for memory profiling
> f(c0)
Error in f(c0) : R was not compiled with support for memory profiling
> f(m0)
Error in f(m0) : R was not compiled with support for memory profiling
> f(df0)
Error in f(df0) : R was not compiled with support for memory profiling
> f(FALSE)
Error in f(FALSE) : R was not compiled with support for memory profiling
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'tracemem' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'tracemem' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'tracemem' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'tracemem' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'tracemem' which requires 1
> 
> ##  tracingState  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("tracingState", pos = 'package:base')
> f()
[1] TRUE
> f(NULL)
[1] TRUE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] TRUE
> f(l0)
[1] TRUE
> f(c0)
[1] TRUE
> f(m0)
[1] TRUE
> f(df0)
Error in f(df0) : Value for 'tracingState' must be TRUE or FALSE
> f(FALSE)
[1] TRUE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  transform  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("transform", pos = 'package:base')
> f()
Error in data.frame(`_data`) : 
  argument "_data" is missing, with no default
Calls: f ... transform.default -> transform.data.frame -> eval -> data.frame
> f(NULL)
data frame with 0 columns and 0 rows
> f(,NULL)
Error in data.frame(`_data`) : 
  argument "_data" is missing, with no default
Calls: f ... transform.default -> transform.data.frame -> eval -> data.frame
> f(NULL,NULL)
data frame with 0 columns and 0 rows
> f(list())
data frame with 0 columns and 0 rows
> f(l0)
[1] X_data
<0 rows> (or 0-length row.names)
> f(c0)
[1] X_data
<0 rows> (or 0-length row.names)
> f(m0)
data frame with 0 columns and 0 rows
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
  X_data
1  FALSE
> f(list(),list())
data frame with 0 columns and 0 rows
> f(l0,l0)
[1] X_data
<0 rows> (or 0-length row.names)
> f(c0,c0)
[1] X_data
<0 rows> (or 0-length row.names)
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
  X_data
1  FALSE
> 
> ##  transform.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("transform.data.frame", pos = 'package:base')
> f()
Error in eval(substitute(list(...)), `_data`, parent.frame()) : 
  argument "_data" is missing, with no default
Calls: f -> eval
> f(NULL)
NULL
> f(,NULL)
Error in eval(substitute(list(...)), `_data`, parent.frame()) : 
  argument "_data" is missing, with no default
Calls: f -> eval
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
Error in eval(substitute(list(...)), `_data`, parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> eval
> f(c0)
Error in eval(substitute(list(...)), `_data`, parent.frame()) : 
  invalid 'envir' argument of type 'character'
Calls: f -> eval
> f(m0)
Error in eval(substitute(list(...)), `_data`, parent.frame()) : 
  numeric 'envir' arg not of length one
Calls: f -> eval
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in eval(substitute(list(...)), `_data`, parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> eval
> f(list(),list())
list()
> f(l0,l0)
Error in eval(substitute(list(...)), `_data`, parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> eval
> f(c0,c0)
Error in eval(substitute(list(...)), `_data`, parent.frame()) : 
  invalid 'envir' argument of type 'character'
Calls: f -> eval
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in eval(substitute(list(...)), `_data`, parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> eval
> 
> ##  transform.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("transform.default", pos = 'package:base')
> f()
Error in data.frame(`_data`) : 
  argument "_data" is missing, with no default
Calls: f -> transform.data.frame -> eval -> data.frame
> f(NULL)
data frame with 0 columns and 0 rows
> f(,NULL)
Error in data.frame(`_data`) : 
  argument "_data" is missing, with no default
Calls: f -> transform.data.frame -> eval -> data.frame
> f(NULL,NULL)
data frame with 0 columns and 0 rows
> f(list())
data frame with 0 columns and 0 rows
> f(l0)
[1] X_data
<0 rows> (or 0-length row.names)
> f(c0)
[1] X_data
<0 rows> (or 0-length row.names)
> f(m0)
data frame with 0 columns and 0 rows
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
  X_data
1  FALSE
> f(list(),list())
data frame with 0 columns and 0 rows
> f(l0,l0)
[1] X_data
<0 rows> (or 0-length row.names)
> f(c0,c0)
[1] X_data
<0 rows> (or 0-length row.names)
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
  X_data
1  FALSE
> 
> ##  trigamma  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("trigamma", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'trigamma' which requires 1
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'trigamma' which requires 1
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] Inf
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'trigamma' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'trigamma' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'trigamma' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'trigamma' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'trigamma' which requires 1
> 
> ##  trimws  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("trimws", pos = 'package:base')
> f()
Error in sub(re, "", x, perl = TRUE) : 
  argument "x" is missing, with no default
Calls: f -> mysub -> sub -> mysub -> sub
> f(NULL)
character(0)
> f(,NULL)
Error in sub(re, "", x, perl = TRUE) : 
  argument "x" is missing, with no default
Calls: f -> mysub -> sub -> mysub -> sub
> f(NULL,NULL)
character(0)
> f(list())
character(0)
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
character(0)
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] "FALSE"
> f(list(),list())
Error in match.arg(which) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(l0,l0)
Error in match.arg(which) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(c0,c0)
Error in match.arg(which) : 
  'arg' should be one of "both", "left", "right"
Calls: f -> match.arg
> f(df0,df0)
Error in match.arg(which) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(FALSE,FALSE)
Error in match.arg(which) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> 
> ##  trunc  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("trunc", pos = 'package:base')
> f()
Error in f() : non-numeric argument to mathematical function
> f(NULL)
Error in f(NULL) : non-numeric argument to mathematical function
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : non-numeric argument to mathematical function
> f(list())
Error in f(list()) : non-numeric argument to mathematical function
> f(l0)
numeric(0)
> f(c0)
Error in f(c0) : non-numeric argument to mathematical function
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(df0) : non-numeric variable in data frame: c0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : 
  non-numeric argument to mathematical function
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in f(c0, c0) : non-numeric argument to mathematical function
> f(df0,df0)
Error in Math.data.frame(df0, df0) : 
  non-numeric variable in data frame: c0
> f(FALSE,FALSE)
[1] 0
> 
> ##  trunc.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("trunc.Date", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
numeric(0)
> f(list())
Error in x - 0.4999999 : non-numeric argument to binary operator
Calls: f
> f(l0)
numeric(0)
> f(c0)
Error in x - 0.4999999 : non-numeric argument to binary operator
Calls: f
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in Math.data.frame(list(c0 = NA)) : 
  non-numeric variable in data frame: c0
Calls: f -> Math.data.frame
In addition: Warning message:
In Ops.factor(left, right) : '-' not meaningful for factors
> f(FALSE)
[1] 0
> f(list(),list())
Error in x - 0.4999999 : non-numeric argument to binary operator
Calls: f
> f(l0,l0)
numeric(0)
> f(c0,c0)
Error in x - 0.4999999 : non-numeric argument to binary operator
Calls: f
> f(df0,df0)
Error in Math.data.frame(list(c0 = NA)) : 
  non-numeric variable in data frame: c0
Calls: f -> Math.data.frame
In addition: Warning message:
In Ops.factor(left, right) : '-' not meaningful for factors
> f(FALSE,FALSE)
[1] 0
> 
> ##  trunc.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("trunc.POSIXt", pos = 'package:base')
> f()
Error in as.POSIXlt(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXlt
> f(NULL)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(,NULL)
Error in as.POSIXlt(x) : argument "x" is missing, with no default
Calls: f -> as.POSIXlt
> f(NULL,NULL)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(list())
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(l0)
character(0)
> f(c0)
character(0)
> f(m0)
Error in as.POSIXlt.numeric(x) : 'origin' must be supplied
Calls: f -> as.POSIXlt -> as.POSIXlt.numeric
> f(df0)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(FALSE)
Error in as.POSIXlt.default(x) : 
  do not know how to convert 'x' to class "POSIXlt"
Calls: f -> as.POSIXlt -> as.POSIXlt.default
> f(list(),list())
Error in match.arg(units) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(l0,l0)
Error in match.arg(units) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(c0,c0)
Error in match.arg(units) : 
  'arg' should be one of "secs", "mins", "hours", "days"
Calls: f -> match.arg
> f(df0,df0)
Error in match.arg(units) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(FALSE,FALSE)
Error in match.arg(units) : 'arg' must be NULL or a character vector
Calls: f -> match.arg
> 
> ##  truncate  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("truncate", pos = 'package:base')
> f()
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "character"
Calls: f
> f(df0,df0)
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "data.frame"
Calls: f
> f(FALSE,FALSE)
Error in UseMethod("truncate") : 
  no applicable method for 'truncate' applied to an object of class "logical"
Calls: f
> 
> ##  truncate.connection  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("truncate.connection", pos = 'package:base')
> f()
Error in isOpen(con) : argument "con" is missing, with no default
Calls: f -> isOpen
> f(NULL)
Error in isOpen(con) : invalid connection
Calls: f -> isOpen
> f(,NULL)
Error in isOpen(con) : argument "con" is missing, with no default
Calls: f -> isOpen
> f(NULL,NULL)
Error in isOpen(con) : invalid connection
Calls: f -> isOpen
> f(list())
Error in isOpen(con) : invalid connection
Calls: f -> isOpen
> f(l0)
Error in isOpen(con) : invalid connection
Calls: f -> isOpen
> f(c0)
Error in isOpen(con) : invalid connection
Calls: f -> isOpen
> f(m0)
Error in isOpen(con) : invalid connection
Calls: f -> isOpen
> f(df0)
Error in isOpen(con) : invalid connection
Calls: f -> isOpen
> f(FALSE)
Error in f(FALSE) : 'con' is not a connection
> f(list(),list())
Error in isOpen(con) : invalid connection
Calls: f -> isOpen
> f(l0,l0)
Error in isOpen(con) : invalid connection
Calls: f -> isOpen
> f(c0,c0)
Error in isOpen(con) : invalid connection
Calls: f -> isOpen
> f(df0,df0)
Error in isOpen(con) : invalid connection
Calls: f -> isOpen
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'con' is not a connection
> 
> ##  tryCatch  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("tryCatch", pos = 'package:base')
> f()
Error in tryCatchList(expr, classes, parentenv, handlers) : 
  argument "expr" is missing, with no default
Calls: f -> tryCatchList
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : bad handler specification
> f(NULL,NULL)
Error in f(NULL, NULL) : bad handler specification
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : bad handler specification
> f(l0,l0)
Error in f(l0, l0) : bad handler specification
> f(c0,c0)
Error in f(c0, c0) : bad handler specification
> f(df0,df0)
Error in f(df0, df0) : bad handler specification
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : bad handler specification
> 
> ##  typeof  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("typeof", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] "list"
> f(l0)
[1] "logical"
> f(c0)
[1] "character"
> f(m0)
[1] "double"
> f(df0)
[1] "list"
> f(FALSE)
[1] "logical"
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  unclass  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unclass", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'unclass' which requires 1
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'unclass' which requires 1
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
$c0
factor(0)
Levels: 

attr(,"row.names")
character(0)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'unclass' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'unclass' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'unclass' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'unclass' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'unclass' which requires 1
> 
> ##  undebug  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("undebug", pos = 'package:base')
> f()
Error in f() : argument "fun" is missing, with no default
> f(NULL)
Error in undebug(fun) : argument must be a function
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in undebug(fun) : argument must be a function
Calls: f
> f(l0)
Error in undebug(fun) : argument must be a function
Calls: f
> f(c0)
Error in undebug(fun) : argument must be a function
Calls: f
> f(m0)
Error in undebug(fun) : argument must be a function
Calls: f
> f(df0)
Error in undebug(fun) : argument must be a function
Calls: f
> f(FALSE)
Error in undebug(fun) : argument must be a function
Calls: f
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  union  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("union", pos = 'package:base')
> f()
Error in as.vector(x) : argument "x" is missing, with no default
Calls: f -> unique -> as.vector
> f(NULL)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> unique -> as.vector
> f(,NULL)
Error in as.vector(x) : argument "x" is missing, with no default
Calls: f -> unique -> as.vector
> f(NULL,NULL)
NULL
> f(list())
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> unique -> as.vector
> f(l0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> unique -> as.vector
> f(c0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> unique -> as.vector
> f(m0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> unique -> as.vector
> f(df0)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> unique -> as.vector
> f(FALSE)
Error in as.vector(y) : argument "y" is missing, with no default
Calls: f -> unique -> as.vector
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[[1]]
factor(0)
Levels: 

> f(FALSE,FALSE)
[1] FALSE
> 
> ##  unique  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unique", pos = 'package:base')
> f()
Error in is.factor(x) : argument "x" is missing, with no default
Calls: f -> unique.default -> is.factor
> f(NULL)
NULL
> f(,NULL)
Error in is.factor(x) : argument "x" is missing, with no default
Calls: f -> unique.default -> is.factor
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  unique.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unique.POSIXlt", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
data frame with 0 columns and 0 rows
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  unique.array  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unique.array", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : character(0)
> f(,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(NULL,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(list())
Error in f(list()) : character(0)
> f(l0)
Error in f(l0) : character(0)
> f(c0)
Error in f(c0) : character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
     c0
NA <NA>
> f(FALSE)
Error in f(FALSE) : character(0)
> f(list(),list())
Error: argument 'incomparables != FALSE' is not used (yet)
> f(l0,l0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(c0,c0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : character(0)
> 
> ##  unique.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unique.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(NULL,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(list())
Error in x[!duplicated(x, fromLast = fromLast, ...), , drop = FALSE] : 
  incorrect number of dimensions
Calls: f
> f(l0)
Error in x[!duplicated(x, fromLast = fromLast, ...), , drop = FALSE] : 
  incorrect number of dimensions
Calls: f
> f(c0)
Error in x[!duplicated(x, fromLast = fromLast, ...), , drop = FALSE] : 
  incorrect number of dimensions
Calls: f
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in x[!duplicated(x, fromLast = fromLast, ...), , drop = FALSE] : 
  incorrect number of dimensions
Calls: f
> f(list(),list())
Error: argument 'incomparables != FALSE' is not used (yet)
> f(l0,l0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(c0,c0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
Error in x[!duplicated(x, fromLast = fromLast, ...), , drop = FALSE] : 
  incorrect number of dimensions
Calls: f
> 
> ##  unique.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unique.default", pos = 'package:base')
> f()
Error in is.factor(x) : argument "x" is missing, with no default
Calls: f -> is.factor
> f(NULL)
NULL
> f(,NULL)
Error in is.factor(x) : argument "x" is missing, with no default
Calls: f -> is.factor
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
[[1]]
factor(0)
Levels: 

> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[[1]]
factor(0)
Levels: 

> f(FALSE,FALSE)
[1] FALSE
> 
> ##  unique.matrix  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unique.matrix", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : character(0)
> f(,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(NULL,NULL)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(list())
Error in f(list()) : character(0)
> f(l0)
Error in f(l0) : character(0)
> f(c0)
Error in f(c0) : character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
     c0
NA <NA>
> f(FALSE)
Error in f(FALSE) : character(0)
> f(list(),list())
Error: argument 'incomparables != FALSE' is not used (yet)
> f(l0,l0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(c0,c0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : character(0)
> 
> ##  unique.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unique.numeric_version", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
data frame with 0 columns and 0 rows
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  unique.warnings  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unique.warnings", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
numeric(0)
> f(df0)
data frame with 0 columns and 0 rows
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error: argument 'incomparables != FALSE' is not used (yet)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  units  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("units", pos = 'package:base')
> f()
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  units.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("units.difftime", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
> f(l0)
NULL
> f(c0)
NULL
> f(m0)
NULL
> f(df0)
NULL
> f(FALSE)
NULL
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  units<-  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("units<-", pos = 'package:base')
> f()
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "character"
Calls: f
> f(df0,df0)
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "data.frame"
Calls: f
> f(FALSE,FALSE)
Error in UseMethod("units<-") : 
  no applicable method for 'units<-' applied to an object of class "logical"
Calls: f
> 
> ##  units<-.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("units<-.difftime", pos = 'package:base')
> f()
Error in units(x) : argument "x" is missing, with no default
Calls: f -> units
> f(NULL)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "NULL"
Calls: f -> units
> f(,NULL)
Error in units(x) : argument "x" is missing, with no default
Calls: f -> units
> f(NULL,NULL)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "NULL"
Calls: f -> units
> f(list())
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "list"
Calls: f -> units
> f(l0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "logical"
Calls: f -> units
> f(c0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "character"
Calls: f -> units
> f(m0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f -> units
> f(df0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "data.frame"
Calls: f -> units
> f(FALSE)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "logical"
Calls: f -> units
> f(list(),list())
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "list"
Calls: f -> units
> f(l0,l0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "logical"
Calls: f -> units
> f(c0,c0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "character"
Calls: f -> units
> f(df0,df0)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "data.frame"
Calls: f -> units
> f(FALSE,FALSE)
Error in UseMethod("units") : 
  no applicable method for 'units' applied to an object of class "logical"
Calls: f -> units
> 
> ##  unix.time  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unix.time", pos = 'package:base')
> f()
Error in f() : argument "expr" is missing, with no default
Timing stopped at: 0 0 0 
> f(NULL)
   user  system elapsed 
      0       0       0 
> f(,NULL)
Error in if (gcFirst) gc(FALSE) : argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (gcFirst) gc(FALSE) : argument is of length zero
Calls: f
> f(list())
   user  system elapsed 
      0       0       0 
> f(l0)
   user  system elapsed 
      0       0       0 
> f(c0)
   user  system elapsed 
      0       0       0 
> f(m0)
   user  system elapsed 
      0       0       0 
> f(df0)
   user  system elapsed 
      0       0       0 
> f(FALSE)
   user  system elapsed 
      0       0       0 
> f(list(),list())
Error in if (gcFirst) gc(FALSE) : argument is of length zero
Calls: f
> f(l0,l0)
Error in if (gcFirst) gc(FALSE) : argument is of length zero
Calls: f
> f(c0,c0)
Error in if (gcFirst) gc(FALSE) : argument is of length zero
Calls: f
> f(df0,df0)
Error in if (gcFirst) gc(FALSE) : 
  argument is not interpretable as logical
Calls: f
> f(FALSE,FALSE)
   user  system elapsed 
      0       0       0 
> 
> ##  unlink  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unlink", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
> f(FALSE)
> f(list(),list())
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
Error in f(df0, df0) : invalid 'recursive' argument
> f(FALSE,FALSE)
> 
> ##  unlist  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unlist", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
NULL
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
integer(0)
> f(FALSE)
[1] FALSE
> f(list(),list())
NULL
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
integer(0)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  unloadNamespace  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unloadNamespace", pos = 'package:base')
> f()
Error in f() : argument "ns" is missing, with no default
> f(NULL)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
Error in e2[[j]] : subscript out of bounds
Calls: f -> Ops.data.frame
> f(FALSE)
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  unlockBinding  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unlockBinding", pos = 'package:base')
> f()
Error in f() : argument "sym" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "env" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "sym" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : not a symbol
> f(list())
Error in f(list()) : argument "env" is missing, with no default
> f(l0)
Error in f(l0) : argument "env" is missing, with no default
> f(c0)
Error in as.name(sym) : invalid data of mode 'character' (too short)
Calls: f -> as.name
> f(m0)
Error in f(m0) : argument "env" is missing, with no default
> f(df0)
Error in f(df0) : argument "env" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "env" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : not a symbol
> f(l0,l0)
Error in f(l0, l0) : not a symbol
> f(c0,c0)
Error in as.name(sym) : invalid data of mode 'character' (too short)
Calls: f -> as.name
> f(df0,df0)
Error in f(df0, df0) : not a symbol
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : not a symbol
> 
> ##  unname  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unname", pos = 'package:base')
> f()
Error in f() : argument "obj" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : argument "obj" is missing, with no default
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
NULL
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
Error in force || !is.data.frame(obj) : invalid 'x' type in 'x || y'
Calls: f
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  unserialize  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unserialize", pos = 'package:base')
> f()
Error in f() : argument "connection" is missing, with no default
> f(NULL)
Error in f(NULL) : 'connection' must be a connection
> f(,NULL)
Error in f(, NULL) : argument "connection" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'connection' must be a connection
> f(list())
Error in f(list()) : 'connection' must be a connection
> f(l0)
Error in f(l0) : 'connection' must be a connection
> f(c0)
Error in f(c0) : invalid connection
> f(m0)
Error in f(m0) : 'connection' must be a connection
> f(df0)
Error in f(df0) : 'connection' must be a connection
> f(FALSE)
Error in f(FALSE) : 'connection' must be a connection
> f(list(),list())
Error in f(list(), list()) : 'connection' must be a connection
> f(l0,l0)
Error in f(l0, l0) : 'connection' must be a connection
> f(c0,c0)
Error in f(c0, c0) : invalid connection
> f(df0,df0)
Error in f(df0, df0) : 'connection' must be a connection
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'connection' must be a connection
> 
> ##  unsplit  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unsplit", pos = 'package:base')
> f()
Error in f() : argument "f" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "f" is missing, with no default
> f(,NULL)
Error in is.data.frame(value[[1L]]) : 
  argument "value" is missing, with no default
Calls: f -> is.data.frame
> f(NULL,NULL)
NULL
> f(list())
Error in f(list()) : argument "f" is missing, with no default
> f(l0)
Error in f(l0) : argument "f" is missing, with no default
> f(c0)
Error in f(c0) : argument "f" is missing, with no default
> f(m0)
Error in f(m0) : argument "f" is missing, with no default
> f(df0)
Error in f(df0) : argument "f" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "f" is missing, with no default
> f(list(),list())
Error in f[[1L]] : subscript out of bounds
Calls: f
> f(l0,l0)
Error in value[[1L]] : subscript out of bounds
Calls: f -> is.data.frame
> f(c0,c0)
Error in value[[1L]] : subscript out of bounds
Calls: f -> is.data.frame
> f(df0,df0)
factor(0)
Levels: 
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  untrace  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("untrace", pos = 'package:base')
> f()
Error in methods::.TraceWithMethods(where = <environment>, untrace = TRUE) : 
  argument "what" is missing, with no default
Calls: f -> eval.parent -> eval -> eval -> <Anonymous>
> f(NULL)
> f(,NULL)
Error in methods::.TraceWithMethods(, NULL, where = <environment>, untrace = TRUE) : 
  argument "what" is missing, with no default
Calls: f -> eval.parent -> eval -> eval -> <Anonymous>
> f(NULL,NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
Error in getFunction(what, where = whereF) : 
  no function 'integer(0)' found
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> getFunction
> f(FALSE)
Error in getFunction(what, where = whereF) : no function 'FALSE' found
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> getFunction
> f(list(),list())
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
Error in getFunction(what, where = whereF) : 
  no function 'integer(0)' found
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> getFunction
> f(FALSE,FALSE)
Error in getFunction(what, where = whereF) : no function 'FALSE' found
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> getFunction
> 
> ##  untracemem  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("untracemem", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'untracemem' which requires 1
> f(NULL)
Error in f(NULL) : R was not compiled with support for memory profiling
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  2 arguments passed to 'untracemem' which requires 1
> f(list())
Error in f(list()) : R was not compiled with support for memory profiling
> f(l0)
Error in f(l0) : R was not compiled with support for memory profiling
> f(c0)
Error in f(c0) : R was not compiled with support for memory profiling
> f(m0)
Error in f(m0) : R was not compiled with support for memory profiling
> f(df0)
Error in f(df0) : R was not compiled with support for memory profiling
> f(FALSE)
Error in f(FALSE) : R was not compiled with support for memory profiling
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'untracemem' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'untracemem' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'untracemem' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 
  2 arguments passed to 'untracemem' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  2 arguments passed to 'untracemem' which requires 1
> 
> ##  unz  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("unz", pos = 'package:base')
> f()
Error in paste(description, filename, sep = ":") : 
  argument "description" is missing, with no default
Calls: f -> paste
> f(NULL)
Error in paste(description, filename, sep = ":") : 
  argument "filename" is missing, with no default
Calls: f -> paste
> f(,NULL)
Error in paste(description, filename, sep = ":") : 
  argument "description" is missing, with no default
Calls: f -> paste
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'description' argument
> f(list())
Error in paste(description, filename, sep = ":") : 
  argument "filename" is missing, with no default
Calls: f -> paste
> f(l0)
Error in paste(description, filename, sep = ":") : 
  argument "filename" is missing, with no default
Calls: f -> paste
> f(c0)
Error in paste(description, filename, sep = ":") : 
  argument "filename" is missing, with no default
Calls: f -> paste
> f(m0)
Error in paste(description, filename, sep = ":") : 
  argument "filename" is missing, with no default
Calls: f -> paste
> f(df0)
Error in paste(description, filename, sep = ":") : 
  argument "filename" is missing, with no default
Calls: f -> paste
> f(FALSE)
Error in paste(description, filename, sep = ":") : 
  argument "filename" is missing, with no default
Calls: f -> paste
> f(list(),list())
Error in f(list(), list()) : invalid 'description' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'description' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'description' argument
> f(df0,df0)
            description                   class                    mode 
"integer(0):integer(0)"                   "unz"                     "r" 
                   text                  opened                can read 
                 "text"                "closed"                   "yes" 
              can write 
                  "yes" 
> f(FALSE,FALSE)
  description         class          mode          text        opened 
"FALSE:FALSE"         "unz"           "r"        "text"      "closed" 
     can read     can write 
        "yes"         "yes" 
> 
> ##  upper.tri  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("upper.tri", pos = 'package:base')
> f()
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> as.matrix
> f(NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(,NULL)
Error in as.matrix(x) : argument "x" is missing, with no default
Calls: f -> as.matrix
> f(NULL,NULL)
Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),  : 
  'data' must be of a vector type, was 'NULL'
Calls: f -> as.matrix -> as.matrix.default -> array
> f(list())
logical(0)
> f(l0)
logical(0)
> f(c0)
logical(0)
> f(m0)
logical(0)
> f(df0)
logical(0)
> f(FALSE)
      [,1]
[1,] FALSE
> f(list(),list())
Error in if (diag) row(x) <= col(x) else row(x) < col(x) : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (diag) row(x) <= col(x) else row(x) < col(x) : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (diag) row(x) <= col(x) else row(x) < col(x) : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in if (diag) row(x) <= col(x) else row(x) < col(x) : 
  argument is not interpretable as logical
Calls: f
> f(FALSE,FALSE)
      [,1]
[1,] FALSE
> 
> ##  url  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("url", pos = 'package:base')
> f()
Error in f() : argument "description" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'description' argument
> f(,NULL)
Error in f(, NULL) : argument "description" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'description' argument
> f(list())
Error in f(list()) : invalid 'description' argument
> f(l0)
Error in f(l0) : invalid 'description' argument
> f(c0)
Error in f(c0) : invalid 'description' argument
> f(m0)
Error in f(m0) : invalid 'description' argument
> f(df0)
Error in f(df0) : invalid 'description' argument
> f(FALSE)
Error in f(FALSE) : invalid 'description' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'description' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'description' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'description' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'description' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'description' argument
> 
> ##  utf8ToInt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("utf8ToInt", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument must be a character vector of length 1
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : argument must be a character vector of length 1
> f(l0)
Error in f(l0) : argument must be a character vector of length 1
> f(c0)
Error in f(c0) : argument must be a character vector of length 1
> f(m0)
Error in f(m0) : argument must be a character vector of length 1
> f(df0)
Error in f(df0) : argument must be a character vector of length 1
> f(FALSE)
Error in f(FALSE) : argument must be a character vector of length 1
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  validEnc  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("validEnc", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'x' argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'x' argument
> f(l0)
Error in f(l0) : invalid 'x' argument
> f(c0)
logical(0)
> f(m0)
Error in f(m0) : invalid 'x' argument
> f(df0)
Error in f(df0) : invalid 'x' argument
> f(FALSE)
Error in f(FALSE) : invalid 'x' argument
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  validUTF8  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("validUTF8", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'x' argument
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : invalid 'x' argument
> f(l0)
Error in f(l0) : invalid 'x' argument
> f(c0)
logical(0)
> f(m0)
Error in f(m0) : invalid 'x' argument
> f(df0)
Error in f(df0) : invalid 'x' argument
> f(FALSE)
Error in f(FALSE) : invalid 'x' argument
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  vapply  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("vapply", pos = 'package:base')
> f()
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(NULL)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(,NULL)
Error in match.fun(FUN) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(NULL,NULL)
Error in match.fun(FUN) : 'NULL' is not a function, character or symbol
Calls: f -> match.fun
> f(list())
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(l0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(c0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(m0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(df0)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(FALSE)
Error in match.fun(FUN) : argument "FUN" is missing, with no default
Calls: f -> match.fun
> f(list(),list())
Error in match.fun(FUN) : 'list()' is not a function, character or symbol
Calls: f -> match.fun
> f(l0,l0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'l0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(c0,c0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'c0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(df0,df0)
Error in get(as.character(FUN), mode = "function", envir = envir) : 
  object 'df0' of mode 'function' was not found
Calls: f -> match.fun -> get
> f(FALSE,FALSE)
Error in match.fun(FUN) : 'FALSE' is not a function, character or symbol
Calls: f -> match.fun
> 
> ##  vector  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("vector", pos = 'package:base')
> f()
logical(0)
> f(NULL)
Error in f(NULL) : invalid 'mode' argument
> f(,NULL)
Error in f(, NULL) : invalid 'length' argument
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'length' argument
> f(list())
Error in f(list()) : invalid 'mode' argument
> f(l0)
Error in f(l0) : invalid 'mode' argument
> f(c0)
Error in f(c0) : invalid 'mode' argument
> f(m0)
Error in f(m0) : invalid 'mode' argument
> f(df0)
Error in f(df0) : vector: cannot make a vector of mode 'integer(0)'.
> f(FALSE)
Error in f(FALSE) : vector: cannot make a vector of mode 'FALSE'.
> f(list(),list())
Error in f(list(), list()) : invalid 'length' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'length' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'length' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'length' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'length' argument
> 
> ##  warning  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("warning", pos = 'package:base')
> f()
Warning message:
 
> f(NULL)
Warning message:
 
> f(,NULL)
Warning message:
 
> f(NULL,NULL)
Warning message:
 
> f(list())
Warning message:
 
> f(l0)
Warning message:
 
> f(c0)
Warning message:
 
> f(m0)
Warning message:
 
> f(df0)
Warning message:
integer(0) 
> f(FALSE)
Warning message:
FALSE 
> f(list(),list())
Warning message:
 
> f(l0,l0)
Warning message:
 
> f(c0,c0)
Warning message:
 
> f(df0,df0)
Warning message:
integer(0)integer(0) 
> f(FALSE,FALSE)
Warning message:
FALSEFALSE 
> 
> ##  warnings  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("warnings", pos = 'package:base')
> f()
Warning message:
FALSEFALSE
> f(NULL)
Warning message:
FALSEFALSE
> f(,NULL)
Warning message:
FALSEFALSE
> f(NULL,NULL)
Warning message:
FALSEFALSE
> f(list())
Warning message:
FALSEFALSE 
> f(l0)
Warning message:
FALSEFALSE 
> f(c0)
Warning message:
FALSEFALSE 
> f(m0)
Warning message:
FALSEFALSE 
> f(df0)
Warning message:
FALSEFALSE Error in cat(list(...), file, sep, fill, labels, append) : 
  argument 2 (type 'list') cannot be handled by 'cat'
Calls: <Anonymous> -> print.warnings -> do.call -> cat
> f(FALSE)
Warning message:
FALSEFALSE FALSE
> f(list(),list())
Warning message:
FALSEFALSE  
> f(l0,l0)
Warning message:
FALSEFALSE  
> f(c0,c0)
Warning message:
FALSEFALSE  
> f(df0,df0)
Warning message:
FALSEFALSE Error in cat(list(...), file, sep, fill, labels, append) : 
  argument 2 (type 'list') cannot be handled by 'cat'
Calls: <Anonymous> -> print.warnings -> do.call -> cat
> f(FALSE,FALSE)
Warning message:
FALSEFALSE FALSE FALSE
> 
> ##  weekdays  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("weekdays", pos = 'package:base')
> f()
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "list"
Calls: f
> f(l0)
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "logical"
Calls: f
> f(list(),list())
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "character"
Calls: f
> f(df0,df0)
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "data.frame"
Calls: f
> f(FALSE,FALSE)
Error in UseMethod("weekdays") : 
  no applicable method for 'weekdays' applied to an object of class "logical"
Calls: f
> 
> ##  weekdays.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("weekdays.Date", pos = 'package:base')
> f()
Error in format(x, ifelse(abbreviate, "%a", "%A")) : 
  argument "x" is missing, with no default
Calls: f -> format
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in format(x, ifelse(abbreviate, "%a", "%A")) : 
  argument "x" is missing, with no default
Calls: f -> format
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(c0)
Error in format.default(x, ifelse(abbreviate, "%a", "%A")) : 
  invalid 'trim' argument
Calls: f -> format -> format.default
> f(m0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(df0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f ... format -> format.factor -> format -> format.default
> f(FALSE)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(list(),list())
character(0)
> f(l0,l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(c0,c0)
Error in format.default(x, ifelse(abbreviate, "%a", "%A")) : 
  invalid 'trim' argument
Calls: f -> format -> format.default
> f(df0,df0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f ... format -> format.factor -> format -> format.default
> f(FALSE,FALSE)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> 
> ##  weekdays.POSIXt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("weekdays.POSIXt", pos = 'package:base')
> f()
Error in format(x, ifelse(abbreviate, "%a", "%A")) : 
  argument "x" is missing, with no default
Calls: f -> format
> f(NULL)
[1] "NULL"
> f(,NULL)
Error in format(x, ifelse(abbreviate, "%a", "%A")) : 
  argument "x" is missing, with no default
Calls: f -> format
> f(NULL,NULL)
[1] "NULL"
> f(list())
character(0)
> f(l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(c0)
Error in format.default(x, ifelse(abbreviate, "%a", "%A")) : 
  invalid 'trim' argument
Calls: f -> format -> format.default
> f(m0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(df0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f ... format -> format.factor -> format -> format.default
> f(FALSE)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(list(),list())
character(0)
> f(l0,l0)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> f(c0,c0)
Error in format.default(x, ifelse(abbreviate, "%a", "%A")) : 
  invalid 'trim' argument
Calls: f -> format -> format.default
> f(df0,df0)
Error in format.default(structure(as.character(x), names = names(x), dim = dim(x),  : 
  invalid 'trim' argument
Calls: f ... format -> format.factor -> format -> format.default
> f(FALSE,FALSE)
Error in prettyNum(.Internal(format(x, trim, digits, nsmall, width, 3L,  : 
  invalid 'trim' argument
Calls: f -> format -> format.default -> prettyNum
> 
> ##  which  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("which", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument to 'which' is not logical
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument to 'which' is not logical
> f(list())
Error in f(list()) : argument to 'which' is not logical
> f(l0)
integer(0)
> f(c0)
Error in f(c0) : argument to 'which' is not logical
> f(m0)
Error in f(m0) : argument to 'which' is not logical
> f(df0)
Error in f(df0) : argument to 'which' is not logical
> f(FALSE)
integer(0)
> f(list(),list())
Error in f(list(), list()) : argument to 'which' is not logical
> f(l0,l0)
integer(0)
> f(c0,c0)
Error in f(c0, c0) : argument to 'which' is not logical
> f(df0,df0)
Error in f(df0, df0) : argument to 'which' is not logical
> f(FALSE,FALSE)
integer(0)
> 
> ##  which.max  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("which.max", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
integer(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
integer(0)
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  which.min  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("which.min", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
integer(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
integer(0)
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  while  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("while", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'while' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to 'while' which requires 2
> f(,NULL)
Error in f(, NULL) : argument is of length zero
> f(NULL,NULL)
Error in f(NULL, NULL) : argument is of length zero
> f(list())
Error in f(list()) : 1 argument passed to 'while' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to 'while' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to 'while' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to 'while' which requires 2
> f(df0)
Error in f(df0) : 1 argument passed to 'while' which requires 2
> f(FALSE)
Error in f(FALSE) : 1 argument passed to 'while' which requires 2
> f(list(),list())
Error in f(list(), list()) : argument is of length zero
> f(l0,l0)
Error in f(l0, l0) : argument is of length zero
> f(c0,c0)
Error in f(c0, c0) : argument is of length zero
> f(df0,df0)
Error in f(df0, df0) : argument is not interpretable as logical
> f(FALSE,FALSE)
> 
> ##  with  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("with", pos = 'package:base')
> f()
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  argument "data" is missing, with no default
Calls: f -> with.default -> eval
> f(NULL)
NULL
> f(,NULL)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  argument "data" is missing, with no default
Calls: f -> with.default -> eval
> f(NULL,NULL)
NULL
> f(list())
NULL
> f(l0)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> with.default -> eval
> f(c0)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  invalid 'envir' argument of type 'character'
Calls: f -> with.default -> eval
> f(m0)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  numeric 'envir' arg not of length one
Calls: f -> with.default -> eval
> f(df0)
NULL
> f(FALSE)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> with.default -> eval
> f(list(),list())
list()
> f(l0,l0)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> with.default -> eval
> f(c0,c0)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  invalid 'envir' argument of type 'character'
Calls: f -> with.default -> eval
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> with.default -> eval
> 
> ##  with.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("with.default", pos = 'package:base')
> f()
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  argument "data" is missing, with no default
Calls: f -> eval
> f(NULL)
NULL
> f(,NULL)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  argument "data" is missing, with no default
Calls: f -> eval
> f(NULL,NULL)
NULL
> f(list())
NULL
> f(l0)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> eval
> f(c0)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  invalid 'envir' argument of type 'character'
Calls: f -> eval
> f(m0)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  numeric 'envir' arg not of length one
Calls: f -> eval
> f(df0)
NULL
> f(FALSE)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> eval
> f(list(),list())
list()
> f(l0,l0)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> eval
> f(c0,c0)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  invalid 'envir' argument of type 'character'
Calls: f -> eval
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> eval
> 
> ##  withCallingHandlers  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("withCallingHandlers", pos = 'package:base')
> f()
Error in f() : argument "expr" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : bad handler specification
> f(NULL,NULL)
Error in f(NULL, NULL) : bad handler specification
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : bad handler specification
> f(l0,l0)
Error in f(l0, l0) : bad handler specification
> f(c0,c0)
Error in f(c0, c0) : bad handler specification
> f(df0,df0)
Error in f(df0, df0) : bad handler specification
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : bad handler specification
> 
> ##  withRestarts  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("withRestarts", pos = 'package:base')
> f()
Error in f() : argument "expr" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in makeRestartList(...) : not a valid restart specification
Calls: f -> makeRestartList
> f(NULL,NULL)
Error in makeRestartList(...) : not a valid restart specification
Calls: f -> makeRestartList
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
Error in makeRestartList(...) : not a valid restart specification
Calls: f -> makeRestartList
> f(c0,c0)
character(0)
> f(df0,df0)
Error in fun(c0 = quote(integer(0))) : 
  unused argument (c0 = quote(integer(0)))
Calls: f -> makeRestartList -> docall -> do.call -> fun
> f(FALSE,FALSE)
Error in makeRestartList(...) : not a valid restart specification
Calls: f -> makeRestartList
> 
> ##  withVisible  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("withVisible", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
$value
NULL

$visible
[1] TRUE

> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
$value
list()

$visible
[1] TRUE

> f(l0)
$value
logical(0)

$visible
[1] TRUE

> f(c0)
$value
character(0)

$visible
[1] TRUE

> f(m0)
$value
<0 x 0 matrix>

$visible
[1] TRUE

> f(df0)
$value
[1] c0
<0 rows> (or 0-length row.names)

$visible
[1] TRUE

> f(FALSE)
$value
[1] FALSE

$visible
[1] TRUE

> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  within  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("within", pos = 'package:base')
> f()
Error in UseMethod("within") : 
  no applicable method for 'within' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("within") : 
  no applicable method for 'within' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("within") : 
  no applicable method for 'within' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("within") : 
  no applicable method for 'within' applied to an object of class "NULL"
Calls: f
> f(list())
list()
> f(l0)
Error in UseMethod("within") : 
  no applicable method for 'within' applied to an object of class "logical"
Calls: f
> f(c0)
Error in UseMethod("within") : 
  no applicable method for 'within' applied to an object of class "character"
Calls: f
> f(m0)
Error in UseMethod("within") : 
  no applicable method for 'within' applied to an object of class "c('matrix', 'double', 'numeric')"
Calls: f
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in UseMethod("within") : 
  no applicable method for 'within' applied to an object of class "logical"
Calls: f
> f(list(),list())
list()
> f(l0,l0)
Error in UseMethod("within") : 
  no applicable method for 'within' applied to an object of class "logical"
Calls: f
> f(c0,c0)
Error in UseMethod("within") : 
  no applicable method for 'within' applied to an object of class "character"
Calls: f
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in UseMethod("within") : 
  no applicable method for 'within' applied to an object of class "logical"
Calls: f
> 
> ##  within.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("within.data.frame", pos = 'package:base')
> f()
Error in evalq(environment(), data, parent) : 
  argument "data" is missing, with no default
Calls: f -> evalq
> f(NULL)
$l0
logical(0)

$c0
character(0)

$.Random.seed
  [1]         403         624  1280795612  -169270483  -442010614  -603558397
  [7]  -222347416  1489374793   865871222  1734802815    98005428   268448037
 [13]    63650722 -1754793285 -2135275840  -779982911  -864886130  1880007095
 [19]   463784588  1271615005  1390544442  -544608653  -251475688  -326549447
 [25] -1570483546  1965989103  -784675228  1458985493  2146317266 -1103943381
 [31]   289023600  -436963407   109630910    69979943  1606475068  1441346829
 [37]  -662821782  -381252893  -311574840  1918496297   289721302   507975775
 [43]  -209037548  1665646341  -466864126   776139675  1704391200  -162823263
 [49] -1815571218   471685271  1503042540    -9316355   773770906  1304642387
 [55]  1931157624 -1378412519   965775622    19361743  1561398212  1879269365
 [61]  1049118770  1191074315   508275152 -1006204015  -639295458  1060781575
 [67]  -724498788   257177325 -1004075830   323426243   602271272  1516224009
 [73]  -111500746  -368663745  1624894580 -1946665755  -305830814  -779330437
 [79]  1251167616 -2140893311  2068936526  1520009079  -673505972   406802909
 [85]  -205928710  1641613363  1751721944   454221817 -2089418906  1121694383
 [91]  1689254180 -1984604715  -781808494  1892940523   409525552 -1134260367
 [97] -2025809282   823270631  1407180796  1755457741   783947050  -213904221
[103]   536857992  1791983081 -1888114538 -2091016673 -1860292140  -276190523
[109]  2041495746   293352795 -2071504672  1489341281 -1448769106  -885320105
[115]  -724939092   -89408579   801828698 -2096939757  1355079480 -1942710311
[121] -1985176122 -1593612913 -2123393404  -410764363  1470169330  1508641739
[127]   174702736  1980138321  1530086622  -412390457   826632540  1682639533
[133]   709842314  1047101827  -678208280  2040606153 -1020403978  2130970879
[139]  -206624972   796133541  -318747358   441089595  1414206528  1684436801
[145]   291294222  1773804855   985411596  -953215587   -93698118   880402931
[151]   403064472  -717996103 -1580438490  1582729327  2024268772   149426581
[157]   -61889198 -1132557141  -349809680 -1813747919  1851072318  -872535385
[163]  1834590908 -1060709235  1425982954  -973382045 -1401381816  -657666647
[169]  -803519146  1303503839   602197140   690968197 -1194194558 -1271974117
[175]  -424247392 -2076224735  1896824430 -1915841513 -1610038932  1514233725
[181]  -139472870   359986899   369450488  1175050137  1835887238 -1718805681
[187]  1001447748 -1453795467  -158697038  -289178229 -1653172400 -1258931439
[193] -1522652770 -1534961273 -1267430372  -124936595  -656382390  1999481667
[199]  1820822440  1447714185  1037425590  1008676543  -384359948  -164391835
[205]  1513879010  1130520571  1419877120 -1790435583  1398071502  -349144329
[211]  1191707340  1281005917  1471383674  -517178445   244983128 -1431478407
[217]  -634939162  1298079279  -404582748 -1068593835 -1989575150  -487399829
[223]  -265123152  1949564657 -1333369858 -1833961369  1592665468  1108824141
[229]  1812739754  1530423331  1368926984  1007803753  -537550314  1929636255
[235]   916334420  -336018875  1515590210  -937690917 -1562089888  1886968545
[241]   247837486 -1852321321   504493100  -235748547  -695373606  1859678355
[247]   832347320  1259788121   563279686  1350865167  -963318780 -2126433483
[253]    67416690   658812747 -1640878576  1754641105   214290014   339674951
[259]  1897819868 -1881411027  1352283914 -1756130045    25328232  1343966537
[265]  -703424394  -149416833   735173812 -1678319579  1312317090  -560725573
[271] -1034493504  -355891519  -973490802  -323184457 -1082223220  1535237405
[277] -1135244998 -1313811085   451200024  -348242119  -918059610  1437955055
[283]  1293941092  1537788181 -1049356590  -437194709  1313702256   622024369
[289]    43280574    48727591 -1688377284 -1873574899  1419929450  1823945187
[295] -1910605368  -731992791 -1950040362 -1458327713   336216596  -744100347
[301]  -688203006 -1090356581 -1882125024  -718134623  1737025518 -1000943721
[307]  1906697964  1434445565  -584855142 -1192383917  -766862472  -887384295
[313] -1562557434  -341195057   484161220   -84062475   684698418  -449863413
[319] -1822653232   950332049 -1500892386 -1805552377   973279644 -1376385555
[325]  -767768630   949698243  1967401256 -2032927479 -1197206218  1169078847
[331]  1721718644 -1669469211 -1581938846  1033855867  -735385472   -55923071
[337] -1374991794  1008629367   652208204  1751441629 -1726985734 -1345917133
[343]  -878304552 -1499013383  -873713050  2098825647    52438052  1186383061
[349] -1389400174 -2026323477  -331925456   776105585  -650171010  1516557287
[355]  1432840956   255555533 -1350477782  1949809571 -1597273976 -1586283287
[361]  1615371158  1705063711  -957801260  1006033349  1736467394  -895304613
[367]  1144812512   707471969   538500270  -741634729  2105842092  -660026691
[373]  -600640934  -579558381  -422618568 -1244129575 -1374924602  1354546319
[379]  -112901756  1649224373  -844405774  -901492021 -1011508336 -1931222447
[385]  1196120030  1118413511 -1578994596 -1768171091  1585977482 -1262180221
[391]  1720489960  -634098487  -766881290  2107842559    71275060   864597925
[397]  -311201758  1917093179 -2132955328   581670465   273260302  1729500215
[403] -1075053812 -1497127779   514050746 -1523660557  1872642456 -1398325575
[409]   -19554522 -1991549073   614665956 -1388805995   358320210  1217024939
[415]  1890561776  -679393743  1766240830 -1763188313  2144087484  -493933683
[421]  -580318998 -1418066589 -2007017656  1661963433 -1438566314  -563316001
[427]   435861396  1084982661    78032002  -591610341   384211616 -1490816479
[433] -1657433746   766905111  -462549908 -1892848003  1685771034 -2043847213
[439]   501930232 -1156819303 -1075831418   628978255  -695104444 -1024407947
[445]   458742962   943899787   905802320 -1928160751 -2083963746   -52981625
[451]   -75720932  1301114221 -1237571254   630182467   874235560  -369320823
[457]  -809152842 -1263188545   796036340  1557611365 -1976428318  1313040123
[463]  2133800448  1955347969 -1317751858 -1151110665 -1922904628   173942877
[469]  1037044602   464020147   361570392 -1929421191  1053019110      718127
[475] -1939293788  2062416981 -2101845742  1806017899  1115088304   680517105
[481] -1486162178  1982902119  -850677636  -301031603   -15107670   205393699
[487]    60417544 -1728865175  1986958614   154501279 -1744891308 -1115426491
[493]  1731048770 -1492090917   512721248  1138522593    60753454    -2733865
[499]   153239340  1288557117  -960793638   483907475  -430106696  1249400409
[505]   353937990  -810817521  -276785404  -391634379   -90892942  1357575755
[511] -1326184176   552669649 -1329340066  1621835335  1502706140 -1769291475
[517]  1511586314  1690090499   -55462552   367823945   500501366 -1062917249
[523]  -755480652  -735473883 -1867415134  1666975931  1172274368  -905140799
[529]   374114446  1187418039  1376018572  1190423581 -1487598534  1559477363
[535] -1942831336 -1754317255   678869158   655903471  -718199708  1536636949
[541]  1040579026  -229984469 -2008228752  -382847567  1215036350  1979661607
[547] -1331301572  -713436403  -179131798  1346623715 -1858390840 -2099286999
[553] -1852788266 -1682160033 -1950995180  1312824581   131431938 -1688338021
[559]   838281248 -1206599263   940915438   938231447   241250796 -1521879555
[565]   330618010  -885780141  1860572792 -1814292967 -1435109626  1963466191
[571]  1053974980  1597193717   337841714  -167974901 -1151770672  -264287855
[577]  -486848994  -874206201 -1897849700  -179055379 -1965126966   202073539
[583] -1626446808  2110012425  -382105546   926077247 -1718566284   356489957
[589]  -642667934    55470715   195986304 -1158886015 -2087641778  -687903369
[595] -1869565108  -800690211  -873280262  1926288947  1649352152  -608772615
[601]   414082406    70475951  1505513252 -1158401067  1342460562 -1640396565
[607]   686920496 -1591980687 -1056325506  -736916761  1553659388   -57620787
[613]  1624546090  -246717789  1879262088   546503657 -2006479210   197184543
[619]    -2095148  1319110853   526255810  -345685157  -404910368  2072824161
[625]  -547868754 -2085092265

$f
function (data, expr, ...) 
{
    parent <- parent.frame()
    e <- evalq(environment(), data, parent)
    eval(substitute(expr), e)
    l <- as.list(e, all.names = TRUE)
    l <- l[!vapply(l, is.null, NA, USE.NAMES = FALSE)]
    nD <- length(del <- setdiff(names(data), (nl <- names(l))))
    data[nl] <- l
    if (nD) 
        data[del] <- if (nD == 1) 
            NULL
        else vector("list", nD)
    data
}
<bytecode: 0x227f808>
<environment: namespace:base>

$.proctime00
   user  system elapsed 
  0.088   0.004   0.090 

$df0
[1] c0
<0 rows> (or 0-length row.names)

$m0
<0 x 0 matrix>

> f(,NULL)
Error in evalq(environment(), data, parent) : 
  argument "data" is missing, with no default
Calls: f -> evalq
> f(NULL,NULL)
$l0
logical(0)

$c0
character(0)

$.Random.seed
  [1]         403         624  1280795612  -169270483  -442010614  -603558397
  [7]  -222347416  1489374793   865871222  1734802815    98005428   268448037
 [13]    63650722 -1754793285 -2135275840  -779982911  -864886130  1880007095
 [19]   463784588  1271615005  1390544442  -544608653  -251475688  -326549447
 [25] -1570483546  1965989103  -784675228  1458985493  2146317266 -1103943381
 [31]   289023600  -436963407   109630910    69979943  1606475068  1441346829
 [37]  -662821782  -381252893  -311574840  1918496297   289721302   507975775
 [43]  -209037548  1665646341  -466864126   776139675  1704391200  -162823263
 [49] -1815571218   471685271  1503042540    -9316355   773770906  1304642387
 [55]  1931157624 -1378412519   965775622    19361743  1561398212  1879269365
 [61]  1049118770  1191074315   508275152 -1006204015  -639295458  1060781575
 [67]  -724498788   257177325 -1004075830   323426243   602271272  1516224009
 [73]  -111500746  -368663745  1624894580 -1946665755  -305830814  -779330437
 [79]  1251167616 -2140893311  2068936526  1520009079  -673505972   406802909
 [85]  -205928710  1641613363  1751721944   454221817 -2089418906  1121694383
 [91]  1689254180 -1984604715  -781808494  1892940523   409525552 -1134260367
 [97] -2025809282   823270631  1407180796  1755457741   783947050  -213904221
[103]   536857992  1791983081 -1888114538 -2091016673 -1860292140  -276190523
[109]  2041495746   293352795 -2071504672  1489341281 -1448769106  -885320105
[115]  -724939092   -89408579   801828698 -2096939757  1355079480 -1942710311
[121] -1985176122 -1593612913 -2123393404  -410764363  1470169330  1508641739
[127]   174702736  1980138321  1530086622  -412390457   826632540  1682639533
[133]   709842314  1047101827  -678208280  2040606153 -1020403978  2130970879
[139]  -206624972   796133541  -318747358   441089595  1414206528  1684436801
[145]   291294222  1773804855   985411596  -953215587   -93698118   880402931
[151]   403064472  -717996103 -1580438490  1582729327  2024268772   149426581
[157]   -61889198 -1132557141  -349809680 -1813747919  1851072318  -872535385
[163]  1834590908 -1060709235  1425982954  -973382045 -1401381816  -657666647
[169]  -803519146  1303503839   602197140   690968197 -1194194558 -1271974117
[175]  -424247392 -2076224735  1896824430 -1915841513 -1610038932  1514233725
[181]  -139472870   359986899   369450488  1175050137  1835887238 -1718805681
[187]  1001447748 -1453795467  -158697038  -289178229 -1653172400 -1258931439
[193] -1522652770 -1534961273 -1267430372  -124936595  -656382390  1999481667
[199]  1820822440  1447714185  1037425590  1008676543  -384359948  -164391835
[205]  1513879010  1130520571  1419877120 -1790435583  1398071502  -349144329
[211]  1191707340  1281005917  1471383674  -517178445   244983128 -1431478407
[217]  -634939162  1298079279  -404582748 -1068593835 -1989575150  -487399829
[223]  -265123152  1949564657 -1333369858 -1833961369  1592665468  1108824141
[229]  1812739754  1530423331  1368926984  1007803753  -537550314  1929636255
[235]   916334420  -336018875  1515590210  -937690917 -1562089888  1886968545
[241]   247837486 -1852321321   504493100  -235748547  -695373606  1859678355
[247]   832347320  1259788121   563279686  1350865167  -963318780 -2126433483
[253]    67416690   658812747 -1640878576  1754641105   214290014   339674951
[259]  1897819868 -1881411027  1352283914 -1756130045    25328232  1343966537
[265]  -703424394  -149416833   735173812 -1678319579  1312317090  -560725573
[271] -1034493504  -355891519  -973490802  -323184457 -1082223220  1535237405
[277] -1135244998 -1313811085   451200024  -348242119  -918059610  1437955055
[283]  1293941092  1537788181 -1049356590  -437194709  1313702256   622024369
[289]    43280574    48727591 -1688377284 -1873574899  1419929450  1823945187
[295] -1910605368  -731992791 -1950040362 -1458327713   336216596  -744100347
[301]  -688203006 -1090356581 -1882125024  -718134623  1737025518 -1000943721
[307]  1906697964  1434445565  -584855142 -1192383917  -766862472  -887384295
[313] -1562557434  -341195057   484161220   -84062475   684698418  -449863413
[319] -1822653232   950332049 -1500892386 -1805552377   973279644 -1376385555
[325]  -767768630   949698243  1967401256 -2032927479 -1197206218  1169078847
[331]  1721718644 -1669469211 -1581938846  1033855867  -735385472   -55923071
[337] -1374991794  1008629367   652208204  1751441629 -1726985734 -1345917133
[343]  -878304552 -1499013383  -873713050  2098825647    52438052  1186383061
[349] -1389400174 -2026323477  -331925456   776105585  -650171010  1516557287
[355]  1432840956   255555533 -1350477782  1949809571 -1597273976 -1586283287
[361]  1615371158  1705063711  -957801260  1006033349  1736467394  -895304613
[367]  1144812512   707471969   538500270  -741634729  2105842092  -660026691
[373]  -600640934  -579558381  -422618568 -1244129575 -1374924602  1354546319
[379]  -112901756  1649224373  -844405774  -901492021 -1011508336 -1931222447
[385]  1196120030  1118413511 -1578994596 -1768171091  1585977482 -1262180221
[391]  1720489960  -634098487  -766881290  2107842559    71275060   864597925
[397]  -311201758  1917093179 -2132955328   581670465   273260302  1729500215
[403] -1075053812 -1497127779   514050746 -1523660557  1872642456 -1398325575
[409]   -19554522 -1991549073   614665956 -1388805995   358320210  1217024939
[415]  1890561776  -679393743  1766240830 -1763188313  2144087484  -493933683
[421]  -580318998 -1418066589 -2007017656  1661963433 -1438566314  -563316001
[427]   435861396  1084982661    78032002  -591610341   384211616 -1490816479
[433] -1657433746   766905111  -462549908 -1892848003  1685771034 -2043847213
[439]   501930232 -1156819303 -1075831418   628978255  -695104444 -1024407947
[445]   458742962   943899787   905802320 -1928160751 -2083963746   -52981625
[451]   -75720932  1301114221 -1237571254   630182467   874235560  -369320823
[457]  -809152842 -1263188545   796036340  1557611365 -1976428318  1313040123
[463]  2133800448  1955347969 -1317751858 -1151110665 -1922904628   173942877
[469]  1037044602   464020147   361570392 -1929421191  1053019110      718127
[475] -1939293788  2062416981 -2101845742  1806017899  1115088304   680517105
[481] -1486162178  1982902119  -850677636  -301031603   -15107670   205393699
[487]    60417544 -1728865175  1986958614   154501279 -1744891308 -1115426491
[493]  1731048770 -1492090917   512721248  1138522593    60753454    -2733865
[499]   153239340  1288557117  -960793638   483907475  -430106696  1249400409
[505]   353937990  -810817521  -276785404  -391634379   -90892942  1357575755
[511] -1326184176   552669649 -1329340066  1621835335  1502706140 -1769291475
[517]  1511586314  1690090499   -55462552   367823945   500501366 -1062917249
[523]  -755480652  -735473883 -1867415134  1666975931  1172274368  -905140799
[529]   374114446  1187418039  1376018572  1190423581 -1487598534  1559477363
[535] -1942831336 -1754317255   678869158   655903471  -718199708  1536636949
[541]  1040579026  -229984469 -2008228752  -382847567  1215036350  1979661607
[547] -1331301572  -713436403  -179131798  1346623715 -1858390840 -2099286999
[553] -1852788266 -1682160033 -1950995180  1312824581   131431938 -1688338021
[559]   838281248 -1206599263   940915438   938231447   241250796 -1521879555
[565]   330618010  -885780141  1860572792 -1814292967 -1435109626  1963466191
[571]  1053974980  1597193717   337841714  -167974901 -1151770672  -264287855
[577]  -486848994  -874206201 -1897849700  -179055379 -1965126966   202073539
[583] -1626446808  2110012425  -382105546   926077247 -1718566284   356489957
[589]  -642667934    55470715   195986304 -1158886015 -2087641778  -687903369
[595] -1869565108  -800690211  -873280262  1926288947  1649352152  -608772615
[601]   414082406    70475951  1505513252 -1158401067  1342460562 -1640396565
[607]   686920496 -1591980687 -1056325506  -736916761  1553659388   -57620787
[613]  1624546090  -246717789  1879262088   546503657 -2006479210   197184543
[619]    -2095148  1319110853   526255810  -345685157  -404910368  2072824161
[625]  -547868754 -2085092265

$f
function (data, expr, ...) 
{
    parent <- parent.frame()
    e <- evalq(environment(), data, parent)
    eval(substitute(expr), e)
    l <- as.list(e, all.names = TRUE)
    l <- l[!vapply(l, is.null, NA, USE.NAMES = FALSE)]
    nD <- length(del <- setdiff(names(data), (nl <- names(l))))
    data[nl] <- l
    if (nD) 
        data[del] <- if (nD == 1) 
            NULL
        else vector("list", nD)
    data
}
<bytecode: 0x227f808>
<environment: namespace:base>

$.proctime00
   user  system elapsed 
  0.088   0.004   0.090 

$df0
[1] c0
<0 rows> (or 0-length row.names)

$m0
<0 x 0 matrix>

> f(list())
list()
> f(l0)
Error in evalq(environment(), data, parent) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> evalq
> f(c0)
Error in evalq(environment(), data, parent) : 
  invalid 'envir' argument of type 'character'
Calls: f -> evalq
> f(m0)
Error in evalq(environment(), data, parent) : 
  numeric 'envir' arg not of length one
Calls: f -> evalq
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in evalq(environment(), data, parent) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> evalq
> f(list(),list())
list()
> f(l0,l0)
Error in evalq(environment(), data, parent) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> evalq
> f(c0,c0)
Error in evalq(environment(), data, parent) : 
  invalid 'envir' argument of type 'character'
Calls: f -> evalq
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in evalq(environment(), data, parent) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> evalq
> 
> ##  within.list  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("within.list", pos = 'package:base')
> f()
Error in evalq(environment(), data, parent) : 
  argument "data" is missing, with no default
Calls: f -> evalq
> f(NULL)
$l0
logical(0)

$c0
character(0)

$.Random.seed
  [1]         403         624  1280795612  -169270483  -442010614  -603558397
  [7]  -222347416  1489374793   865871222  1734802815    98005428   268448037
 [13]    63650722 -1754793285 -2135275840  -779982911  -864886130  1880007095
 [19]   463784588  1271615005  1390544442  -544608653  -251475688  -326549447
 [25] -1570483546  1965989103  -784675228  1458985493  2146317266 -1103943381
 [31]   289023600  -436963407   109630910    69979943  1606475068  1441346829
 [37]  -662821782  -381252893  -311574840  1918496297   289721302   507975775
 [43]  -209037548  1665646341  -466864126   776139675  1704391200  -162823263
 [49] -1815571218   471685271  1503042540    -9316355   773770906  1304642387
 [55]  1931157624 -1378412519   965775622    19361743  1561398212  1879269365
 [61]  1049118770  1191074315   508275152 -1006204015  -639295458  1060781575
 [67]  -724498788   257177325 -1004075830   323426243   602271272  1516224009
 [73]  -111500746  -368663745  1624894580 -1946665755  -305830814  -779330437
 [79]  1251167616 -2140893311  2068936526  1520009079  -673505972   406802909
 [85]  -205928710  1641613363  1751721944   454221817 -2089418906  1121694383
 [91]  1689254180 -1984604715  -781808494  1892940523   409525552 -1134260367
 [97] -2025809282   823270631  1407180796  1755457741   783947050  -213904221
[103]   536857992  1791983081 -1888114538 -2091016673 -1860292140  -276190523
[109]  2041495746   293352795 -2071504672  1489341281 -1448769106  -885320105
[115]  -724939092   -89408579   801828698 -2096939757  1355079480 -1942710311
[121] -1985176122 -1593612913 -2123393404  -410764363  1470169330  1508641739
[127]   174702736  1980138321  1530086622  -412390457   826632540  1682639533
[133]   709842314  1047101827  -678208280  2040606153 -1020403978  2130970879
[139]  -206624972   796133541  -318747358   441089595  1414206528  1684436801
[145]   291294222  1773804855   985411596  -953215587   -93698118   880402931
[151]   403064472  -717996103 -1580438490  1582729327  2024268772   149426581
[157]   -61889198 -1132557141  -349809680 -1813747919  1851072318  -872535385
[163]  1834590908 -1060709235  1425982954  -973382045 -1401381816  -657666647
[169]  -803519146  1303503839   602197140   690968197 -1194194558 -1271974117
[175]  -424247392 -2076224735  1896824430 -1915841513 -1610038932  1514233725
[181]  -139472870   359986899   369450488  1175050137  1835887238 -1718805681
[187]  1001447748 -1453795467  -158697038  -289178229 -1653172400 -1258931439
[193] -1522652770 -1534961273 -1267430372  -124936595  -656382390  1999481667
[199]  1820822440  1447714185  1037425590  1008676543  -384359948  -164391835
[205]  1513879010  1130520571  1419877120 -1790435583  1398071502  -349144329
[211]  1191707340  1281005917  1471383674  -517178445   244983128 -1431478407
[217]  -634939162  1298079279  -404582748 -1068593835 -1989575150  -487399829
[223]  -265123152  1949564657 -1333369858 -1833961369  1592665468  1108824141
[229]  1812739754  1530423331  1368926984  1007803753  -537550314  1929636255
[235]   916334420  -336018875  1515590210  -937690917 -1562089888  1886968545
[241]   247837486 -1852321321   504493100  -235748547  -695373606  1859678355
[247]   832347320  1259788121   563279686  1350865167  -963318780 -2126433483
[253]    67416690   658812747 -1640878576  1754641105   214290014   339674951
[259]  1897819868 -1881411027  1352283914 -1756130045    25328232  1343966537
[265]  -703424394  -149416833   735173812 -1678319579  1312317090  -560725573
[271] -1034493504  -355891519  -973490802  -323184457 -1082223220  1535237405
[277] -1135244998 -1313811085   451200024  -348242119  -918059610  1437955055
[283]  1293941092  1537788181 -1049356590  -437194709  1313702256   622024369
[289]    43280574    48727591 -1688377284 -1873574899  1419929450  1823945187
[295] -1910605368  -731992791 -1950040362 -1458327713   336216596  -744100347
[301]  -688203006 -1090356581 -1882125024  -718134623  1737025518 -1000943721
[307]  1906697964  1434445565  -584855142 -1192383917  -766862472  -887384295
[313] -1562557434  -341195057   484161220   -84062475   684698418  -449863413
[319] -1822653232   950332049 -1500892386 -1805552377   973279644 -1376385555
[325]  -767768630   949698243  1967401256 -2032927479 -1197206218  1169078847
[331]  1721718644 -1669469211 -1581938846  1033855867  -735385472   -55923071
[337] -1374991794  1008629367   652208204  1751441629 -1726985734 -1345917133
[343]  -878304552 -1499013383  -873713050  2098825647    52438052  1186383061
[349] -1389400174 -2026323477  -331925456   776105585  -650171010  1516557287
[355]  1432840956   255555533 -1350477782  1949809571 -1597273976 -1586283287
[361]  1615371158  1705063711  -957801260  1006033349  1736467394  -895304613
[367]  1144812512   707471969   538500270  -741634729  2105842092  -660026691
[373]  -600640934  -579558381  -422618568 -1244129575 -1374924602  1354546319
[379]  -112901756  1649224373  -844405774  -901492021 -1011508336 -1931222447
[385]  1196120030  1118413511 -1578994596 -1768171091  1585977482 -1262180221
[391]  1720489960  -634098487  -766881290  2107842559    71275060   864597925
[397]  -311201758  1917093179 -2132955328   581670465   273260302  1729500215
[403] -1075053812 -1497127779   514050746 -1523660557  1872642456 -1398325575
[409]   -19554522 -1991549073   614665956 -1388805995   358320210  1217024939
[415]  1890561776  -679393743  1766240830 -1763188313  2144087484  -493933683
[421]  -580318998 -1418066589 -2007017656  1661963433 -1438566314  -563316001
[427]   435861396  1084982661    78032002  -591610341   384211616 -1490816479
[433] -1657433746   766905111  -462549908 -1892848003  1685771034 -2043847213
[439]   501930232 -1156819303 -1075831418   628978255  -695104444 -1024407947
[445]   458742962   943899787   905802320 -1928160751 -2083963746   -52981625
[451]   -75720932  1301114221 -1237571254   630182467   874235560  -369320823
[457]  -809152842 -1263188545   796036340  1557611365 -1976428318  1313040123
[463]  2133800448  1955347969 -1317751858 -1151110665 -1922904628   173942877
[469]  1037044602   464020147   361570392 -1929421191  1053019110      718127
[475] -1939293788  2062416981 -2101845742  1806017899  1115088304   680517105
[481] -1486162178  1982902119  -850677636  -301031603   -15107670   205393699
[487]    60417544 -1728865175  1986958614   154501279 -1744891308 -1115426491
[493]  1731048770 -1492090917   512721248  1138522593    60753454    -2733865
[499]   153239340  1288557117  -960793638   483907475  -430106696  1249400409
[505]   353937990  -810817521  -276785404  -391634379   -90892942  1357575755
[511] -1326184176   552669649 -1329340066  1621835335  1502706140 -1769291475
[517]  1511586314  1690090499   -55462552   367823945   500501366 -1062917249
[523]  -755480652  -735473883 -1867415134  1666975931  1172274368  -905140799
[529]   374114446  1187418039  1376018572  1190423581 -1487598534  1559477363
[535] -1942831336 -1754317255   678869158   655903471  -718199708  1536636949
[541]  1040579026  -229984469 -2008228752  -382847567  1215036350  1979661607
[547] -1331301572  -713436403  -179131798  1346623715 -1858390840 -2099286999
[553] -1852788266 -1682160033 -1950995180  1312824581   131431938 -1688338021
[559]   838281248 -1206599263   940915438   938231447   241250796 -1521879555
[565]   330618010  -885780141  1860572792 -1814292967 -1435109626  1963466191
[571]  1053974980  1597193717   337841714  -167974901 -1151770672  -264287855
[577]  -486848994  -874206201 -1897849700  -179055379 -1965126966   202073539
[583] -1626446808  2110012425  -382105546   926077247 -1718566284   356489957
[589]  -642667934    55470715   195986304 -1158886015 -2087641778  -687903369
[595] -1869565108  -800690211  -873280262  1926288947  1649352152  -608772615
[601]   414082406    70475951  1505513252 -1158401067  1342460562 -1640396565
[607]   686920496 -1591980687 -1056325506  -736916761  1553659388   -57620787
[613]  1624546090  -246717789  1879262088   546503657 -2006479210   197184543
[619]    -2095148  1319110853   526255810  -345685157  -404910368  2072824161
[625]  -547868754 -2085092265

$f
function (data, expr, ...) 
{
    parent <- parent.frame()
    e <- evalq(environment(), data, parent)
    eval(substitute(expr), e)
    l <- as.list(e, all.names = TRUE)
    l <- l[!vapply(l, is.null, NA, USE.NAMES = FALSE)]
    nD <- length(del <- setdiff(names(data), (nl <- names(l))))
    data[nl] <- l
    if (nD) 
        data[del] <- if (nD == 1) 
            NULL
        else vector("list", nD)
    data
}
<bytecode: 0x2287870>
<environment: namespace:base>

$.proctime00
   user  system elapsed 
  0.088   0.004   0.090 

$df0
[1] c0
<0 rows> (or 0-length row.names)

$m0
<0 x 0 matrix>

> f(,NULL)
Error in evalq(environment(), data, parent) : 
  argument "data" is missing, with no default
Calls: f -> evalq
> f(NULL,NULL)
$l0
logical(0)

$c0
character(0)

$.Random.seed
  [1]         403         624  1280795612  -169270483  -442010614  -603558397
  [7]  -222347416  1489374793   865871222  1734802815    98005428   268448037
 [13]    63650722 -1754793285 -2135275840  -779982911  -864886130  1880007095
 [19]   463784588  1271615005  1390544442  -544608653  -251475688  -326549447
 [25] -1570483546  1965989103  -784675228  1458985493  2146317266 -1103943381
 [31]   289023600  -436963407   109630910    69979943  1606475068  1441346829
 [37]  -662821782  -381252893  -311574840  1918496297   289721302   507975775
 [43]  -209037548  1665646341  -466864126   776139675  1704391200  -162823263
 [49] -1815571218   471685271  1503042540    -9316355   773770906  1304642387
 [55]  1931157624 -1378412519   965775622    19361743  1561398212  1879269365
 [61]  1049118770  1191074315   508275152 -1006204015  -639295458  1060781575
 [67]  -724498788   257177325 -1004075830   323426243   602271272  1516224009
 [73]  -111500746  -368663745  1624894580 -1946665755  -305830814  -779330437
 [79]  1251167616 -2140893311  2068936526  1520009079  -673505972   406802909
 [85]  -205928710  1641613363  1751721944   454221817 -2089418906  1121694383
 [91]  1689254180 -1984604715  -781808494  1892940523   409525552 -1134260367
 [97] -2025809282   823270631  1407180796  1755457741   783947050  -213904221
[103]   536857992  1791983081 -1888114538 -2091016673 -1860292140  -276190523
[109]  2041495746   293352795 -2071504672  1489341281 -1448769106  -885320105
[115]  -724939092   -89408579   801828698 -2096939757  1355079480 -1942710311
[121] -1985176122 -1593612913 -2123393404  -410764363  1470169330  1508641739
[127]   174702736  1980138321  1530086622  -412390457   826632540  1682639533
[133]   709842314  1047101827  -678208280  2040606153 -1020403978  2130970879
[139]  -206624972   796133541  -318747358   441089595  1414206528  1684436801
[145]   291294222  1773804855   985411596  -953215587   -93698118   880402931
[151]   403064472  -717996103 -1580438490  1582729327  2024268772   149426581
[157]   -61889198 -1132557141  -349809680 -1813747919  1851072318  -872535385
[163]  1834590908 -1060709235  1425982954  -973382045 -1401381816  -657666647
[169]  -803519146  1303503839   602197140   690968197 -1194194558 -1271974117
[175]  -424247392 -2076224735  1896824430 -1915841513 -1610038932  1514233725
[181]  -139472870   359986899   369450488  1175050137  1835887238 -1718805681
[187]  1001447748 -1453795467  -158697038  -289178229 -1653172400 -1258931439
[193] -1522652770 -1534961273 -1267430372  -124936595  -656382390  1999481667
[199]  1820822440  1447714185  1037425590  1008676543  -384359948  -164391835
[205]  1513879010  1130520571  1419877120 -1790435583  1398071502  -349144329
[211]  1191707340  1281005917  1471383674  -517178445   244983128 -1431478407
[217]  -634939162  1298079279  -404582748 -1068593835 -1989575150  -487399829
[223]  -265123152  1949564657 -1333369858 -1833961369  1592665468  1108824141
[229]  1812739754  1530423331  1368926984  1007803753  -537550314  1929636255
[235]   916334420  -336018875  1515590210  -937690917 -1562089888  1886968545
[241]   247837486 -1852321321   504493100  -235748547  -695373606  1859678355
[247]   832347320  1259788121   563279686  1350865167  -963318780 -2126433483
[253]    67416690   658812747 -1640878576  1754641105   214290014   339674951
[259]  1897819868 -1881411027  1352283914 -1756130045    25328232  1343966537
[265]  -703424394  -149416833   735173812 -1678319579  1312317090  -560725573
[271] -1034493504  -355891519  -973490802  -323184457 -1082223220  1535237405
[277] -1135244998 -1313811085   451200024  -348242119  -918059610  1437955055
[283]  1293941092  1537788181 -1049356590  -437194709  1313702256   622024369
[289]    43280574    48727591 -1688377284 -1873574899  1419929450  1823945187
[295] -1910605368  -731992791 -1950040362 -1458327713   336216596  -744100347
[301]  -688203006 -1090356581 -1882125024  -718134623  1737025518 -1000943721
[307]  1906697964  1434445565  -584855142 -1192383917  -766862472  -887384295
[313] -1562557434  -341195057   484161220   -84062475   684698418  -449863413
[319] -1822653232   950332049 -1500892386 -1805552377   973279644 -1376385555
[325]  -767768630   949698243  1967401256 -2032927479 -1197206218  1169078847
[331]  1721718644 -1669469211 -1581938846  1033855867  -735385472   -55923071
[337] -1374991794  1008629367   652208204  1751441629 -1726985734 -1345917133
[343]  -878304552 -1499013383  -873713050  2098825647    52438052  1186383061
[349] -1389400174 -2026323477  -331925456   776105585  -650171010  1516557287
[355]  1432840956   255555533 -1350477782  1949809571 -1597273976 -1586283287
[361]  1615371158  1705063711  -957801260  1006033349  1736467394  -895304613
[367]  1144812512   707471969   538500270  -741634729  2105842092  -660026691
[373]  -600640934  -579558381  -422618568 -1244129575 -1374924602  1354546319
[379]  -112901756  1649224373  -844405774  -901492021 -1011508336 -1931222447
[385]  1196120030  1118413511 -1578994596 -1768171091  1585977482 -1262180221
[391]  1720489960  -634098487  -766881290  2107842559    71275060   864597925
[397]  -311201758  1917093179 -2132955328   581670465   273260302  1729500215
[403] -1075053812 -1497127779   514050746 -1523660557  1872642456 -1398325575
[409]   -19554522 -1991549073   614665956 -1388805995   358320210  1217024939
[415]  1890561776  -679393743  1766240830 -1763188313  2144087484  -493933683
[421]  -580318998 -1418066589 -2007017656  1661963433 -1438566314  -563316001
[427]   435861396  1084982661    78032002  -591610341   384211616 -1490816479
[433] -1657433746   766905111  -462549908 -1892848003  1685771034 -2043847213
[439]   501930232 -1156819303 -1075831418   628978255  -695104444 -1024407947
[445]   458742962   943899787   905802320 -1928160751 -2083963746   -52981625
[451]   -75720932  1301114221 -1237571254   630182467   874235560  -369320823
[457]  -809152842 -1263188545   796036340  1557611365 -1976428318  1313040123
[463]  2133800448  1955347969 -1317751858 -1151110665 -1922904628   173942877
[469]  1037044602   464020147   361570392 -1929421191  1053019110      718127
[475] -1939293788  2062416981 -2101845742  1806017899  1115088304   680517105
[481] -1486162178  1982902119  -850677636  -301031603   -15107670   205393699
[487]    60417544 -1728865175  1986958614   154501279 -1744891308 -1115426491
[493]  1731048770 -1492090917   512721248  1138522593    60753454    -2733865
[499]   153239340  1288557117  -960793638   483907475  -430106696  1249400409
[505]   353937990  -810817521  -276785404  -391634379   -90892942  1357575755
[511] -1326184176   552669649 -1329340066  1621835335  1502706140 -1769291475
[517]  1511586314  1690090499   -55462552   367823945   500501366 -1062917249
[523]  -755480652  -735473883 -1867415134  1666975931  1172274368  -905140799
[529]   374114446  1187418039  1376018572  1190423581 -1487598534  1559477363
[535] -1942831336 -1754317255   678869158   655903471  -718199708  1536636949
[541]  1040579026  -229984469 -2008228752  -382847567  1215036350  1979661607
[547] -1331301572  -713436403  -179131798  1346623715 -1858390840 -2099286999
[553] -1852788266 -1682160033 -1950995180  1312824581   131431938 -1688338021
[559]   838281248 -1206599263   940915438   938231447   241250796 -1521879555
[565]   330618010  -885780141  1860572792 -1814292967 -1435109626  1963466191
[571]  1053974980  1597193717   337841714  -167974901 -1151770672  -264287855
[577]  -486848994  -874206201 -1897849700  -179055379 -1965126966   202073539
[583] -1626446808  2110012425  -382105546   926077247 -1718566284   356489957
[589]  -642667934    55470715   195986304 -1158886015 -2087641778  -687903369
[595] -1869565108  -800690211  -873280262  1926288947  1649352152  -608772615
[601]   414082406    70475951  1505513252 -1158401067  1342460562 -1640396565
[607]   686920496 -1591980687 -1056325506  -736916761  1553659388   -57620787
[613]  1624546090  -246717789  1879262088   546503657 -2006479210   197184543
[619]    -2095148  1319110853   526255810  -345685157  -404910368  2072824161
[625]  -547868754 -2085092265

$f
function (data, expr, ...) 
{
    parent <- parent.frame()
    e <- evalq(environment(), data, parent)
    eval(substitute(expr), e)
    l <- as.list(e, all.names = TRUE)
    l <- l[!vapply(l, is.null, NA, USE.NAMES = FALSE)]
    nD <- length(del <- setdiff(names(data), (nl <- names(l))))
    data[nl] <- l
    if (nD) 
        data[del] <- if (nD == 1) 
            NULL
        else vector("list", nD)
    data
}
<bytecode: 0x2287870>
<environment: namespace:base>

$.proctime00
   user  system elapsed 
  0.088   0.004   0.090 

$df0
[1] c0
<0 rows> (or 0-length row.names)

$m0
<0 x 0 matrix>

> f(list())
list()
> f(l0)
Error in evalq(environment(), data, parent) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> evalq
> f(c0)
Error in evalq(environment(), data, parent) : 
  invalid 'envir' argument of type 'character'
Calls: f -> evalq
> f(m0)
Error in evalq(environment(), data, parent) : 
  numeric 'envir' arg not of length one
Calls: f -> evalq
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
Error in evalq(environment(), data, parent) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> evalq
> f(list(),list())
list()
> f(l0,l0)
Error in evalq(environment(), data, parent) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> evalq
> f(c0,c0)
Error in evalq(environment(), data, parent) : 
  invalid 'envir' argument of type 'character'
Calls: f -> evalq
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
Error in evalq(environment(), data, parent) : 
  invalid 'envir' argument of type 'logical'
Calls: f -> evalq
> 
> ##  write  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("write", pos = 'package:base')
> f()
Error in cat(x, file = file, sep = c(rep.int(sep, ncolumns - 1), "\n"),  : 
  argument "x" is missing, with no default
Calls: f -> cat
> f(NULL)
> f(,NULL)
Error in cat(x, file = file, sep = c(rep.int(sep, ncolumns - 1), "\n"),  : 
  argument "x" is missing, with no default
Calls: f -> cat
> f(NULL,NULL)
Error in cat(x, file = file, sep = c(rep.int(sep, ncolumns - 1), "\n"),  : 
  invalid connection
Calls: f -> cat
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
Error in cat(list(...), file, sep, fill, labels, append) : 
  argument 1 (type 'list') cannot be handled by 'cat'
Calls: f -> cat
> f(FALSE)
> f(list(),list())
Error in cat(x, file = file, sep = c(rep.int(sep, ncolumns - 1), "\n"),  : 
  invalid connection
Calls: f -> cat
> f(l0,l0)
Error in cat(x, file = file, sep = c(rep.int(sep, ncolumns - 1), "\n"),  : 
  invalid connection
Calls: f -> cat
> f(c0,c0)
Error in if (file == "") file <- stdout() else if (substring(file, 1L,  : 
  argument is of length zero
Calls: f -> cat
> f(df0,df0)
Error in cat(x, file = file, sep = c(rep.int(sep, ncolumns - 1), "\n"),  : 
  invalid connection
Calls: f -> cat
> f(FALSE,FALSE)
Error in cat(x, file = file, sep = c(rep.int(sep, ncolumns - 1), "\n"),  : 
  cannot write to this connection
Calls: f -> cat
> 
> ##  write.dcf  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("write.dcf", pos = 'package:base')
> f()
Error in is.data.frame(x) : argument "x" is missing, with no default
Calls: f -> is.data.frame
> f(NULL)
> f(,NULL)
Error in if (file == "") file <- stdout() else if (is.character(file)) { : 
  argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (file == "") file <- stdout() else if (is.character(file)) { : 
  argument is of length zero
Calls: f
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
> f(FALSE)
x: FALSE
> f(list(),list())
Error in if (file == "") file <- stdout() else if (is.character(file)) { : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (file == "") file <- stdout() else if (is.character(file)) { : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (file == "") file <- stdout() else if (is.character(file)) { : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'file' must be a character string or connection
> 
> ##  writeBin  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("writeBin", pos = 'package:base')
> f()
Error in f() : argument "object" is missing, with no default
> f(NULL)
Error in f(NULL) : can only write vector objects
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : can only write vector objects
> f(list())
Error in f(list()) : can only write vector objects
> f(l0)
Error in f(l0) : argument "con" is missing, with no default
> f(c0)
Error in f(c0) : argument "con" is missing, with no default
> f(m0)
Error in f(m0) : can only write vector objects
> f(df0)
Error in f(df0) : can only write vector objects
> f(FALSE)
Error in f(FALSE) : argument "con" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : can only write vector objects
> f(l0,l0)
Error in f(l0, l0) : invalid connection
> f(c0,c0)
Error in file(con, "wb") : invalid 'description' argument
Calls: f -> file
> f(df0,df0)
Error in f(df0, df0) : can only write vector objects
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : can only write to a binary connection
> 
> ##  writeChar  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("writeChar", pos = 'package:base')
> f()
Error in f() : argument "object" is missing, with no default
> f(NULL)
Error in f(NULL) : can only write character objects
> f(,NULL)
Error in f(, NULL) : argument "object" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : can only write character objects
> f(list())
Error in f(list()) : can only write character objects
> f(l0)
Error in f(l0) : can only write character objects
> f(c0)
Error in f(c0) : argument "con" is missing, with no default
> f(m0)
Error in f(m0) : can only write character objects
> f(df0)
Error in f(df0) : can only write character objects
> f(FALSE)
Error in f(FALSE) : can only write character objects
> f(list(),list())
Error in f(list(), list()) : can only write character objects
> f(l0,l0)
Error in f(l0, l0) : can only write character objects
> f(c0,c0)
Error in file(con, "wb") : invalid 'description' argument
Calls: f -> file
> f(df0,df0)
Error in f(df0, df0) : can only write character objects
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : can only write character objects
> 
> ##  writeLines  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("writeLines", pos = 'package:base')
> f()
Error in f() : argument "text" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'text' argument
> f(,NULL)
Error in f(, NULL) : argument "text" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'text' argument
> f(list())
Error in f(list()) : invalid 'text' argument
> f(l0)
Error in f(l0) : invalid 'text' argument
> f(c0)
> f(m0)
Error in f(m0) : invalid 'text' argument
> f(df0)
Error in f(df0) : invalid 'text' argument
> f(FALSE)
Error in f(FALSE) : invalid 'text' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'text' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'text' argument
> f(c0,c0)
Error in file(con, "w") : invalid 'description' argument
Calls: f -> file
> f(df0,df0)
Error in f(df0, df0) : invalid 'text' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'text' argument
> 
> ##  xor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xor", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "y" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in x | y : 
  operations are possible only for numeric, logical or complex types
Calls: f
> f(list())
Error in f(list()) : argument "y" is missing, with no default
> f(l0)
Error in f(l0) : argument "y" is missing, with no default
> f(c0)
Error in f(c0) : argument "y" is missing, with no default
> f(m0)
Error in f(m0) : argument "y" is missing, with no default
> f(df0)
Error in f(df0) : argument "y" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "y" is missing, with no default
> f(list(),list())
Error in x | y : 
  operations are possible only for numeric, logical or complex types
Calls: f
> f(l0,l0)
logical(0)
> f(c0,c0)
Error in x | y : 
  operations are possible only for numeric, logical or complex types
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '|' not meaningful for factors
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  xor.hexmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xor.hexmode", pos = 'package:base')
> f()
Error in as.hexmode(a) : argument "a" is missing, with no default
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> f(NULL)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> f(,NULL)
Error in as.hexmode(a) : argument "a" is missing, with no default
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> f(NULL,NULL)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> f(list())
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> f(l0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> f(c0)
Error in as.hexmode(b) : argument "b" is missing, with no default
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> f(m0)
Error in as.hexmode(b) : argument "b" is missing, with no default
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> f(df0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> f(FALSE)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> f(list(),list())
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> f(l0,l0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> f(c0,c0)
character(0)
> f(df0,df0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> f(FALSE,FALSE)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwXor -> as.hexmode
> 
> ##  xor.octmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xor.octmode", pos = 'package:base')
> f()
Error in as.octmode(a) : argument "a" is missing, with no default
Calls: f -> as.octmode -> bitwXor -> as.octmode
> f(NULL)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwXor -> as.octmode
> f(,NULL)
Error in as.octmode(a) : argument "a" is missing, with no default
Calls: f -> as.octmode -> bitwXor -> as.octmode
> f(NULL,NULL)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwXor -> as.octmode
> f(list())
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwXor -> as.octmode
> f(l0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwXor -> as.octmode
> f(c0)
Error in as.octmode(b) : argument "b" is missing, with no default
Calls: f -> as.octmode -> bitwXor -> as.octmode
> f(m0)
Error in as.octmode(b) : argument "b" is missing, with no default
Calls: f -> as.octmode -> bitwXor -> as.octmode
> f(df0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwXor -> as.octmode
> f(FALSE)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwXor -> as.octmode
> f(list(),list())
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwXor -> as.octmode
> f(l0,l0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwXor -> as.octmode
> f(c0,c0)
character(0)
> f(df0,df0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwXor -> as.octmode
> f(FALSE,FALSE)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwXor -> as.octmode
> 
> ##  xpdrows.data.frame  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xpdrows.data.frame", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "old.rows" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "x" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "new.rows" is missing, with no default
> f(list())
Error in f(list()) : argument "old.rows" is missing, with no default
> f(l0)
Error in f(l0) : argument "old.rows" is missing, with no default
> f(c0)
Error in f(c0) : argument "old.rows" is missing, with no default
> f(m0)
Error in f(m0) : argument "old.rows" is missing, with no default
> f(df0)
Error in f(df0) : argument "old.rows" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "old.rows" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : 
  argument "new.rows" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "new.rows" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "new.rows" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "new.rows" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  argument "new.rows" is missing, with no default
> 
> ##  xtfrm  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xtfrm", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to 'xtfrm' which requires 1
> f(NULL)
integer(0)
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 2 arguments passed to 'xtfrm' which requires 1
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
integer(0)
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : 
  2 arguments passed to 'xtfrm' which requires 1
> f(l0,l0)
Error in f(l0, l0) : 2 arguments passed to 'xtfrm' which requires 1
> f(c0,c0)
Error in f(c0, c0) : 2 arguments passed to 'xtfrm' which requires 1
> f(df0,df0)
Error in f(df0, df0) : 2 arguments passed to 'xtfrm' which requires 1
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 2 arguments passed to 'xtfrm' which requires 1
> 
> ##  xtfrm.AsIs  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xtfrm.AsIs", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
Error in NextMethod("xtfrm") : object not specified
Calls: f -> NextMethod
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in NextMethod("xtfrm") : object not specified
Calls: f -> NextMethod
> f(l0)
Error in NextMethod("xtfrm") : object not specified
Calls: f -> NextMethod
> f(c0)
Error in NextMethod("xtfrm") : object not specified
Calls: f -> NextMethod
> f(m0)
Error in NextMethod("xtfrm") : object not specified
Calls: f -> NextMethod
> f(df0)
integer(0)
> f(FALSE)
Error in NextMethod("xtfrm") : object not specified
Calls: f -> NextMethod
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  xtfrm.Date  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xtfrm.Date", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
numeric(0)
> f(l0)
numeric(0)
> f(c0)
numeric(0)
> f(m0)
numeric(0)
> f(df0)
[1] NA
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  xtfrm.POSIXct  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xtfrm.POSIXct", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
numeric(0)
> f(l0)
numeric(0)
> f(c0)
numeric(0)
> f(m0)
numeric(0)
> f(df0)
[1] NA
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  xtfrm.POSIXlt  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xtfrm.POSIXlt", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
numeric(0)
> f(l0)
numeric(0)
> f(c0)
numeric(0)
> f(m0)
numeric(0)
> f(df0)
[1] NA
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  xtfrm.Surv  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xtfrm.Surv", pos = 'package:base')
> f()
Error in ncol(x) : argument "x" is missing, with no default
Calls: f -> order -> ncol
> f(NULL)
Error in if (ncol(x) == 2L) order(x[, 1L], x[, 2L]) else order(x[, 1L],  : 
  argument is of length zero
Calls: f -> order
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in if (ncol(x) == 2L) order(x[, 1L], x[, 2L]) else order(x[, 1L],  : 
  argument is of length zero
Calls: f -> order
> f(l0)
Error in if (ncol(x) == 2L) order(x[, 1L], x[, 2L]) else order(x[, 1L],  : 
  argument is of length zero
Calls: f -> order
> f(c0)
Error in if (ncol(x) == 2L) order(x[, 1L], x[, 2L]) else order(x[, 1L],  : 
  argument is of length zero
Calls: f -> order
> f(m0)
Error in x[, 1L] : subscript out of bounds
Calls: f -> order -> order
> f(df0)
Error in `[.data.frame`(x, , 2L) : undefined columns selected
Calls: f -> order -> order -> [ -> [.data.frame
> f(FALSE)
Error in if (ncol(x) == 2L) order(x[, 1L], x[, 2L]) else order(x[, 1L],  : 
  argument is of length zero
Calls: f -> order
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  xtfrm.default  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xtfrm.default", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
integer(0)
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
integer(0)
> f(FALSE)
[1] 1
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  xtfrm.difftime  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xtfrm.difftime", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
numeric(0)
> f(l0)
numeric(0)
> f(c0)
numeric(0)
> f(m0)
numeric(0)
> f(df0)
[1] NA
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  xtfrm.factor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xtfrm.factor", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
integer(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
integer(0)
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
integer(0)
> f(df0)
[1] NA
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  xtfrm.numeric_version  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xtfrm.numeric_version", pos = 'package:base')
> f()
Error in is.numeric_version(x) : argument "x" is missing, with no default
Calls: f -> .encode_numeric_version -> is.numeric_version
> f(NULL)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(l0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(c0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(m0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(df0)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(FALSE)
Error in .encode_numeric_version(x) : wrong class
Calls: f -> .encode_numeric_version
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  xzfile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("xzfile", pos = 'package:base')
> f()
Error in f() : argument "description" is missing, with no default
> f(NULL)
Error in f(NULL) : invalid 'description' argument
> f(,NULL)
Error in f(, NULL) : argument "description" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'description' argument
> f(list())
Error in f(list()) : invalid 'description' argument
> f(l0)
Error in f(l0) : invalid 'description' argument
> f(c0)
Error in f(c0) : invalid 'description' argument
> f(m0)
Error in f(m0) : invalid 'description' argument
> f(df0)
Error in f(df0) : invalid 'description' argument
> f(FALSE)
Error in f(FALSE) : invalid 'description' argument
> f(list(),list())
Error in f(list(), list()) : invalid 'description' argument
> f(l0,l0)
Error in f(l0, l0) : invalid 'description' argument
> f(c0,c0)
Error in f(c0, c0) : invalid 'description' argument
> f(df0,df0)
Error in f(df0, df0) : invalid 'description' argument
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid 'description' argument
> 
> ##  zapsmall  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("zapsmall", pos = 'package:base')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
Warning message:
In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in f(, NULL) : invalid 'digits'
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'digits'
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : invalid 'digits'
> f(l0,l0)
Error in f(l0, l0) : invalid 'digits'
> f(c0,c0)
Error in f(c0, c0) : invalid 'digits'
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[1] 0
> 
> ##  {  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("{", pos = 'package:base')
> f()
NULL
> f(NULL)
NULL
> f(,NULL)
NULL
> f(NULL,NULL)
NULL
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE)
[1] FALSE
> f(list(),list())
list()
> f(l0,l0)
logical(0)
> f(c0,c0)
character(0)
> f(df0,df0)
[1] c0
<0 rows> (or 0-length row.names)
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  |  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("|", pos = 'package:base')
> f()
Error in f() : 0 arguments passed to '|' which requires 2
> f(NULL)
Error in f(NULL) : 1 argument passed to '|' which requires 2
> f(,NULL)
Error in f(, NULL) : argument 1 is empty
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  operations are possible only for numeric, logical or complex types
> f(list())
Error in f(list()) : 1 argument passed to '|' which requires 2
> f(l0)
Error in f(l0) : 1 argument passed to '|' which requires 2
> f(c0)
Error in f(c0) : 1 argument passed to '|' which requires 2
> f(m0)
Error in f(m0) : 1 argument passed to '|' which requires 2
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left) : '|' not meaningful for factors
> f(FALSE)
Error in f(FALSE) : 1 argument passed to '|' which requires 2
> f(list(),list())
Error in f(list(), list()) : 
  operations are possible only for numeric, logical or complex types
> f(l0,l0)
logical(0)
> f(c0,c0)
Error in f(c0, c0) : 
  operations are possible only for numeric, logical or complex types
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '|' not meaningful for factors
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  |.hexmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("|.hexmode", pos = 'package:base')
> f()
Error in as.hexmode(a) : argument "a" is missing, with no default
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> f(NULL)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> f(,NULL)
Error in as.hexmode(a) : argument "a" is missing, with no default
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> f(NULL,NULL)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> f(list())
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> f(l0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> f(c0)
Error in as.hexmode(b) : argument "b" is missing, with no default
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> f(m0)
Error in as.hexmode(b) : argument "b" is missing, with no default
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> f(df0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> f(FALSE)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> f(list(),list())
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> f(l0,l0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> f(c0,c0)
character(0)
> f(df0,df0)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> f(FALSE,FALSE)
Error in as.hexmode(a) : 'x' cannot be coerced to class "hexmode"
Calls: f -> as.hexmode -> bitwOr -> as.hexmode
> 
> ##  |.octmode  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("|.octmode", pos = 'package:base')
> f()
Error in as.octmode(a) : argument "a" is missing, with no default
Calls: f -> as.octmode -> bitwOr -> as.octmode
> f(NULL)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwOr -> as.octmode
> f(,NULL)
Error in as.octmode(a) : argument "a" is missing, with no default
Calls: f -> as.octmode -> bitwOr -> as.octmode
> f(NULL,NULL)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwOr -> as.octmode
> f(list())
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwOr -> as.octmode
> f(l0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwOr -> as.octmode
> f(c0)
Error in as.octmode(b) : argument "b" is missing, with no default
Calls: f -> as.octmode -> bitwOr -> as.octmode
> f(m0)
Error in as.octmode(b) : argument "b" is missing, with no default
Calls: f -> as.octmode -> bitwOr -> as.octmode
> f(df0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwOr -> as.octmode
> f(FALSE)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwOr -> as.octmode
> f(list(),list())
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwOr -> as.octmode
> f(l0,l0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwOr -> as.octmode
> f(c0,c0)
character(0)
> f(df0,df0)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwOr -> as.octmode
> f(FALSE,FALSE)
Error in as.octmode(a) : 'x' cannot be coerced to class "octmode"
Calls: f -> as.octmode -> bitwOr -> as.octmode
> 
> ##  ||  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("||", pos = 'package:base')
> f()
Error: '||' operator requires 2 arguments
> f(NULL)
Error: '||' operator requires 2 arguments
> f(,NULL)
Error in f(, NULL) : invalid 'x' type in 'x || y'
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'x' type in 'x || y'
> f(list())
Error: '||' operator requires 2 arguments
> f(l0)
Error: '||' operator requires 2 arguments
> f(c0)
Error: '||' operator requires 2 arguments
> f(m0)
Error: '||' operator requires 2 arguments
> f(df0)
Error: '||' operator requires 2 arguments
> f(FALSE)
Error: '||' operator requires 2 arguments
> f(list(),list())
Error in f(list(), list()) : invalid 'x' type in 'x || y'
> f(l0,l0)
[1] NA
> f(c0,c0)
Error in f(c0, c0) : invalid 'x' type in 'x || y'
> f(df0,df0)
Error in f(df0, df0) : invalid 'x' type in 'x || y'
> f(FALSE,FALSE)
[1] FALSE
> 
> ##  ~  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("~", pos = 'package:base')
> f()
f()
> f(NULL)
f(NULL)
> f(,NULL)
f(, NULL)
> f(NULL,NULL)
f(NULL, NULL)
> f(list())
f(list())
> f(l0)
f(l0)
> f(c0)
f(c0)
> f(m0)
f(m0)
> f(df0)
f(df0)
> f(FALSE)
f(FALSE)
> f(list(),list())
f(list(), list())
> f(l0,l0)
f(l0, l0)
> f(c0,c0)
f(c0, c0)
> f(df0,df0)
f(df0, df0)
> f(FALSE,FALSE)
f(FALSE, FALSE)
> 
> ##__________
> 
> ### Package compiler
> ###         ~~~~~~~~
> library( compiler )
> 
> ##  cmpfile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cmpfile", pos = 'package:compiler')
> f()
Error in sub("\\.[a-zA-Z0-9]$", "", infile) : 
  argument "infile" is missing, with no default
Calls: f -> sub
> f(NULL)
Error in if (infile == outfile) stop("input and output file names are the same") : 
  argument is of length zero
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "infile" is missing, with no default
> f(NULL,NULL)
Error in if (infile == outfile) stop("input and output file names are the same") : 
  argument is of length zero
Calls: f
> f(list())
Error in if (infile == outfile) stop("input and output file names are the same") : 
  argument is of length zero
Calls: f
> f(l0)
Error in if (infile == outfile) stop("input and output file names are the same") : 
  argument is of length zero
Calls: f
> f(c0)
Error in if (infile == outfile) stop("input and output file names are the same") : 
  argument is of length zero
Calls: f
> f(m0)
Error in if (infile == outfile) stop("input and output file names are the same") : 
  argument is of length zero
Calls: f
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE)
Error in parse(infile) : 'file' must be a character string or connection
Calls: f -> parse
> f(list(),list())
Error in if (infile == outfile) stop("input and output file names are the same") : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (infile == outfile) stop("input and output file names are the same") : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (infile == outfile) stop("input and output file names are the same") : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : input and output file names are the same
> 
> ##  cmpfun  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cmpfun", pos = 'package:compiler')
> f()
Error in f() : argument "f" is missing, with no default
> f(NULL)
Error in f(NULL) : cannot compile a non-function
> f(,NULL)
Error in f(, NULL) : argument "f" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : cannot compile a non-function
> f(list())
Error in f(list()) : cannot compile a non-function
> f(l0)
Error in f(l0) : cannot compile a non-function
> f(c0)
Error in f(c0) : cannot compile a non-function
> f(m0)
Error in f(m0) : cannot compile a non-function
> f(df0)
Error in f(df0) : cannot compile a non-function
> f(FALSE)
Error in f(FALSE) : cannot compile a non-function
> f(list(),list())
Error in f(list(), list()) : cannot compile a non-function
> f(l0,l0)
Error in f(l0, l0) : cannot compile a non-function
> f(c0,c0)
Error in f(c0, c0) : cannot compile a non-function
> f(df0,df0)
Error in f(df0, df0) : cannot compile a non-function
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : cannot compile a non-function
> 
> ##  compile  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("compile", pos = 'package:compiler')
> f()
Error in lapply(elist, findLocals1, shadowed) : 
  argument "e" is missing, with no default
Calls: f ... findLocalsList -> findLocalsList1 -> unique -> unlist -> lapply
> f(NULL)
<bytecode: 0x2d6a5d0>
> f(,NULL)
Error in parent.env(env) : argument is not an environment
Calls: f -> makeCenv -> structure -> frameTypes -> parent.env
> f(NULL,NULL)
Error in parent.env(env) : argument is not an environment
Calls: f -> makeCenv -> structure -> frameTypes -> parent.env
> f(list())
<bytecode: 0x32fbd28>
> f(l0)
<bytecode: 0x32e2830>
> f(c0)
<bytecode: 0x2eb7a80>
> f(m0)
<bytecode: 0x3019248>
> f(df0)
<bytecode: 0x356e818>
> f(FALSE)
<bytecode: 0x3446d68>
> f(list(),list())
Error in parent.env(env) : argument is not an environment
Calls: f -> makeCenv -> structure -> frameTypes -> parent.env
> f(l0,l0)
Error in parent.env(env) : argument is not an environment
Calls: f -> makeCenv -> structure -> frameTypes -> parent.env
> f(c0,c0)
Error in parent.env(env) : argument is not an environment
Calls: f -> makeCenv -> structure -> frameTypes -> parent.env
> f(df0,df0)
Error in parent.env(env) : argument is not an environment
Calls: f -> makeCenv -> structure -> frameTypes -> parent.env
> f(FALSE,FALSE)
Error in parent.env(env) : argument is not an environment
Calls: f -> makeCenv -> structure -> frameTypes -> parent.env
> 
> ##  compilePKGS  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("compilePKGS", pos = 'package:compiler')
> f()
Error in f() : argument "enable" is missing, with no default
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] NA
> f(l0)
[1] NA
> f(c0)
[1] NA
> f(m0)
[1] NA
> f(df0)
[1] NA
> f(FALSE)
[1] NA
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  disassemble  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("disassemble", pos = 'package:compiler')
> f()
Error in f() : argument "code" is missing, with no default
> f(NULL)
Error in disassemble(code) : argument is not a byte code object
Calls: f -> dput -> disasm -> bcDecode
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in disassemble(code) : argument is not a byte code object
Calls: f -> dput -> disasm -> bcDecode
> f(l0)
Error in disassemble(code) : argument is not a byte code object
Calls: f -> dput -> disasm -> bcDecode
> f(c0)
Error in disassemble(code) : argument is not a byte code object
Calls: f -> dput -> disasm -> bcDecode
> f(m0)
Error in disassemble(code) : argument is not a byte code object
Calls: f -> dput -> disasm -> bcDecode
> f(df0)
Error in disassemble(code) : argument is not a byte code object
Calls: f -> dput -> disasm -> bcDecode
> f(FALSE)
Error in disassemble(code) : argument is not a byte code object
Calls: f -> dput -> disasm -> bcDecode
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  enableJIT  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("enableJIT", pos = 'package:compiler')
> f()
Error in f() : argument "level" is missing, with no default
> f(NULL)
[1] 0
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] 0
> f(l0)
[1] 0
> f(c0)
[1] 0
> f(m0)
[1] 0
> f(df0)
[1] 0
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  getCompilerOption  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("getCompilerOption", pos = 'package:compiler')
> f()
Error in match(x, table, nomatch = 0L) : 
  argument "name" is missing, with no default
Calls: f -> %in% -> match
> f(NULL)
Error in if (name %in% names(options)) options[[name]] else get(name,  : 
  argument is of length zero
Calls: f
> f(,NULL)
Error in match(x, table, nomatch = 0L) : 
  argument "name" is missing, with no default
Calls: f -> %in% -> match
> f(NULL,NULL)
Error in if (name %in% names(options)) options[[name]] else get(name,  : 
  argument is of length zero
Calls: f
> f(list())
Error in if (name %in% names(options)) options[[name]] else get(name,  : 
  argument is of length zero
Calls: f
> f(l0)
Error in if (name %in% names(options)) options[[name]] else get(name,  : 
  argument is of length zero
Calls: f
> f(c0)
Error in if (name %in% names(options)) options[[name]] else get(name,  : 
  argument is of length zero
Calls: f
> f(m0)
Error in if (name %in% names(options)) options[[name]] else get(name,  : 
  argument is of length zero
Calls: f
> f(df0)
Error in get(name, compilerOptions) : invalid first argument
Calls: f -> get
> f(FALSE)
Error in get(name, compilerOptions) : invalid first argument
Calls: f -> get
> f(list(),list())
Error in if (name %in% names(options)) options[[name]] else get(name,  : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (name %in% names(options)) options[[name]] else get(name,  : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (name %in% names(options)) options[[name]] else get(name,  : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in get(name, compilerOptions) : invalid first argument
Calls: f -> get
> f(FALSE,FALSE)
Error in get(name, compilerOptions) : invalid first argument
Calls: f -> get
> 
> ##  loadcmp  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("loadcmp", pos = 'package:compiler')
> f()
Error in f() : argument "file" is missing, with no default
> f(NULL)
Error in f(NULL) : character(0)
> f(,NULL)
Error in f(, NULL) : argument "file" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : character(0)
> f(list())
Error in f(list()) : character(0)
> f(l0)
Error in f(l0) : character(0)
> f(c0)
Error in if (!(is.character(file) && file.exists(file))) stop(gettextf("file '%s' does not exist",  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(m0)
Error in f(m0) : character(0)
> f(df0)
Error in f(df0) : file 'integer(0)' does not exist
> f(FALSE)
Error in f(FALSE) : file 'FALSE' does not exist
> f(list(),list())
Error in f(list(), list()) : character(0)
> f(l0,l0)
Error in f(l0, l0) : character(0)
> f(c0,c0)
Error in if (!(is.character(file) && file.exists(file))) stop(gettextf("file '%s' does not exist",  : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0,df0)
Error in f(df0, df0) : file 'integer(0)' does not exist
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : file 'FALSE' does not exist
> 
> ##  setCompilerOptions  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("setCompilerOptions", pos = 'package:compiler')
> f()
> f(NULL)
> f(,NULL)
> f(NULL,NULL)
> f(list())
> f(l0)
> f(c0)
> f(m0)
> f(df0)
> f(FALSE)
> f(list(),list())
> f(l0,l0)
> f(c0,c0)
> f(df0,df0)
Warning messages:
1: closing unused connection 4 (FALSE:FALSE) 
2: closing unused connection 3 (integer(0):integer(0)) 
> f(FALSE,FALSE)
> detach(pos=2)
> 
> ##__________
> 
> ### Package datasets
> ###         ~~~~~~~~
> 
> ##__________
> 
> ### Package grDevices
> ###         ~~~~~~~~~
> 
> ##  CIDFont  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("CIDFont", pos = 'package:grDevices')
> f()
Error in f() : argument "family" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "cmap" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "family" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  argument "cmapEncoding" is missing, with no default
> f(list())
Error in f(list()) : argument "cmap" is missing, with no default
> f(l0)
Error in f(l0) : argument "cmap" is missing, with no default
> f(c0)
Error in f(c0) : argument "cmap" is missing, with no default
> f(m0)
Error in f(m0) : argument "cmap" is missing, with no default
> f(df0)
Error in f(df0) : argument "cmap" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "cmap" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : 
  argument "cmapEncoding" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "cmapEncoding" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "cmapEncoding" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : 
  argument "cmapEncoding" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  argument "cmapEncoding" is missing, with no default
> 
> ##  Type1Font  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("Type1Font", pos = 'package:grDevices')
> f()
Error in f() : argument "family" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "metrics" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "family" is missing, with no default
> f(NULL,NULL)
Error in checkFont.Type1Font(font) : 
  invalid family name in font specification
Calls: f -> checkFont -> checkFont.Type1Font
> f(list())
Error in f(list()) : argument "metrics" is missing, with no default
> f(l0)
Error in f(l0) : argument "metrics" is missing, with no default
> f(c0)
Error in f(c0) : argument "metrics" is missing, with no default
> f(m0)
Error in f(m0) : argument "metrics" is missing, with no default
> f(df0)
Error in f(df0) : argument "metrics" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "metrics" is missing, with no default
> f(list(),list())
Error in checkFont.Type1Font(font) : 
  invalid family name in font specification
Calls: f -> checkFont -> checkFont.Type1Font
> f(l0,l0)
Error in checkFont.Type1Font(font) : 
  invalid family name in font specification
Calls: f -> checkFont -> checkFont.Type1Font
> f(c0,c0)
Error in checkFont.Type1Font(font) : 
  invalid metric information in font specification
Calls: f -> checkFont -> checkFont.Type1Font
> f(df0,df0)
Error in checkFont.Type1Font(font) : 
  invalid family name in font specification
Calls: f -> checkFont -> checkFont.Type1Font
> f(FALSE,FALSE)
Error in checkFont.Type1Font(font) : 
  invalid family name in font specification
Calls: f -> checkFont -> checkFont.Type1Font
> 
> ##  X11.options  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("X11.options", pos = 'package:grDevices')
> f()
$display
[1] ""

$width
[1] NA

$height
[1] NA

$pointsize
[1] 12

$bg
[1] "transparent"

$canvas
[1] "white"

$gamma
[1] 1

$colortype
[1] "true"

$maxcubesize
[1] 256

$fonts
[1] "-adobe-helvetica-%s-%s-*-*-%d-*-*-*-*-*-*-*"
[2] "-adobe-symbol-medium-r-*-*-%d-*-*-*-*-*-*-*"

$family
[1] "sans"

$xpos
[1] NA

$ypos
[1] NA

$title
[1] ""

$type
[1] "Xlib"

$antialias
[1] "default"

> f(NULL)
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(NULL)' (need named args)
Calls: f -> check.options
> f(,NULL)
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(, NULL)' (need named args)
Calls: f -> check.options
> f(NULL,NULL)
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(NULL, NULL)' (need named args)
Calls: f -> check.options
> f(list())
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(list())' (need named args)
Calls: f -> check.options
> f(l0)
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(l0)' (need named args)
Calls: f -> check.options
> f(c0)
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(c0)' (need named args)
Calls: f -> check.options
> f(m0)
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(m0)' (need named args)
Calls: f -> check.options
> f(df0)
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(df0)' (need named args)
Calls: f -> check.options
> f(FALSE)
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(FALSE)' (need named args)
Calls: f -> check.options
> f(list(),list())
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(list(), list())' (need named args)
Calls: f -> check.options
> f(l0,l0)
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(l0, l0)' (need named args)
Calls: f -> check.options
> f(c0,c0)
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(c0, c0)' (need named args)
Calls: f -> check.options
> f(df0,df0)
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(df0, df0)' (need named args)
Calls: f -> check.options
> f(FALSE,FALSE)
Error in check.options(new, name.opt = ".X11.Options", envir = .X11env,  : 
  invalid arguments in 'f(FALSE, FALSE)' (need named args)
Calls: f -> check.options
> 
> ##  X11Font  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("X11Font", pos = 'package:grDevices')
> f()
Error in checkX11Font(font) : argument "font" is missing, with no default
Calls: f -> checkX11Font
> f(NULL)
Error in X11FontError("must be a string") : 
  invalid X11 font specification: must be a string
Calls: f -> checkX11Font -> X11FontError
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in X11FontError("must be a string") : 
  invalid X11 font specification: must be a string
Calls: f -> checkX11Font -> X11FontError
> f(l0)
Error in X11FontError("must be a string") : 
  invalid X11 font specification: must be a string
Calls: f -> checkX11Font -> X11FontError
> f(c0)
Error in X11FontError("incorrect format") : 
  invalid X11 font specification: incorrect format
Calls: f -> checkX11Font -> X11FontError
> f(m0)
Error in X11FontError("must be a string") : 
  invalid X11 font specification: must be a string
Calls: f -> checkX11Font -> X11FontError
> f(df0)
Error in X11FontError("must be a string") : 
  invalid X11 font specification: must be a string
Calls: f -> checkX11Font -> X11FontError
> f(FALSE)
Error in X11FontError("must be a string") : 
  invalid X11 font specification: must be a string
Calls: f -> checkX11Font -> X11FontError
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  X11Fonts  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("X11Fonts", pos = 'package:grDevices')
> f()
$serif
[1] "-*-times-%s-%s-*-*-%d-*-*-*-*-*-*-*"

$sans
[1] "-*-helvetica-%s-%s-*-*-%d-*-*-*-*-*-*-*"

$mono
[1] "-*-courier-%s-%s-*-*-%d-*-*-*-*-*-*-*"

$Times
[1] "-adobe-times-%s-%s-*-*-%d-*-*-*-*-*-*-*"

$Helvetica
[1] "-adobe-helvetica-%s-%s-*-*-%d-*-*-*-*-*-*-*"

$CyrTimes
[1] "-cronyx-times-%s-%s-*-*-%d-*-*-*-*-*-*-*"

$CyrHelvetica
[1] "-cronyx-helvetica-%s-%s-*-*-%d-*-*-*-*-*-*-*"

$Arial
[1] "-monotype-arial-%s-%s-*-*-%d-*-*-*-*-*-*-*"

$Mincho
[1] "-*-mincho-%s-%s-*-*-%d-*-*-*-*-*-*-*"

> f(NULL)
Error in f(NULL) : invalid arguments in 'X11Fonts' (must be font names)
> f(,NULL)
Error in f(, NULL) : invalid arguments in 'X11Fonts' (must be font names)
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  invalid arguments in 'X11Fonts' (must be font names)
> f(list())
Error in f(list()) : invalid arguments in 'X11Fonts' (must be font names)
> f(l0)
Error in f(l0) : invalid arguments in 'X11Fonts' (must be font names)
> f(c0)
named list()
> f(m0)
Error in f(m0) : invalid arguments in 'X11Fonts' (must be font names)
> f(df0)
Error in f(df0) : invalid arguments in 'X11Fonts' (must be font names)
> f(FALSE)
Error in f(FALSE) : invalid arguments in 'X11Fonts' (must be font names)
> f(list(),list())
Error in f(list(), list()) : 
  invalid arguments in 'X11Fonts' (must be font names)
> f(l0,l0)
Error in f(l0, l0) : invalid arguments in 'X11Fonts' (must be font names)
> f(c0,c0)
named list()
> f(df0,df0)
Error in f(df0, df0) : 
  invalid arguments in 'X11Fonts' (must be font names)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  invalid arguments in 'X11Fonts' (must be font names)
> 
> ##  adjustcolor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("adjustcolor", pos = 'package:grDevices')
> f()
Error in match(x, table, nomatch = 0L) : 
  argument "col" is missing, with no default
Calls: f -> col2rgb -> %in% -> match
> f(NULL)
character(0)
Warning message:
In matrix(offset, nrow = 4L, ncol = ncol(x)) :
  data length exceeds size of matrix
> f(,NULL)
Error: d == c(4L, 4L) are not all TRUE
> f(NULL,NULL)
Error: d == c(4L, 4L) are not all TRUE
> f(list())
character(0)
Warning message:
In matrix(offset, nrow = 4L, ncol = ncol(x)) :
  data length exceeds size of matrix
> f(l0)
character(0)
Warning message:
In matrix(offset, nrow = 4L, ncol = ncol(x)) :
  data length exceeds size of matrix
> f(c0)
character(0)
Warning message:
In matrix(offset, nrow = 4L, ncol = ncol(x)) :
  data length exceeds size of matrix
> f(m0)
character(0)
Warning message:
In matrix(offset, nrow = 4L, ncol = ncol(x)) :
  data length exceeds size of matrix
> f(df0)
Error in col2rgb(col, alpha = TRUE) : invalid color name 'integer(0)'
Calls: f -> col2rgb
> f(FALSE)
Error in col2rgb(col, alpha = TRUE) : invalid color name 'FALSE'
Calls: f -> col2rgb
> f(list(),list())
Error: d == c(4L, 4L) are not all TRUE
> f(l0,l0)
Error: d == c(4L, 4L) are not all TRUE
> f(c0,c0)
Error: d == c(4L, 4L) are not all TRUE
> f(df0,df0)
Error in col2rgb(col, alpha = TRUE) : invalid color name 'integer(0)'
Calls: f -> col2rgb
> f(FALSE,FALSE)
Error in col2rgb(col, alpha = TRUE) : invalid color name 'FALSE'
Calls: f -> col2rgb
> 
> ##  as.graphicsAnnot  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.graphicsAnnot", pos = 'package:grDevices')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
NULL
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
list()
> f(l0)
logical(0)
> f(c0)
character(0)
> f(m0)
<0 x 0 matrix>
> f(df0)
[1] "integer(0)"
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  as.raster  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("as.raster", pos = 'package:grDevices')
> f()
Error in UseMethod("as.raster") : 
  no applicable method for 'as.raster' applied to an object of class "NULL"
Calls: f
> f(NULL)
Error in UseMethod("as.raster") : 
  no applicable method for 'as.raster' applied to an object of class "NULL"
Calls: f
> f(,NULL)
Error in UseMethod("as.raster") : 
  no applicable method for 'as.raster' applied to an object of class "name"
Calls: f
> f(NULL,NULL)
Error in UseMethod("as.raster") : 
  no applicable method for 'as.raster' applied to an object of class "NULL"
Calls: f
> f(list())
Error in UseMethod("as.raster") : 
  no applicable method for 'as.raster' applied to an object of class "list"
Calls: f
> f(l0)
     [,1]
> f(c0)
     [,1]
> f(m0)
<0 x 0 matrix>
> f(df0)
Error in UseMethod("as.raster") : 
  no applicable method for 'as.raster' applied to an object of class "data.frame"
Calls: f
> f(FALSE)
     [,1]     
[1,] "#000000"
> f(list(),list())
Error in UseMethod("as.raster") : 
  no applicable method for 'as.raster' applied to an object of class "list"
Calls: f
> f(l0,l0)
Error in rgb(tx, tx, tx, maxColorValue = max) : 
  invalid value of 'maxColorValue'
Calls: f ... as.raster.logical -> as.raster -> as.raster.matrix -> rgb
> f(c0,c0)
     [,1]
> f(df0,df0)
Error in UseMethod("as.raster") : 
  no applicable method for 'as.raster' applied to an object of class "data.frame"
Calls: f
> f(FALSE,FALSE)
Error in rgb(tx, tx, tx, maxColorValue = max) : 
  invalid value of 'maxColorValue'
Calls: f ... as.raster.logical -> as.raster -> as.raster.matrix -> rgb
> 
> ##  axisTicks  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("axisTicks", pos = 'package:grDevices')
> f()
Error in .axisPars(usr, log = log, nintLog = nint) : 
  argument "usr" is missing, with no default
Calls: f -> unlist -> .axisPars
> f(NULL)
Error in .axisPars(usr, log = log, nintLog = nint) : 
  argument "log" is missing, with no default
Calls: f -> unlist -> .axisPars
> f(,NULL)
Error in .axisPars(usr, log = log, nintLog = nint) : 
  argument "usr" is missing, with no default
Calls: f -> unlist -> .axisPars
> f(NULL,NULL)
Error in .axisPars(usr, log = log, nintLog = nint) : 
  'usr' must be numeric of length 2
Calls: f -> unlist -> .axisPars
> f(list())
Error in .axisPars(usr, log = log, nintLog = nint) : 
  argument "log" is missing, with no default
Calls: f -> unlist -> .axisPars
> f(l0)
Error in .axisPars(usr, log = log, nintLog = nint) : 
  argument "log" is missing, with no default
Calls: f -> unlist -> .axisPars
> f(c0)
Error in .axisPars(usr, log = log, nintLog = nint) : 
  argument "log" is missing, with no default
Calls: f -> unlist -> .axisPars
> f(m0)
Error in .axisPars(usr, log = log, nintLog = nint) : 
  argument "log" is missing, with no default
Calls: f -> unlist -> .axisPars
> f(df0)
Error in .axisPars(usr, log = log, nintLog = nint) : 
  argument "log" is missing, with no default
Calls: f -> unlist -> .axisPars
> f(FALSE)
Error in .axisPars(usr, log = log, nintLog = nint) : 
  argument "log" is missing, with no default
Calls: f -> unlist -> .axisPars
> f(list(),list())
Error in .axisPars(usr, log = log, nintLog = nint) : 
  'usr' must be numeric of length 2
Calls: f -> unlist -> .axisPars
> f(l0,l0)
Error in .axisPars(usr, log = log, nintLog = nint) : 
  'usr' must be numeric of length 2
Calls: f -> unlist -> .axisPars
> f(c0,c0)
Error in .axisPars(usr, log = log, nintLog = nint) : 
  'usr' must be numeric of length 2
Calls: f -> unlist -> .axisPars
> f(df0,df0)
Error in .axisPars(usr, log = log, nintLog = nint) : 
  'usr' must be numeric of length 2
Calls: f -> unlist -> .axisPars
> f(FALSE,FALSE)
Error in .axisPars(usr, log = log, nintLog = nint) : 
  'usr' must be numeric of length 2
Calls: f -> unlist -> .axisPars
> 
> ##  bitmap  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("bitmap", pos = 'package:grDevices')
> f()
Error in f() : 'file' is missing with no default
> f(NULL)
Error in f(NULL) : 'file' must be a non-empty character string
> f(,NULL)
Error in f(, NULL) : 'file' is missing with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 'file' must be a non-empty character string
> f(list())
Error in f(list()) : 'file' must be a non-empty character string
> f(l0)
Error in f(l0) : 'file' must be a non-empty character string
> f(c0)
Error in f(c0) : 'file' must be a non-empty character string
> f(m0)
Error in f(m0) : 'file' must be a non-empty character string
> f(df0)
Error in f(df0) : 'file' must be a non-empty character string
> f(FALSE)
Error in f(FALSE) : 'file' must be a non-empty character string
> f(list(),list())
Error in f(list(), list()) : 'file' must be a non-empty character string
> f(l0,l0)
Error in f(l0, l0) : 'file' must be a non-empty character string
> f(c0,c0)
Error in f(c0, c0) : 'file' must be a non-empty character string
> f(df0,df0)
Error in f(df0, df0) : 'file' must be a non-empty character string
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'file' must be a non-empty character string
> 
> ##  bmp  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("bmp", pos = 'package:grDevices')
> f()
> f(NULL)
Error in .External2(C_X11, paste("bmp::", filename, sep = ""), g$width,  : 
  unable to start device BMP
Calls: f
In addition: Warning message:
In f(NULL) : could not open BMP file ''
> f(,NULL)
> f(NULL,NULL)
Error in .External2(C_X11, paste("bmp::", filename, sep = ""), g$width,  : 
  unable to start device BMP
Calls: f
In addition: Warning message:
In f(NULL, NULL) : could not open BMP file ''
> f(list())
Error in .External2(C_X11, paste("bmp::", filename, sep = ""), g$width,  : 
  unable to start device BMP
Calls: f
In addition: Warning message:
In f(list()) : could not open BMP file ''
> f(l0)
Error in .External2(C_X11, paste("bmp::", filename, sep = ""), g$width,  : 
  unable to start device BMP
Calls: f
In addition: Warning message:
In f(l0) : could not open BMP file ''
> f(c0)
Error in .External2(C_X11, paste("bmp::", filename, sep = ""), g$width,  : 
  unable to start device BMP
Calls: f
In addition: Warning message:
In f(c0) : could not open BMP file ''
> f(m0)
Error in .External2(C_X11, paste("bmp::", filename, sep = ""), g$width,  : 
  unable to start device BMP
Calls: f
In addition: Warning message:
In f(m0) : could not open BMP file ''
> f(df0)
> f(FALSE)
> f(list(),list())
Error in switch(units, `in` = res, cm = res/2.54, mm = res/25.4, px = 1) *  : 
  non-numeric argument to binary operator
Calls: f -> .geometry
> f(l0,l0)
Error in .External2(C_X11, paste("bmp::", filename, sep = ""), g$width,  : 
  unable to start device BMP
Calls: f
In addition: Warning message:
In f(l0, l0) : could not open BMP file ''
> f(c0,c0)
Error in switch(units, `in` = res, cm = res/2.54, mm = res/25.4, px = 1) *  : 
  non-numeric argument to binary operator
Calls: f -> .geometry
> f(df0,df0)
Warning message:
In Ops.factor(left, right) : '*' not meaningful for factors
> f(FALSE,FALSE)
Error in .External2(C_X11, paste("bmp::", filename, sep = ""), g$width,  : 
  invalid 'width' or 'height'
Calls: f
> 
> ##  boxplot.stats  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("boxplot.stats", pos = 'package:grDevices')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
$stats
[1] NA NA NA NA NA

$n
[1] 0

$conf
[1] NA NA

$out
NULL

Warning messages:
1: In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
2: In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
3: In is.na(x) : is.na() applied to non-(list or vector) of type 'NULL'
> f(,NULL)
Error in if (coef < 0) stop("'coef' must not be negative") : 
  argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (coef < 0) stop("'coef' must not be negative") : 
  argument is of length zero
Calls: f
> f(list())
Error in sort.int(x, na.last = na.last, decreasing = decreasing, ...) : 
  'x' must be atomic
Calls: f -> <Anonymous> -> sort -> sort.default -> sort.int
> f(l0)
$stats
[1] NA NA NA NA NA

$n
[1] 0

$conf
[1] NA NA

$out
logical(0)

> f(c0)
$stats
[1] NA NA NA NA NA

$n
[1] 0

$conf
[1] NA NA

$out
character(0)

> f(m0)
$stats
[1] NA NA NA NA NA

$n
[1] 0

$conf
[1] NA NA

$out
numeric(0)

> f(df0)
Error in is.finite(x) : default method not implemented for type 'list'
Calls: f
> f(FALSE)
$stats
[1] 0 0 0 0 0

$n
[1] 1

$conf
[1] 0 0

$out
logical(0)

> f(list(),list())
Error in if (coef < 0) stop("'coef' must not be negative") : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (coef < 0) stop("'coef' must not be negative") : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (coef < 0) stop("'coef' must not be negative") : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<' not meaningful for factors
> f(FALSE,FALSE)
$stats
[1] 0 0 0 0 0

$n
[1] 1

$conf
[1] 0 0

$out
numeric(0)

> 
> ##  check.options  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("check.options", pos = 'package:grDevices')
> f()
Error in f() : argument "new" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "name.opt" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "new" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  'name.opt' must be character, name of an existing list
> f(list())
Error in f(list()) : argument "name.opt" is missing, with no default
> f(l0)
Error in f(l0) : argument "name.opt" is missing, with no default
> f(c0)
Error in f(c0) : argument "name.opt" is missing, with no default
> f(m0)
Error in f(m0) : argument "name.opt" is missing, with no default
> f(df0)
Error in f(df0) : argument "name.opt" is missing, with no default
> f(FALSE)
Error in f(FALSE) : invalid arguments in 'f(FALSE)' (need named args)
> f(list(),list())
Error in f(list(), list()) : 
  'name.opt' must be character, name of an existing list
> f(l0,l0)
Error in f(l0, l0) : 
  'name.opt' must be character, name of an existing list
> f(c0,c0)
Error in get(name.opt, envir = envir, inherits = FALSE) : 
  invalid first argument
Calls: f -> get
> f(df0,df0)
Error in f(df0, df0) : 
  'name.opt' must be character, name of an existing list
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  invalid arguments in 'f(FALSE, FALSE)' (need named args)
> 
> ##  chull  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("chull", pos = 'package:grDevices')
> f()
Error in xy.coords(x, y, recycle = TRUE) : 
  argument "x" is missing, with no default
Calls: f -> xy.coords
> f(NULL)
integer(0)
> f(,NULL)
Error in xy.coords(x, y, recycle = TRUE) : 
  argument "x" is missing, with no default
Calls: f -> xy.coords
> f(NULL,NULL)
integer(0)
> f(list())
Error in xy.coords(x, y, recycle = TRUE) : 
  'x' is a list, but does not have components 'x' and 'y'
Calls: f -> xy.coords
> f(l0)
integer(0)
> f(c0)
integer(0)
> f(m0)
Error in x[, 2] : subscript out of bounds
Calls: f -> xy.coords
> f(df0)
integer(0)
> f(FALSE)
[1] 1
> f(list(),list())
integer(0)
> f(l0,l0)
integer(0)
> f(c0,c0)
integer(0)
> f(df0,df0)
Error in f(df0, df0) : finite coordinates are needed
> f(FALSE,FALSE)
[1] 1
> 
> ##  cm  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cm", pos = 'package:grDevices')
> f()
Error in f() : argument "x" is missing, with no default
> f(NULL)
numeric(0)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in 2.54 * x : non-numeric argument to binary operator
Calls: f
> f(l0)
numeric(0)
> f(c0)
Error in 2.54 * x : non-numeric argument to binary operator
Calls: f
> f(m0)
<0 x 0 matrix>
> f(df0)
  c0
1 NA
Warning message:
In Ops.factor(left, right) : '*' not meaningful for factors
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  cm.colors  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("cm.colors", pos = 'package:grDevices')
> f()
Error in f() : argument "n" is missing, with no default
> f(NULL)
Error in if ((n <- as.integer(n[1L])) > 0L) { : 
  argument is of length zero
Calls: f
> f(,NULL)
Error in f(, NULL) : argument "n" is missing, with no default
> f(NULL,NULL)
Error in if ((n <- as.integer(n[1L])) > 0L) { : 
  argument is of length zero
Calls: f
> f(list())
Error in f(list()) : (list) object cannot be coerced to type 'integer'
> f(l0)
Error in if ((n <- as.integer(n[1L])) > 0L) { : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0)
Error in if ((n <- as.integer(n[1L])) > 0L) { : 
  missing value where TRUE/FALSE needed
Calls: f
> f(m0)
Error in if ((n <- as.integer(n[1L])) > 0L) { : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0)
Error in if ((n <- as.integer(n[1L])) > 0L) { : 
  missing value where TRUE/FALSE needed
Calls: f
> f(FALSE)
character(0)
> f(list(),list())
Error in f(list(), list()) : 
  (list) object cannot be coerced to type 'integer'
> f(l0,l0)
Error in if ((n <- as.integer(n[1L])) > 0L) { : 
  missing value where TRUE/FALSE needed
Calls: f
> f(c0,c0)
Error in if ((n <- as.integer(n[1L])) > 0L) { : 
  missing value where TRUE/FALSE needed
Calls: f
> f(df0,df0)
Error in if ((n <- as.integer(n[1L])) > 0L) { : 
  missing value where TRUE/FALSE needed
Calls: f
> f(FALSE,FALSE)
character(0)
> 
> ##  col2rgb  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("col2rgb", pos = 'package:grDevices')
> f()
Error in match(x, table, nomatch = 0L) : 
  argument "col" is missing, with no default
Calls: f -> %in% -> match
> f(NULL)
     
red  
green
blue 
> f(,NULL)
Error in match(x, table, nomatch = 0L) : 
  argument "col" is missing, with no default
Calls: f -> %in% -> match
> f(NULL,NULL)
Error in f(NULL, NULL) : invalid 'alpha' value
> f(list())
     
red  
green
blue 
> f(l0)
     
red  
green
blue 
> f(c0)
     
red  
green
blue 
> f(m0)
     
red  
green
blue 
> f(df0)
Error in f(df0) : invalid color name 'integer(0)'
> f(FALSE)
Error in f(FALSE) : invalid color name 'FALSE'
> f(list(),list())
Error in f(list(), list()) : invalid 'alpha' value
> f(l0,l0)
Error in f(l0, l0) : invalid 'alpha' value
> f(c0,c0)
Error in f(c0, c0) : invalid 'alpha' value
> f(df0,df0)
Error in f(df0, df0) : invalid 'alpha' value
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : invalid color name 'FALSE'
> 
> ##  colorConverter  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("colorConverter", pos = 'package:grDevices')
> f()
Error in f() : argument "toXYZ" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "fromXYZ" is missing, with no default
> f(,NULL)
Error in f(, NULL) : argument "toXYZ" is missing, with no default
> f(NULL,NULL)
Error in f(NULL, NULL) : argument "name" is missing, with no default
> f(list())
Error in f(list()) : argument "fromXYZ" is missing, with no default
> f(l0)
Error in f(l0) : argument "fromXYZ" is missing, with no default
> f(c0)
Error in f(c0) : argument "fromXYZ" is missing, with no default
> f(m0)
Error in f(m0) : argument "fromXYZ" is missing, with no default
> f(df0)
Error in f(df0) : argument "fromXYZ" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "fromXYZ" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : argument "name" is missing, with no default
> f(l0,l0)
Error in f(l0, l0) : argument "name" is missing, with no default
> f(c0,c0)
Error in f(c0, c0) : argument "name" is missing, with no default
> f(df0,df0)
Error in f(df0, df0) : argument "name" is missing, with no default
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : argument "name" is missing, with no default
> 
> ##  colorRamp  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("colorRamp", pos = 'package:grDevices')
> f()
Error in match(x, table, nomatch = 0L) : 
  argument "colors" is missing, with no default
Calls: f -> t -> col2rgb -> %in% -> match
> f(NULL)
Error in interpolate(x, colors[, 1L]) : 
  need at least two non-NA values to interpolate
Calls: f -> interpolate
> f(,NULL)
Error in if (bias <= 0) stop("'bias' must be positive") : 
  argument is of length zero
Calls: f
> f(NULL,NULL)
Error in if (bias <= 0) stop("'bias' must be positive") : 
  argument is of length zero
Calls: f
> f(list())
Error in interpolate(x, colors[, 1L]) : 
  need at least two non-NA values to interpolate
Calls: f -> interpolate
> f(l0)
Error in interpolate(x, colors[, 1L]) : 
  need at least two non-NA values to interpolate
Calls: f -> interpolate
> f(c0)
Error in interpolate(x, colors[, 1L]) : 
  need at least two non-NA values to interpolate
Calls: f -> interpolate
> f(m0)
Error in interpolate(x, colors[, 1L]) : 
  need at least two non-NA values to interpolate
Calls: f -> interpolate
> f(df0)
Error in col2rgb(colors, alpha = alpha) : invalid color name 'integer(0)'
Calls: f -> t -> col2rgb
> f(FALSE)
Error in col2rgb(colors, alpha = alpha) : invalid color name 'FALSE'
Calls: f -> t -> col2rgb
> f(list(),list())
Error in if (bias <= 0) stop("'bias' must be positive") : 
  argument is of length zero
Calls: f
> f(l0,l0)
Error in if (bias <= 0) stop("'bias' must be positive") : 
  argument is of length zero
Calls: f
> f(c0,c0)
Error in if (bias <= 0) stop("'bias' must be positive") : 
  argument is of length zero
Calls: f
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<=' not meaningful for factors
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'bias' must be positive
> 
> ##  colorRampPalette  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("colorRampPalette", pos = 'package:grDevices')
> f()
Error in match(x, table, nomatch = 0L) : 
  argument "colors" is missing, with no default
Calls: f -> colorRamp -> t -> col2rgb -> %in% -> match
> f(NULL)
Error in interpolate(x, colors[, 1L]) : 
  need at least two non-NA values to interpolate
Calls: f -> colorRamp -> interpolate
> f(,NULL)
Error in if (bias <= 0) stop("'bias' must be positive") : 
  argument is of length zero
Calls: f -> colorRamp
> f(NULL,NULL)
Error in if (bias <= 0) stop("'bias' must be positive") : 
  argument is of length zero
Calls: f -> colorRamp
> f(list())
Error in interpolate(x, colors[, 1L]) : 
  need at least two non-NA values to interpolate
Calls: f -> colorRamp -> interpolate
> f(l0)
Error in interpolate(x, colors[, 1L]) : 
  need at least two non-NA values to interpolate
Calls: f -> colorRamp -> interpolate
> f(c0)
Error in interpolate(x, colors[, 1L]) : 
  need at least two non-NA values to interpolate
Calls: f -> colorRamp -> interpolate
> f(m0)
Error in interpolate(x, colors[, 1L]) : 
  need at least two non-NA values to interpolate
Calls: f -> colorRamp -> interpolate
> f(df0)
Error in col2rgb(colors, alpha = alpha) : invalid color name 'integer(0)'
Calls: f -> colorRamp -> t -> col2rgb
> f(FALSE)
Error in col2rgb(colors, alpha = alpha) : invalid color name 'FALSE'
Calls: f -> colorRamp -> t -> col2rgb
> f(list(),list())
Error in if (bias <= 0) stop("'bias' must be positive") : 
  argument is of length zero
Calls: f -> colorRamp
> f(l0,l0)
Error in if (bias <= 0) stop("'bias' must be positive") : 
  argument is of length zero
Calls: f -> colorRamp
> f(c0,c0)
Error in if (bias <= 0) stop("'bias' must be positive") : 
  argument is of length zero
Calls: f -> colorRamp
> f(df0,df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  data is too long
Calls: f -> colorRamp -> Ops.data.frame -> matrix
In addition: Warning message:
In Ops.factor(left, right) : '<=' not meaningful for factors
> f(FALSE,FALSE)
Error in colorRamp(colors, ...) : 'bias' must be positive
Calls: f -> colorRamp
> 
> ##  colors  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("colors", pos = 'package:grDevices')
> f()
  [1] "white"                "aliceblue"            "antiquewhite"        
  [4] "antiquewhite1"        "antiquewhite2"        "antiquewhite3"       
  [7] "antiquewhite4"        "aquamarine"           "aquamarine1"         
 [10] "aquamarine2"          "aquamarine3"          "aquamarine4"         
 [13] "azure"                "azure1"               "azure2"              
 [16] "azure3"               "azure4"               "beige"               
 [19] "bisque"               "bisque1"              "bisque2"             
 [22] "bisque3"              "bisque4"              "black"               
 [25] "blanchedalmond"       "blue"                 "blue1"               
 [28] "blue2"                "blue3"                "blue4"               
 [31] "blueviolet"           "brown"                "brown1"              
 [34] "brown2"               "brown3"               "brown4"              
 [37] "burlywood"            "burlywood1"           "burlywood2"          
 [40] "burlywood3"           "burlywood4"           "cadetblue"           
 [43] "cadetblue1"           "cadetblue2"           "cadetblue3"          
 [46] "cadetblue4"           "chartreuse"           "chartreuse1"         
 [49] "chartreuse2"          "chartreuse3"          "chartreuse4"         
 [52] "chocolate"            "chocolate1"           "chocolate2"          
 [55] "chocolate3"           "chocolate4"           "coral"               
 [58] "coral1"               "coral2"               "coral3"              
 [61] "coral4"               "cornflowerblue"       "cornsilk"            
 [64] "cornsilk1"            "cornsilk2"            "cornsilk3"           
 [67] "cornsilk4"            "cyan"                 "cyan1"               
 [70] "cyan2"                "cyan3"                "cyan4"               
 [73] "darkblue"             "darkcyan"             "darkgoldenrod"       
 [76] "darkgoldenrod1"       "darkgoldenrod2"       "darkgoldenrod3"      
 [79] "darkgoldenrod4"       "darkgray"             "darkgreen"           
 [82] "darkgrey"             "darkkhaki"            "darkmagenta"         
 [85] "darkolivegreen"       "darkolivegreen1"      "darkolivegreen2"     
 [88] "darkolivegreen3"      "darkolivegreen4"      "darkorange"          
 [91] "darkorange1"          "darkorange2"          "darkorange3"         
 [94] "darkorange4"          "darkorchid"           "darkorchid1"         
 [97] "darkorchid2"          "darkorchid3"          "darkorchid4"         
[100] "darkred"              "darksalmon"           "darkseagreen"        
[103] "darkseagreen1"        "darkseagreen2"        "darkseagreen3"       
[106] "darkseagreen4"        "darkslateblue"        "darkslategray"       
[109] "darkslategray1"       "darkslategray2"       "darkslategray3"      
[112] "darkslategray4"       "darkslategrey"        "darkturquoise"       
[115] "darkviolet"           "deeppink"             "deeppink1"           
[118] "deeppink2"            "deeppink3"            "deeppink4"           
[121] "deepskyblue"          "deepskyblue1"         "deepskyblue2"        
[124] "deepskyblue3"         "deepskyblue4"         "dimgray"             
[127] "dimgrey"              "dodgerblue"           "dodgerblue1"         
[130] "dodgerblue2"          "dodgerblue3"          "dodgerblue4"         
[133] "firebrick"            "firebrick1"           "firebrick2"          
[136] "firebrick3"           "firebrick4"           "floralwhite"         
[139] "forestgreen"          "gainsboro"            "ghostwhite"          
[142] "gold"                 "gold1"                "gold2"               
[145] "gold3"                "gold4"                "goldenrod"           
[148] "goldenrod1"           "goldenrod2"           "goldenrod3"          
[151] "goldenrod4"           "gray"                 "gray0"               
[154] "gray1"                "gray2"                "gray3"               
[157] "gray4"                "gray5"                "gray6"               
[160] "gray7"                "gray8"                "gray9"               
[163] "gray10"               "gray11"               "gray12"              
[166] "gray13"               "gray14"               "gray15"              
[169] "gray16"               "gray17"               "gray18"              
[172] "gray19"               "gray20"               "gray21"              
[175] "gray22"               "gray23"               "gray24"              
[178] "gray25"               "gray26"               "gray27"              
[181] "gray28"               "gray29"               "gray30"              
[184] "gray31"               "gray32"               "gray33"              
[187] "gray34"               "gray35"               "gray36"              
[190] "gray37"               "gray38"               "gray39"              
[193] "gray40"               "gray41"               "gray42"              
[196] "gray43"               "gray44"               "gray45"              
[199] "gray46"               "gray47"               "gray48"              
[202] "gray49"               "gray50"               "gray51"              
[205] "gray52"               "gray53"               "gray54"              
[208] "gray55"               "gray56"               "gray57"              
[211] "gray58"               "gray59"               "gray60"              
[214] "gray61"               "gray62"               "gray63"              
[217] "gray64"               "gray65"               "gray66"              
[220] "gray67"               "gray68"               "gray69"              
[223] "gray70"               "gray71"               "gray72"              
[226] "gray73"               "gray74"               "gray75"              
[229] "gray76"               "gray77"               "gray78"              
[232] "gray79"               "gray80"               "gray81"              
[235] "gray82"               "gray83"               "gray84"              
[238] "gray85"               "gray86"               "gray87"              
[241] "gray88"               "gray89"               "gray90"              
[244] "gray91"               "gray92"               "gray93"              
[247] "gray94"               "gray95"               "gray96"              
[250] "gray97"               "gray98"               "gray99"              
[253] "gray100"              "green"                "green1"              
[256] "green2"               "green3"               "green4"              
[259] "greenyellow"          "grey"                 "grey0"               
[262] "grey1"                "grey2"                "grey3"               
[265] "grey4"                "grey5"                "grey6"               
[268] "grey7"                "grey8"                "grey9"               
[271] "grey10"               "grey11"               "grey12"              
[274] "grey13"               "grey14"               "grey15"              
[277] "grey16"               "grey17"               "grey18"              
[280] "grey19"               "grey20"               "grey21"              
[283] "grey22"               "grey23"               "grey24"              
[286] "grey25"               "grey26"               "grey27"              
[289] "grey28"               "grey29"               "grey30"              
[292] "grey31"               "grey32"               "grey33"              
[295] "grey34"               "grey35"               "grey36"              
[298] "grey37"               "grey38"               "grey39"              
[301] "grey40"               "grey41"               "grey42"              
[304] "grey43"               "grey44"               "grey45"              
[307] "grey46"               "grey47"               "grey48"              
[310] "grey49"               "grey50"               "grey51"              
[313] "grey52"               "grey53"               "grey54"              
[316] "grey55"               "grey56"               "grey57"              
[319] "grey58"               "grey59"               "grey60"              
[322] "grey61"               "grey62"               "grey63"              
[325] "grey64"               "grey65"               "grey66"              
[328] "grey67"               "grey68"               "grey69"              
[331] "grey70"               "grey71"               "grey72"              
[334] "grey73"               "grey74"               "grey75"              
[337] "grey76"               "grey77"               "grey78"              
[340] "grey79"               "grey80"               "grey81"              
[343] "grey82"               "grey83"               "grey84"              
[346] "grey85"               "grey86"               "grey87"              
[349] "grey88"               "grey89"               "grey90"              
[352] "grey91"               "grey92"               "grey93"              
[355] "grey94"               "grey95"               "grey96"              
[358] "grey97"               "grey98"               "grey99"              
[361] "grey100"              "honeydew"             "honeydew1"           
[364] "honeydew2"            "honeydew3"            "honeydew4"           
[367] "hotpink"              "hotpink1"             "hotpink2"            
[370] "hotpink3"             "hotpink4"             "indianred"           
[373] "indianred1"           "indianred2"           "indianred3"          
[376] "indianred4"           "ivory"                "ivory1"              
[379] "ivory2"               "ivory3"               "ivory4"              
[382] "khaki"                "khaki1"               "khaki2"              
[385] "khaki3"               "khaki4"               "lavender"            
[388] "lavenderblush"        "lavenderblush1"       "lavenderblush2"      
[391] "lavenderblush3"       "lavenderblush4"       "lawngreen"           
[394] "lemonchiffon"         "lemonchiffon1"        "lemonchiffon2"       
[397] "lemonchiffon3"        "lemonchiffon4"        "lightblue"           
[400] "lightblue1"           "lightblue2"           "lightblue3"          
[403] "lightblue4"           "lightcoral"           "lightcyan"           
[406] "lightcyan1"           "lightcyan2"           "lightcyan3"          
[409] "lightcyan4"           "lightgoldenrod"       "lightgoldenrod1"     
[412] "lightgoldenrod2"      "lightgoldenrod3"      "lightgoldenrod4"     
[415] "lightgoldenrodyellow" "lightgray"            "lightgreen"          
[418] "lightgrey"            "lightpink"            "lightpink1"          
[421] "lightpink2"           "lightpink3"           "lightpink4"          
[424] "lightsalmon"          "lightsalmon1"         "lightsalmon2"        
[427] "lightsalmon3"         "lightsalmon4"         "lightseagreen"       
[430] "lightskyblue"         "lightskyblue1"        "lightskyblue2"       
[433] "lightskyblue3"        "lightskyblue4"        "lightslateblue"      
[436] "lightslategray"       "lightslategrey"       "lightsteelblue"      
[439] "lightsteelblue1"      "lightsteelblue2"      "lightsteelblue3"     
[442] "lightsteelblue4"      "lightyellow"          "lightyellow1"        
[445] "lightyellow2"         "lightyellow3"         "lightyellow4"        
[448] "limegreen"            "linen"                "magenta"             
[451] "magenta1"             "magenta2"             "magenta3"            
[454] "magenta4"             "maroon"               "maroon1"             
[457] "maroon2"              "maroon3"              "maroon4"             
[460] "mediumaquamarine"     "mediumblue"           "mediumorchid"        
[463] "mediumorchid1"        "mediumorchid2"        "mediumorchid3"       
[466] "mediumorchid4"        "mediumpurple"         "mediumpurple1"       
[469] "mediumpurple2"        "mediumpurple3"        "mediumpurple4"       
[472] "mediumseagreen"       "mediumslateblue"      "mediumspringgreen"   
[475] "mediumturquoise"      "mediumvioletred"      "midnightblue"        
[478] "mintcream"            "mistyrose"            "mistyrose1"          
[481] "mistyrose2"           "mistyrose3"           "mistyrose4"          
[484] "moccasin"             "navajowhite"          "navajowhite1"        
[487] "navajowhite2"         "navajowhite3"         "navajowhite4"        
[490] "navy"                 "navyblue"             "oldlace"             
[493] "olivedrab"            "olivedrab1"           "olivedrab2"          
[496] "olivedrab3"           "olivedrab4"           "orange"              
[499] "orange1"              "orange2"              "orange3"             
[502] "orange4"              "orangered"            "orangered1"          
[505] "orangered2"           "orangered3"           "orangered4"          
[508] "orchid"               "orchid1"              "orchid2"             
[511] "orchid3"              "orchid4"              "palegoldenrod"       
[514] "palegreen"            "palegreen1"           "palegreen2"          
[517] "palegreen3"           "palegreen4"           "paleturquoise"       
[520] "paleturquoise1"       "paleturquoise2"       "paleturquoise3"      
[523] "paleturquoise4"       "palevioletred"        "palevioletred1"      
[526] "palevioletred2"       "palevioletred3"       "palevioletred4"      
[529] "papayawhip"           "peachpuff"            "peachpuff1"          
[532] "peachpuff2"           "peachpuff3"           "peachpuff4"          
[535] "peru"                 "pink"                 "pink1"               
[538] "pink2"                "pink3"                "pink4"               
[541] "plum"                 "plum1"                "plum2"               
[544] "plum3"                "plum4"                "powderblue"          
[547] "purple"               "purple1"              "purple2"             
[550] "purple3"              "purple4"              "red"                 
[553] "red1"                 "red2"                 "red3"                
[556] "red4"                 "rosybrown"            "rosybrown1"          
[559] "rosybrown2"           "rosybrown3"           "rosybrown4"          
[562] "royalblue"            "royalblue1"           "royalblue2"          
[565] "royalblue3"           "royalblue4"           "saddlebrown"         
[568] "salmon"               "salmon1"              "salmon2"             
[571] "salmon3"              "salmon4"              "sandybrown"          
[574] "seagreen"             "seagreen1"            "seagreen2"           
[577] "seagreen3"            "seagreen4"            "seashell"            
[580] "seashell1"            "seashell2"            "seashell3"           
[583] "seashell4"            "sienna"               "sienna1"             
[586] "sienna2"              "sienna3"              "sienna4"             
[589] "skyblue"              "skyblue1"             "skyblue2"            
[592] "skyblue3"             "skyblue4"             "slateblue"           
[595] "slateblue1"           "slateblue2"           "slateblue3"          
[598] "slateblue4"           "slategray"            "slategray1"          
[601] "slategray2"           "slategray3"           "slategray4"          
[604] "slategrey"            "snow"                 "snow1"               
[607] "snow2"                "snow3"                "snow4"               
[610] "springgreen"          "springgreen1"         "springgreen2"        
[613] "springgreen3"         "springgreen4"         "steelblue"           
[616] "steelblue1"           "steelblue2"           "steelblue3"          
[619] "steelblue4"           "tan"                  "tan1"                
[622] "tan2"                 "tan3"                 "tan4"                
[625] "thistle"              "thistle1"             "thistle2"            
[628] "thistle3"             "thistle4"             "tomato"              
[631] "tomato1"              "tomato2"              "tomato3"             
[634] "tomato4"              "turquoise"            "turquoise1"          
[637] "turquoise2"           "turquoise3"           "turquoise4"          
[640] "violet"               "violetred"            "violetred1"          
[643] "violetred2"           "violetred3"           "violetred4"          
[646] "wheat"                "wheat1"               "wheat2"              
[649] "wheat3"               "wheat4"               "whitesmoke"          
[652] "yellow"               "yellow1"              "yellow2"             
[655] "yellow3"              "yellow4"              "yellowgreen"         
> f(NULL)
Error in if (distinct) c[!duplicated(t(col2rgb(c)))] else c : 
  argument is of length zero
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in if (distinct) c[!duplicated(t(col2rgb(c)))] else c : 
  argument is of length zero
Calls: f
> f(l0)
Error in if (distinct) c[!duplicated(t(col2rgb(c)))] else c : 
  argument is of length zero
Calls: f
> f(c0)
Error in if (distinct) c[!duplicated(t(col2rgb(c)))] else c : 
  argument is of length zero
Calls: f
> f(m0)
Error in if (distinct) c[!duplicated(t(col2rgb(c)))] else c : 
  argument is of length zero
Calls: f
> f(df0)
Error in if (distinct) c[!duplicated(t(col2rgb(c)))] else c : 
  argument is not interpretable as logical
Calls: f
> f(FALSE)
  [1] "white"                "aliceblue"            "antiquewhite"        
  [4] "antiquewhite1"        "antiquewhite2"        "antiquewhite3"       
  [7] "antiquewhite4"        "aquamarine"           "aquamarine1"         
 [10] "aquamarine2"          "aquamarine3"          "aquamarine4"         
 [13] "azure"                "azure1"               "azure2"              
 [16] "azure3"               "azure4"               "beige"               
 [19] "bisque"               "bisque1"              "bisque2"             
 [22] "bisque3"              "bisque4"              "black"               
 [25] "blanchedalmond"       "blue"                 "blue1"               
 [28] "blue2"                "blue3"                "blue4"               
 [31] "blueviolet"           "brown"                "brown1"              
 [34] "brown2"               "brown3"               "brown4"              
 [37] "burlywood"            "burlywood1"           "burlywood2"          
 [40] "burlywood3"           "burlywood4"           "cadetblue"           
 [43] "cadetblue1"           "cadetblue2"           "cadetblue3"          
 [46] "cadetblue4"           "chartreuse"           "chartreuse1"         
 [49] "chartreuse2"          "chartreuse3"          "chartreuse4"         
 [52] "chocolate"            "chocolate1"           "chocolate2"          
 [55] "chocolate3"           "chocolate4"           "coral"               
 [58] "coral1"               "coral2"               "coral3"              
 [61] "coral4"               "cornflowerblue"       "cornsilk"            
 [64] "cornsilk1"            "cornsilk2"            "cornsilk3"           
 [67] "cornsilk4"            "cyan"                 "cyan1"               
 [70] "cyan2"                "cyan3"                "cyan4"               
 [73] "darkblue"             "darkcyan"             "darkgoldenrod"       
 [76] "darkgoldenrod1"       "darkgoldenrod2"       "darkgoldenrod3"      
 [79] "darkgoldenrod4"       "darkgray"             "darkgreen"           
 [82] "darkgrey"             "darkkhaki"            "darkmagenta"         
 [85] "darkolivegreen"       "darkolivegreen1"      "darkolivegreen2"     
 [88] "darkolivegreen3"      "darkolivegreen4"      "darkorange"          
 [91] "darkorange1"          "darkorange2"          "darkorange3"         
 [94] "darkorange4"          "darkorchid"           "darkorchid1"         
 [97] "darkorchid2"          "darkorchid3"          "darkorchid4"         
[100] "darkred"              "darksalmon"           "darkseagreen"        
[103] "darkseagreen1"        "darkseagreen2"        "darkseagreen3"       
[106] "darkseagreen4"        "darkslateblue"        "darkslategray"       
[109] "darkslategray1"       "darkslategray2"       "darkslategray3"      
[112] "darkslategray4"       "darkslategrey"        "darkturquoise"       
[115] "darkviolet"           "deeppink"             "deeppink1"           
[118] "deeppink2"            "deeppink3"            "deeppink4"           
[121] "deepskyblue"          "deepskyblue1"         "deepskyblue2"        
[124] "deepskyblue3"         "deepskyblue4"         "dimgray"             
[127] "dimgrey"              "dodgerblue"           "dodgerblue1"         
[130] "dodgerblue2"          "dodgerblue3"          "dodgerblue4"         
[133] "firebrick"            "firebrick1"           "firebrick2"          
[136] "firebrick3"           "firebrick4"           "floralwhite"         
[139] "forestgreen"          "gainsboro"            "ghostwhite"          
[142] "gold"                 "gold1"                "gold2"               
[145] "gold3"                "gold4"                "goldenrod"           
[148] "goldenrod1"           "goldenrod2"           "goldenrod3"          
[151] "goldenrod4"           "gray"                 "gray0"               
[154] "gray1"                "gray2"                "gray3"               
[157] "gray4"                "gray5"                "gray6"               
[160] "gray7"                "gray8"                "gray9"               
[163] "gray10"               "gray11"               "gray12"              
[166] "gray13"               "gray14"               "gray15"              
[169] "gray16"               "gray17"               "gray18"              
[172] "gray19"               "gray20"               "gray21"              
[175] "gray22"               "gray23"               "gray24"              
[178] "gray25"               "gray26"               "gray27"              
[181] "gray28"               "gray29"               "gray30"              
[184] "gray31"               "gray32"               "gray33"              
[187] "gray34"               "gray35"               "gray36"              
[190] "gray37"               "gray38"               "gray39"              
[193] "gray40"               "gray41"               "gray42"              
[196] "gray43"               "gray44"               "gray45"              
[199] "gray46"               "gray47"               "gray48"              
[202] "gray49"               "gray50"               "gray51"              
[205] "gray52"               "gray53"               "gray54"              
[208] "gray55"               "gray56"               "gray57"              
[211] "gray58"               "gray59"               "gray60"              
[214] "gray61"               "gray62"               "gray63"              
[217] "gray64"               "gray65"               "gray66"              
[220] "gray67"               "gray68"               "gray69"              
[223] "gray70"               "gray71"               "gray72"              
[226] "gray73"               "gray74"               "gray75"              
[229] "gray76"               "gray77"               "gray78"              
[232] "gray79"               "gray80"               "gray81"              
[235] "gray82"               "gray83"               "gray84"              
[238] "gray85"               "gray86"               "gray87"              
[241] "gray88"               "gray89"               "gray90"              
[244] "gray91"               "gray92"               "gray93"              
[247] "gray94"               "gray95"               "gray96"              
[250] "gray97"               "gray98"               "gray99"              
[253] "gray100"              "green"                "green1"              
[256] "green2"               "green3"               "green4"              
[259] "greenyellow"          "grey"                 "grey0"               
[262] "grey1"                "grey2"                "grey3"               
[265] "grey4"                "grey5"                "grey6"               
[268] "grey7"                "grey8"                "grey9"               
[271] "grey10"               "grey11"               "grey12"              
[274] "grey13"               "grey14"               "grey15"              
[277] "grey16"               "grey17"               "grey18"              
[280] "grey19"               "grey20"               "grey21"              
[283] "grey22"               "grey23"               "grey24"              
[286] "grey25"               "grey26"               "grey27"              
[289] "grey28"               "grey29"               "grey30"              
[292] "grey31"               "grey32"               "grey33"              
[295] "grey34"               "grey35"               "grey36"              
[298] "grey37"               "grey38"               "grey39"              
[301] "grey40"               "grey41"               "grey42"              
[304] "grey43"               "grey44"               "grey45"              
[307] "grey46"               "grey47"               "grey48"              
[310] "grey49"               "grey50"               "grey51"              
[313] "grey52"               "grey53"               "grey54"              
[316] "grey55"               "grey56"               "grey57"              
[319] "grey58"               "grey59"               "grey60"              
[322] "grey61"               "grey62"               "grey63"              
[325] "grey64"               "grey65"               "grey66"              
[328] "grey67"               "grey68"               "grey69"              
[331] "grey70"               "grey71"               "grey72"              
[334] "grey73"               "grey74"               "grey75"              
[337] "grey76"               "grey77"               "grey78"              
[340] "grey79"               "grey80"               "grey81"              
[343] "grey82"               "grey83"               "grey84"              
[346] "grey85"               "grey86"               "grey87"              
[349] "grey88"               "grey89"               "grey90"              
[352] "grey91"               "grey92"               "grey93"              
[355] "grey94"               "grey95"               "grey96"              
[358] "grey97"               "grey98"               "grey99"              
[361] "grey100"              "honeydew"             "honeydew1"           
[364] "honeydew2"            "honeydew3"            "honeydew4"           
[367] "hotpink"              "hotpink1"             "hotpink2"            
[370] "hotpink3"             "hotpink4"             "indianred"           
[373] "indianred1"           "indianred2"           "indianred3"          
[376] "indianred4"           "ivory"                "ivory1"              
[379] "ivory2"               "ivory3"               "ivory4"              
[382] "khaki"                "khaki1"               "khaki2"              
[385] "khaki3"               "khaki4"               "lavender"            
[388] "lavenderblush"        "lavenderblush1"       "lavenderblush2"      
[391] "lavenderblush3"       "lavenderblush4"       "lawngreen"           
[394] "lemonchiffon"         "lemonchiffon1"        "lemonchiffon2"       
[397] "lemonchiffon3"        "lemonchiffon4"        "lightblue"           
[400] "lightblue1"           "lightblue2"           "lightblue3"          
[403] "lightblue4"           "lightcoral"           "lightcyan"           
[406] "lightcyan1"           "lightcyan2"           "lightcyan3"          
[409] "lightcyan4"           "lightgoldenrod"       "lightgoldenrod1"     
[412] "lightgoldenrod2"      "lightgoldenrod3"      "lightgoldenrod4"     
[415] "lightgoldenrodyellow" "lightgray"            "lightgreen"          
[418] "lightgrey"            "lightpink"            "lightpink1"          
[421] "lightpink2"           "lightpink3"           "lightpink4"          
[424] "lightsalmon"          "lightsalmon1"         "lightsalmon2"        
[427] "lightsalmon3"         "lightsalmon4"         "lightseagreen"       
[430] "lightskyblue"         "lightskyblue1"        "lightskyblue2"       
[433] "lightskyblue3"        "lightskyblue4"        "lightslateblue"      
[436] "lightslategray"       "lightslategrey"       "lightsteelblue"      
[439] "lightsteelblue1"      "lightsteelblue2"      "lightsteelblue3"     
[442] "lightsteelblue4"      "lightyellow"          "lightyellow1"        
[445] "lightyellow2"         "lightyellow3"         "lightyellow4"        
[448] "limegreen"            "linen"                "magenta"             
[451] "magenta1"             "magenta2"             "magenta3"            
[454] "magenta4"             "maroon"               "maroon1"             
[457] "maroon2"              "maroon3"              "maroon4"             
[460] "mediumaquamarine"     "mediumblue"           "mediumorchid"        
[463] "mediumorchid1"        "mediumorchid2"        "mediumorchid3"       
[466] "mediumorchid4"        "mediumpurple"         "mediumpurple1"       
[469] "mediumpurple2"        "mediumpurple3"        "mediumpurple4"       
[472] "mediumseagreen"       "mediumslateblue"      "mediumspringgreen"   
[475] "mediumturquoise"      "mediumvioletred"      "midnightblue"        
[478] "mintcream"            "mistyrose"            "mistyrose1"          
[481] "mistyrose2"           "mistyrose3"           "mistyrose4"          
[484] "moccasin"             "navajowhite"          "navajowhite1"        
[487] "navajowhite2"         "navajowhite3"         "navajowhite4"        
[490] "navy"                 "navyblue"             "oldlace"             
[493] "olivedrab"            "olivedrab1"           "olivedrab2"          
[496] "olivedrab3"           "olivedrab4"           "orange"              
[499] "orange1"              "orange2"              "orange3"             
[502] "orange4"              "orangered"            "orangered1"          
[505] "orangered2"           "orangered3"           "orangered4"          
[508] "orchid"               "orchid1"              "orchid2"             
[511] "orchid3"              "orchid4"              "palegoldenrod"       
[514] "palegreen"            "palegreen1"           "palegreen2"          
[517] "palegreen3"           "palegreen4"           "paleturquoise"       
[520] "paleturquoise1"       "paleturquoise2"       "paleturquoise3"      
[523] "paleturquoise4"       "palevioletred"        "palevioletred1"      
[526] "palevioletred2"       "palevioletred3"       "palevioletred4"      
[529] "papayawhip"           "peachpuff"            "peachpuff1"          
[532] "peachpuff2"           "peachpuff3"           "peachpuff4"          
[535] "peru"                 "pink"                 "pink1"               
[538] "pink2"                "pink3"                "pink4"               
[541] "plum"                 "plum1"                "plum2"               
[544] "plum3"                "plum4"                "powderblue"          
[547] "purple"               "purple1"              "purple2"             
[550] "purple3"              "purple4"              "red"                 
[553] "red1"                 "red2"                 "red3"                
[556] "red4"                 "rosybrown"            "rosybrown1"          
[559] "rosybrown2"           "rosybrown3"           "rosybrown4"          
[562] "royalblue"            "royalblue1"           "royalblue2"          
[565] "royalblue3"           "royalblue4"           "saddlebrown"         
[568] "salmon"               "salmon1"              "salmon2"             
[571] "salmon3"              "salmon4"              "sandybrown"          
[574] "seagreen"             "seagreen1"            "seagreen2"           
[577] "seagreen3"            "seagreen4"            "seashell"            
[580] "seashell1"            "seashell2"            "seashell3"           
[583] "seashell4"            "sienna"               "sienna1"             
[586] "sienna2"              "sienna3"              "sienna4"             
[589] "skyblue"              "skyblue1"             "skyblue2"            
[592] "skyblue3"             "skyblue4"             "slateblue"           
[595] "slateblue1"           "slateblue2"           "slateblue3"          
[598] "slateblue4"           "slategray"            "slategray1"          
[601] "slategray2"           "slategray3"           "slategray4"          
[604] "slategrey"            "snow"                 "snow1"               
[607] "snow2"                "snow3"                "snow4"               
[610] "springgreen"          "springgreen1"         "springgreen2"        
[613] "springgreen3"         "springgreen4"         "steelblue"           
[616] "steelblue1"           "steelblue2"           "steelblue3"          
[619] "steelblue4"           "tan"                  "tan1"                
[622] "tan2"                 "tan3"                 "tan4"                
[625] "thistle"              "thistle1"             "thistle2"            
[628] "thistle3"             "thistle4"             "tomato"              
[631] "tomato1"              "tomato2"              "tomato3"             
[634] "tomato4"              "turquoise"            "turquoise1"          
[637] "turquoise2"           "turquoise3"           "turquoise4"          
[640] "violet"               "violetred"            "violetred1"          
[643] "violetred2"           "violetred3"           "violetred4"          
[646] "wheat"                "wheat1"               "wheat2"              
[649] "wheat3"               "wheat4"               "whitesmoke"          
[652] "yellow"               "yellow1"              "yellow2"             
[655] "yellow3"              "yellow4"              "yellowgreen"         
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  colours  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("colours", pos = 'package:grDevices')
> f()
  [1] "white"                "aliceblue"            "antiquewhite"        
  [4] "antiquewhite1"        "antiquewhite2"        "antiquewhite3"       
  [7] "antiquewhite4"        "aquamarine"           "aquamarine1"         
 [10] "aquamarine2"          "aquamarine3"          "aquamarine4"         
 [13] "azure"                "azure1"               "azure2"              
 [16] "azure3"               "azure4"               "beige"               
 [19] "bisque"               "bisque1"              "bisque2"             
 [22] "bisque3"              "bisque4"              "black"               
 [25] "blanchedalmond"       "blue"                 "blue1"               
 [28] "blue2"                "blue3"                "blue4"               
 [31] "blueviolet"           "brown"                "brown1"              
 [34] "brown2"               "brown3"               "brown4"              
 [37] "burlywood"            "burlywood1"           "burlywood2"          
 [40] "burlywood3"           "burlywood4"           "cadetblue"           
 [43] "cadetblue1"           "cadetblue2"           "cadetblue3"          
 [46] "cadetblue4"           "chartreuse"           "chartreuse1"         
 [49] "chartreuse2"          "chartreuse3"          "chartreuse4"         
 [52] "chocolate"            "chocolate1"           "chocolate2"          
 [55] "chocolate3"           "chocolate4"           "coral"               
 [58] "coral1"               "coral2"               "coral3"              
 [61] "coral4"               "cornflowerblue"       "cornsilk"            
 [64] "cornsilk1"            "cornsilk2"            "cornsilk3"           
 [67] "cornsilk4"            "cyan"                 "cyan1"               
 [70] "cyan2"                "cyan3"                "cyan4"               
 [73] "darkblue"             "darkcyan"             "darkgoldenrod"       
 [76] "darkgoldenrod1"       "darkgoldenrod2"       "darkgoldenrod3"      
 [79] "darkgoldenrod4"       "darkgray"             "darkgreen"           
 [82] "darkgrey"             "darkkhaki"            "darkmagenta"         
 [85] "darkolivegreen"       "darkolivegreen1"      "darkolivegreen2"     
 [88] "darkolivegreen3"      "darkolivegreen4"      "darkorange"          
 [91] "darkorange1"          "darkorange2"          "darkorange3"         
 [94] "darkorange4"          "darkorchid"           "darkorchid1"         
 [97] "darkorchid2"          "darkorchid3"          "darkorchid4"         
[100] "darkred"              "darksalmon"           "darkseagreen"        
[103] "darkseagreen1"        "darkseagreen2"        "darkseagreen3"       
[106] "darkseagreen4"        "darkslateblue"        "darkslategray"       
[109] "darkslategray1"       "darkslategray2"       "darkslategray3"      
[112] "darkslategray4"       "darkslategrey"        "darkturquoise"       
[115] "darkviolet"           "deeppink"             "deeppink1"           
[118] "deeppink2"            "deeppink3"            "deeppink4"           
[121] "deepskyblue"          "deepskyblue1"         "deepskyblue2"        
[124] "deepskyblue3"         "deepskyblue4"         "dimgray"             
[127] "dimgrey"              "dodgerblue"           "dodgerblue1"         
[130] "dodgerblue2"          "dodgerblue3"          "dodgerblue4"         
[133] "firebrick"            "firebrick1"           "firebrick2"          
[136] "firebrick3"           "firebrick4"           "floralwhite"         
[139] "forestgreen"          "gainsboro"            "ghostwhite"          
[142] "gold"                 "gold1"                "gold2"               
[145] "gold3"                "gold4"                "goldenrod"           
[148] "goldenrod1"           "goldenrod2"           "goldenrod3"          
[151] "goldenrod4"           "gray"                 "gray0"               
[154] "gray1"                "gray2"                "gray3"               
[157] "gray4"                "gray5"                "gray6"               
[160] "gray7"                "gray8"                "gray9"               
[163] "gray10"               "gray11"               "gray12"              
[166] "gray13"               "gray14"               "gray15"              
[169] "gray16"               "gray17"               "gray18"              
[172] "gray19"               "gray20"               "gray21"              
[175] "gray22"               "gray23"               "gray24"              
[178] "gray25"               "gray26"               "gray27"              
[181] "gray28"               "gray29"               "gray30"              
[184] "gray31"               "gray32"               "gray33"              
[187] "gray34"               "gray35"               "gray36"              
[190] "gray37"               "gray38"               "gray39"              
[193] "gray40"               "gray41"               "gray42"              
[196] "gray43"               "gray44"               "gray45"              
[199] "gray46"               "gray47"               "gray48"              
[202] "gray49"               "gray50"               "gray51"              
[205] "gray52"               "gray53"               "gray54"              
[208] "gray55"               "gray56"               "gray57"              
[211] "gray58"               "gray59"               "gray60"              
[214] "gray61"               "gray62"               "gray63"              
[217] "gray64"               "gray65"               "gray66"              
[220] "gray67"               "gray68"               "gray69"              
[223] "gray70"               "gray71"               "gray72"              
[226] "gray73"               "gray74"               "gray75"              
[229] "gray76"               "gray77"               "gray78"              
[232] "gray79"               "gray80"               "gray81"              
[235] "gray82"               "gray83"               "gray84"              
[238] "gray85"               "gray86"               "gray87"              
[241] "gray88"               "gray89"               "gray90"              
[244] "gray91"               "gray92"               "gray93"              
[247] "gray94"               "gray95"               "gray96"              
[250] "gray97"               "gray98"               "gray99"              
[253] "gray100"              "green"                "green1"              
[256] "green2"               "green3"               "green4"              
[259] "greenyellow"          "grey"                 "grey0"               
[262] "grey1"                "grey2"                "grey3"               
[265] "grey4"                "grey5"                "grey6"               
[268] "grey7"                "grey8"                "grey9"               
[271] "grey10"               "grey11"               "grey12"              
[274] "grey13"               "grey14"               "grey15"              
[277] "grey16"               "grey17"               "grey18"              
[280] "grey19"               "grey20"               "grey21"              
[283] "grey22"               "grey23"               "grey24"              
[286] "grey25"               "grey26"               "grey27"              
[289] "grey28"               "grey29"               "grey30"              
[292] "grey31"               "grey32"               "grey33"              
[295] "grey34"               "grey35"               "grey36"              
[298] "grey37"               "grey38"               "grey39"              
[301] "grey40"               "grey41"               "grey42"              
[304] "grey43"               "grey44"               "grey45"              
[307] "grey46"               "grey47"               "grey48"              
[310] "grey49"               "grey50"               "grey51"              
[313] "grey52"               "grey53"               "grey54"              
[316] "grey55"               "grey56"               "grey57"              
[319] "grey58"               "grey59"               "grey60"              
[322] "grey61"               "grey62"               "grey63"              
[325] "grey64"               "grey65"               "grey66"              
[328] "grey67"               "grey68"               "grey69"              
[331] "grey70"               "grey71"               "grey72"              
[334] "grey73"               "grey74"               "grey75"              
[337] "grey76"               "grey77"               "grey78"              
[340] "grey79"               "grey80"               "grey81"              
[343] "grey82"               "grey83"               "grey84"              
[346] "grey85"               "grey86"               "grey87"              
[349] "grey88"               "grey89"               "grey90"              
[352] "grey91"               "grey92"               "grey93"              
[355] "grey94"               "grey95"               "grey96"              
[358] "grey97"               "grey98"               "grey99"              
[361] "grey100"              "honeydew"             "honeydew1"           
[364] "honeydew2"            "honeydew3"            "honeydew4"           
[367] "hotpink"              "hotpink1"             "hotpink2"            
[370] "hotpink3"             "hotpink4"             "indianred"           
[373] "indianred1"           "indianred2"           "indianred3"          
[376] "indianred4"           "ivory"                "ivory1"              
[379] "ivory2"               "ivory3"               "ivory4"              
[382] "khaki"                "khaki1"               "khaki2"              
[385] "khaki3"               "khaki4"               "lavender"            
[388] "lavenderblush"        "lavenderblush1"       "lavenderblush2"      
[391] "lavenderblush3"       "lavenderblush4"       "lawngreen"           
[394] "lemonchiffon"         "lemonchiffon1"        "lemonchiffon2"       
[397] "lemonchiffon3"        "lemonchiffon4"        "lightblue"           
[400] "lightblue1"           "lightblue2"           "lightblue3"          
[403] "lightblue4"           "lightcoral"           "lightcyan"           
[406] "lightcyan1"           "lightcyan2"           "lightcyan3"          
[409] "lightcyan4"           "lightgoldenrod"       "lightgoldenrod1"     
[412] "lightgoldenrod2"      "lightgoldenrod3"      "lightgoldenrod4"     
[415] "lightgoldenrodyellow" "lightgray"            "lightgreen"          
[418] "lightgrey"            "lightpink"            "lightpink1"          
[421] "lightpink2"           "lightpink3"           "lightpink4"          
[424] "lightsalmon"          "lightsalmon1"         "lightsalmon2"        
[427] "lightsalmon3"         "lightsalmon4"         "lightseagreen"       
[430] "lightskyblue"         "lightskyblue1"        "lightskyblue2"       
[433] "lightskyblue3"        "lightskyblue4"        "lightslateblue"      
[436] "lightslategray"       "lightslategrey"       "lightsteelblue"      
[439] "lightsteelblue1"      "lightsteelblue2"      "lightsteelblue3"     
[442] "lightsteelblue4"      "lightyellow"          "lightyellow1"        
[445] "lightyellow2"         "lightyellow3"         "lightyellow4"        
[448] "limegreen"            "linen"                "magenta"             
[451] "magenta1"             "magenta2"             "magenta3"            
[454] "magenta4"             "maroon"               "maroon1"             
[457] "maroon2"              "maroon3"              "maroon4"             
[460] "mediumaquamarine"     "mediumblue"           "mediumorchid"        
[463] "mediumorchid1"        "mediumorchid2"        "mediumorchid3"       
[466] "mediumorchid4"        "mediumpurple"         "mediumpurple1"       
[469] "mediumpurple2"        "mediumpurple3"        "mediumpurple4"       
[472] "mediumseagreen"       "mediumslateblue"      "mediumspringgreen"   
[475] "mediumturquoise"      "mediumvioletred"      "midnightblue"        
[478] "mintcream"            "mistyrose"            "mistyrose1"          
[481] "mistyrose2"           "mistyrose3"           "mistyrose4"          
[484] "moccasin"             "navajowhite"          "navajowhite1"        
[487] "navajowhite2"         "navajowhite3"         "navajowhite4"        
[490] "navy"                 "navyblue"             "oldlace"             
[493] "olivedrab"            "olivedrab1"           "olivedrab2"          
[496] "olivedrab3"           "olivedrab4"           "orange"              
[499] "orange1"              "orange2"              "orange3"             
[502] "orange4"              "orangered"            "orangered1"          
[505] "orangered2"           "orangered3"           "orangered4"          
[508] "orchid"               "orchid1"              "orchid2"             
[511] "orchid3"              "orchid4"              "palegoldenrod"       
[514] "palegreen"            "palegreen1"           "palegreen2"          
[517] "palegreen3"           "palegreen4"           "paleturquoise"       
[520] "paleturquoise1"       "paleturquoise2"       "paleturquoise3"      
[523] "paleturquoise4"       "palevioletred"        "palevioletred1"      
[526] "palevioletred2"       "palevioletred3"       "palevioletred4"      
[529] "papayawhip"           "peachpuff"            "peachpuff1"          
[532] "peachpuff2"           "peachpuff3"           "peachpuff4"          
[535] "peru"                 "pink"                 "pink1"               
[538] "pink2"                "pink3"                "pink4"               
[541] "plum"                 "plum1"                "plum2"               
[544] "plum3"                "plum4"                "powderblue"          
[547] "purple"               "purple1"              "purple2"             
[550] "purple3"              "purple4"              "red"                 
[553] "red1"                 "red2"                 "red3"                
[556] "red4"                 "rosybrown"            "rosybrown1"          
[559] "rosybrown2"           "rosybrown3"           "rosybrown4"          
[562] "royalblue"            "royalblue1"           "royalblue2"          
[565] "royalblue3"           "royalblue4"           "saddlebrown"         
[568] "salmon"               "salmon1"              "salmon2"             
[571] "salmon3"              "salmon4"              "sandybrown"          
[574] "seagreen"             "seagreen1"            "seagreen2"           
[577] "seagreen3"            "seagreen4"            "seashell"            
[580] "seashell1"            "seashell2"            "seashell3"           
[583] "seashell4"            "sienna"               "sienna1"             
[586] "sienna2"              "sienna3"              "sienna4"             
[589] "skyblue"              "skyblue1"             "skyblue2"            
[592] "skyblue3"             "skyblue4"             "slateblue"           
[595] "slateblue1"           "slateblue2"           "slateblue3"          
[598] "slateblue4"           "slategray"            "slategray1"          
[601] "slategray2"           "slategray3"           "slategray4"          
[604] "slategrey"            "snow"                 "snow1"               
[607] "snow2"                "snow3"                "snow4"               
[610] "springgreen"          "springgreen1"         "springgreen2"        
[613] "springgreen3"         "springgreen4"         "steelblue"           
[616] "steelblue1"           "steelblue2"           "steelblue3"          
[619] "steelblue4"           "tan"                  "tan1"                
[622] "tan2"                 "tan3"                 "tan4"                
[625] "thistle"              "thistle1"             "thistle2"            
[628] "thistle3"             "thistle4"             "tomato"              
[631] "tomato1"              "tomato2"              "tomato3"             
[634] "tomato4"              "turquoise"            "turquoise1"          
[637] "turquoise2"           "turquoise3"           "turquoise4"          
[640] "violet"               "violetred"            "violetred1"          
[643] "violetred2"           "violetred3"           "violetred4"          
[646] "wheat"                "wheat1"               "wheat2"              
[649] "wheat3"               "wheat4"               "whitesmoke"          
[652] "yellow"               "yellow1"              "yellow2"             
[655] "yellow3"              "yellow4"              "yellowgreen"         
> f(NULL)
Error in if (distinct) c[!duplicated(t(col2rgb(c)))] else c : 
  argument is of length zero
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in if (distinct) c[!duplicated(t(col2rgb(c)))] else c : 
  argument is of length zero
Calls: f
> f(l0)
Error in if (distinct) c[!duplicated(t(col2rgb(c)))] else c : 
  argument is of length zero
Calls: f
> f(c0)
Error in if (distinct) c[!duplicated(t(col2rgb(c)))] else c : 
  argument is of length zero
Calls: f
> f(m0)
Error in if (distinct) c[!duplicated(t(col2rgb(c)))] else c : 
  argument is of length zero
Calls: f
> f(df0)
Error in if (distinct) c[!duplicated(t(col2rgb(c)))] else c : 
  argument is not interpretable as logical
Calls: f
> f(FALSE)
  [1] "white"                "aliceblue"            "antiquewhite"        
  [4] "antiquewhite1"        "antiquewhite2"        "antiquewhite3"       
  [7] "antiquewhite4"        "aquamarine"           "aquamarine1"         
 [10] "aquamarine2"          "aquamarine3"          "aquamarine4"         
 [13] "azure"                "azure1"               "azure2"              
 [16] "azure3"               "azure4"               "beige"               
 [19] "bisque"               "bisque1"              "bisque2"             
 [22] "bisque3"              "bisque4"              "black"               
 [25] "blanchedalmond"       "blue"                 "blue1"               
 [28] "blue2"                "blue3"                "blue4"               
 [31] "blueviolet"           "brown"                "brown1"              
 [34] "brown2"               "brown3"               "brown4"              
 [37] "burlywood"            "burlywood1"           "burlywood2"          
 [40] "burlywood3"           "burlywood4"           "cadetblue"           
 [43] "cadetblue1"           "cadetblue2"           "cadetblue3"          
 [46] "cadetblue4"           "chartreuse"           "chartreuse1"         
 [49] "chartreuse2"          "chartreuse3"          "chartreuse4"         
 [52] "chocolate"            "chocolate1"           "chocolate2"          
 [55] "chocolate3"           "chocolate4"           "coral"               
 [58] "coral1"               "coral2"               "coral3"              
 [61] "coral4"               "cornflowerblue"       "cornsilk"            
 [64] "cornsilk1"            "cornsilk2"            "cornsilk3"           
 [67] "cornsilk4"            "cyan"                 "cyan1"               
 [70] "cyan2"                "cyan3"                "cyan4"               
 [73] "darkblue"             "darkcyan"             "darkgoldenrod"       
 [76] "darkgoldenrod1"       "darkgoldenrod2"       "darkgoldenrod3"      
 [79] "darkgoldenrod4"       "darkgray"             "darkgreen"           
 [82] "darkgrey"             "darkkhaki"            "darkmagenta"         
 [85] "darkolivegreen"       "darkolivegreen1"      "darkolivegreen2"     
 [88] "darkolivegreen3"      "darkolivegreen4"      "darkorange"          
 [91] "darkorange1"          "darkorange2"          "darkorange3"         
 [94] "darkorange4"          "darkorchid"           "darkorchid1"         
 [97] "darkorchid2"          "darkorchid3"          "darkorchid4"         
[100] "darkred"              "darksalmon"           "darkseagreen"        
[103] "darkseagreen1"        "darkseagreen2"        "darkseagreen3"       
[106] "darkseagreen4"        "darkslateblue"        "darkslategray"       
[109] "darkslategray1"       "darkslategray2"       "darkslategray3"      
[112] "darkslategray4"       "darkslategrey"        "darkturquoise"       
[115] "darkviolet"           "deeppink"             "deeppink1"           
[118] "deeppink2"            "deeppink3"            "deeppink4"           
[121] "deepskyblue"          "deepskyblue1"         "deepskyblue2"        
[124] "deepskyblue3"         "deepskyblue4"         "dimgray"             
[127] "dimgrey"              "dodgerblue"           "dodgerblue1"         
[130] "dodgerblue2"          "dodgerblue3"          "dodgerblue4"         
[133] "firebrick"            "firebrick1"           "firebrick2"          
[136] "firebrick3"           "firebrick4"           "floralwhite"         
[139] "forestgreen"          "gainsboro"            "ghostwhite"          
[142] "gold"                 "gold1"                "gold2"               
[145] "gold3"                "gold4"                "goldenrod"           
[148] "goldenrod1"           "goldenrod2"           "goldenrod3"          
[151] "goldenrod4"           "gray"                 "gray0"               
[154] "gray1"                "gray2"                "gray3"               
[157] "gray4"                "gray5"                "gray6"               
[160] "gray7"                "gray8"                "gray9"               
[163] "gray10"               "gray11"               "gray12"              
[166] "gray13"               "gray14"               "gray15"              
[169] "gray16"               "gray17"               "gray18"              
[172] "gray19"               "gray20"               "gray21"              
[175] "gray22"               "gray23"               "gray24"              
[178] "gray25"               "gray26"               "gray27"              
[181] "gray28"               "gray29"               "gray30"              
[184] "gray31"               "gray32"               "gray33"              
[187] "gray34"               "gray35"               "gray36"              
[190] "gray37"               "gray38"               "gray39"              
[193] "gray40"               "gray41"               "gray42"              
[196] "gray43"               "gray44"               "gray45"              
[199] "gray46"               "gray47"               "gray48"              
[202] "gray49"               "gray50"               "gray51"              
[205] "gray52"               "gray53"               "gray54"              
[208] "gray55"               "gray56"               "gray57"              
[211] "gray58"               "gray59"               "gray60"              
[214] "gray61"               "gray62"               "gray63"              
[217] "gray64"               "gray65"               "gray66"              
[220] "gray67"               "gray68"               "gray69"              
[223] "gray70"               "gray71"               "gray72"              
[226] "gray73"               "gray74"               "gray75"              
[229] "gray76"               "gray77"               "gray78"              
[232] "gray79"               "gray80"               "gray81"              
[235] "gray82"               "gray83"               "gray84"              
[238] "gray85"               "gray86"               "gray87"              
[241] "gray88"               "gray89"               "gray90"              
[244] "gray91"               "gray92"               "gray93"              
[247] "gray94"               "gray95"               "gray96"              
[250] "gray97"               "gray98"               "gray99"              
[253] "gray100"              "green"                "green1"              
[256] "green2"               "green3"               "green4"              
[259] "greenyellow"          "grey"                 "grey0"               
[262] "grey1"                "grey2"                "grey3"               
[265] "grey4"                "grey5"                "grey6"               
[268] "grey7"                "grey8"                "grey9"               
[271] "grey10"               "grey11"               "grey12"              
[274] "grey13"               "grey14"               "grey15"              
[277] "grey16"               "grey17"               "grey18"              
[280] "grey19"               "grey20"               "grey21"              
[283] "grey22"               "grey23"               "grey24"              
[286] "grey25"               "grey26"               "grey27"              
[289] "grey28"               "grey29"               "grey30"              
[292] "grey31"               "grey32"               "grey33"              
[295] "grey34"               "grey35"               "grey36"              
[298] "grey37"               "grey38"               "grey39"              
[301] "grey40"               "grey41"               "grey42"              
[304] "grey43"               "grey44"               "grey45"              
[307] "grey46"               "grey47"               "grey48"              
[310] "grey49"               "grey50"               "grey51"              
[313] "grey52"               "grey53"               "grey54"              
[316] "grey55"               "grey56"               "grey57"              
[319] "grey58"               "grey59"               "grey60"              
[322] "grey61"               "grey62"               "grey63"              
[325] "grey64"               "grey65"               "grey66"              
[328] "grey67"               "grey68"               "grey69"              
[331] "grey70"               "grey71"               "grey72"              
[334] "grey73"               "grey74"               "grey75"              
[337] "grey76"               "grey77"               "grey78"              
[340] "grey79"               "grey80"               "grey81"              
[343] "grey82"               "grey83"               "grey84"              
[346] "grey85"               "grey86"               "grey87"              
[349] "grey88"               "grey89"               "grey90"              
[352] "grey91"               "grey92"               "grey93"              
[355] "grey94"               "grey95"               "grey96"              
[358] "grey97"               "grey98"               "grey99"              
[361] "grey100"              "honeydew"             "honeydew1"           
[364] "honeydew2"            "honeydew3"            "honeydew4"           
[367] "hotpink"              "hotpink1"             "hotpink2"            
[370] "hotpink3"             "hotpink4"             "indianred"           
[373] "indianred1"           "indianred2"           "indianred3"          
[376] "indianred4"           "ivory"                "ivory1"              
[379] "ivory2"               "ivory3"               "ivory4"              
[382] "khaki"                "khaki1"               "khaki2"              
[385] "khaki3"               "khaki4"               "lavender"            
[388] "lavenderblush"        "lavenderblush1"       "lavenderblush2"      
[391] "lavenderblush3"       "lavenderblush4"       "lawngreen"           
[394] "lemonchiffon"         "lemonchiffon1"        "lemonchiffon2"       
[397] "lemonchiffon3"        "lemonchiffon4"        "lightblue"           
[400] "lightblue1"           "lightblue2"           "lightblue3"          
[403] "lightblue4"           "lightcoral"           "lightcyan"           
[406] "lightcyan1"           "lightcyan2"           "lightcyan3"          
[409] "lightcyan4"           "lightgoldenrod"       "lightgoldenrod1"     
[412] "lightgoldenrod2"      "lightgoldenrod3"      "lightgoldenrod4"     
[415] "lightgoldenrodyellow" "lightgray"            "lightgreen"          
[418] "lightgrey"            "lightpink"            "lightpink1"          
[421] "lightpink2"           "lightpink3"           "lightpink4"          
[424] "lightsalmon"          "lightsalmon1"         "lightsalmon2"        
[427] "lightsalmon3"         "lightsalmon4"         "lightseagreen"       
[430] "lightskyblue"         "lightskyblue1"        "lightskyblue2"       
[433] "lightskyblue3"        "lightskyblue4"        "lightslateblue"      
[436] "lightslategray"       "lightslategrey"       "lightsteelblue"      
[439] "lightsteelblue1"      "lightsteelblue2"      "lightsteelblue3"     
[442] "lightsteelblue4"      "lightyellow"          "lightyellow1"        
[445] "lightyellow2"         "lightyellow3"         "lightyellow4"        
[448] "limegreen"            "linen"                "magenta"             
[451] "magenta1"             "magenta2"             "magenta3"            
[454] "magenta4"             "maroon"               "maroon1"             
[457] "maroon2"              "maroon3"              "maroon4"             
[460] "mediumaquamarine"     "mediumblue"           "mediumorchid"        
[463] "mediumorchid1"        "mediumorchid2"        "mediumorchid3"       
[466] "mediumorchid4"        "mediumpurple"         "mediumpurple1"       
[469] "mediumpurple2"        "mediumpurple3"        "mediumpurple4"       
[472] "mediumseagreen"       "mediumslateblue"      "mediumspringgreen"   
[475] "mediumturquoise"      "mediumvioletred"      "midnightblue"        
[478] "mintcream"            "mistyrose"            "mistyrose1"          
[481] "mistyrose2"           "mistyrose3"           "mistyrose4"          
[484] "moccasin"             "navajowhite"          "navajowhite1"        
[487] "navajowhite2"         "navajowhite3"         "navajowhite4"        
[490] "navy"                 "navyblue"             "oldlace"             
[493] "olivedrab"            "olivedrab1"           "olivedrab2"          
[496] "olivedrab3"           "olivedrab4"           "orange"              
[499] "orange1"              "orange2"              "orange3"             
[502] "orange4"              "orangered"            "orangered1"          
[505] "orangered2"           "orangered3"           "orangered4"          
[508] "orchid"               "orchid1"              "orchid2"             
[511] "orchid3"              "orchid4"              "palegoldenrod"       
[514] "palegreen"            "palegreen1"           "palegreen2"          
[517] "palegreen3"           "palegreen4"           "paleturquoise"       
[520] "paleturquoise1"       "paleturquoise2"       "paleturquoise3"      
[523] "paleturquoise4"       "palevioletred"        "palevioletred1"      
[526] "palevioletred2"       "palevioletred3"       "palevioletred4"      
[529] "papayawhip"           "peachpuff"            "peachpuff1"          
[532] "peachpuff2"           "peachpuff3"           "peachpuff4"          
[535] "peru"                 "pink"                 "pink1"               
[538] "pink2"                "pink3"                "pink4"               
[541] "plum"                 "plum1"                "plum2"               
[544] "plum3"                "plum4"                "powderblue"          
[547] "purple"               "purple1"              "purple2"             
[550] "purple3"              "purple4"              "red"                 
[553] "red1"                 "red2"                 "red3"                
[556] "red4"                 "rosybrown"            "rosybrown1"          
[559] "rosybrown2"           "rosybrown3"           "rosybrown4"          
[562] "royalblue"            "royalblue1"           "royalblue2"          
[565] "royalblue3"           "royalblue4"           "saddlebrown"         
[568] "salmon"               "salmon1"              "salmon2"             
[571] "salmon3"              "salmon4"              "sandybrown"          
[574] "seagreen"             "seagreen1"            "seagreen2"           
[577] "seagreen3"            "seagreen4"            "seashell"            
[580] "seashell1"            "seashell2"            "seashell3"           
[583] "seashell4"            "sienna"               "sienna1"             
[586] "sienna2"              "sienna3"              "sienna4"             
[589] "skyblue"              "skyblue1"             "skyblue2"            
[592] "skyblue3"             "skyblue4"             "slateblue"           
[595] "slateblue1"           "slateblue2"           "slateblue3"          
[598] "slateblue4"           "slategray"            "slategray1"          
[601] "slategray2"           "slategray3"           "slategray4"          
[604] "slategrey"            "snow"                 "snow1"               
[607] "snow2"                "snow3"                "snow4"               
[610] "springgreen"          "springgreen1"         "springgreen2"        
[613] "springgreen3"         "springgreen4"         "steelblue"           
[616] "steelblue1"           "steelblue2"           "steelblue3"          
[619] "steelblue4"           "tan"                  "tan1"                
[622] "tan2"                 "tan3"                 "tan4"                
[625] "thistle"              "thistle1"             "thistle2"            
[628] "thistle3"             "thistle4"             "tomato"              
[631] "tomato1"              "tomato2"              "tomato3"             
[634] "tomato4"              "turquoise"            "turquoise1"          
[637] "turquoise2"           "turquoise3"           "turquoise4"          
[640] "violet"               "violetred"            "violetred1"          
[643] "violetred2"           "violetred3"           "violetred4"          
[646] "wheat"                "wheat1"               "wheat2"              
[649] "wheat3"               "wheat4"               "whitesmoke"          
[652] "yellow"               "yellow1"              "yellow2"             
[655] "yellow3"              "yellow4"              "yellowgreen"         
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  contourLines  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("contourLines", pos = 'package:grDevices')
> f()
Error in f() : no 'z' matrix specified
> f(NULL)
Error in seq.default(0, 1, length.out = ncol(z)) : 
  argument 'length.out' must be of length 1
Calls: f -> diff -> seq -> seq.default
> f(,NULL)
Error in f(, NULL) : no 'z' matrix specified
> f(NULL,NULL)
Error in f(NULL, NULL) : no proper 'z' matrix specified
> f(list())
Error in f(list()) : no proper 'z' matrix specified
> f(l0)
Error in seq.default(0, 1, length.out = ncol(z)) : 
  argument 'length.out' must be of length 1
Calls: f -> diff -> seq -> seq.default
> f(c0)
Error in seq.default(0, 1, length.out = ncol(z)) : 
  argument 'length.out' must be of length 1
Calls: f -> diff -> seq -> seq.default
> f(m0)
Error in f(m0) : no proper 'z' matrix specified
> f(df0)
Error in f(df0) : no proper 'z' matrix specified
> f(FALSE)
Error in seq.default(0, 1, length.out = ncol(z)) : 
  argument 'length.out' must be of length 1
Calls: f -> diff -> seq -> seq.default
> f(list(),list())
Error in f(list(), list()) : no proper 'z' matrix specified
> f(l0,l0)
Error in f(l0, l0) : no proper 'z' matrix specified
> f(c0,c0)
Error in f(c0, c0) : no proper 'z' matrix specified
> f(df0,df0)
Error in f(df0, df0) : no proper 'z' matrix specified
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : no proper 'z' matrix specified
> 
> ##  convertColor  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("convertColor", pos = 'package:grDevices')
> f()
Error in f() : argument "from" is missing, with no default
> f(NULL)
Error in f(NULL) : argument "from" is missing, with no default
> f(,NULL)
Error in f(, NULL) : 'from' must be a "colorConverter" object or a string
> f(NULL,NULL)
Error in f(NULL, NULL) : 
  'from' must be a "colorConverter" object or a string
> f(list())
Error in f(list()) : argument "from" is missing, with no default
> f(l0)
Error in f(l0) : argument "from" is missing, with no default
> f(c0)
Error in f(c0) : argument "from" is missing, with no default
> f(m0)
Error in f(m0) : argument "from" is missing, with no default
> f(df0)
Error in f(df0) : argument "from" is missing, with no default
> f(FALSE)
Error in f(FALSE) : argument "from" is missing, with no default
> f(list(),list())
Error in f(list(), list()) : 
  'from' must be a "colorConverter" object or a string
> f(l0,l0)
Error in f(l0, l0) : 'from' must be a "colorConverter" object or a string
> f(c0,c0)
Error in match.arg(from, names(colorspaces)) : 
  'arg' should be one of "XYZ", "Apple RGB", "sRGB", "CIE RGB", "Lab", "Luv"
Calls: f -> match.arg
> f(df0,df0)
Error in f(df0, df0) : 
  'from' must be a "colorConverter" object or a string
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 
  'from' must be a "colorConverter" object or a string
> 
> ##  densCols  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("densCols", pos = 'package:grDevices')
> f()
Error in xy.coords(x, y) : argument "x" is missing, with no default
Calls: f -> xy.coords
> f(NULL)
Error in if (!missing(bandwidth) && min(bandwidth) <= 0) stop("'bandwidth' must be strictly positive") : 
  missing value where TRUE/FALSE needed
Calls: f -> .smoothScatterCalcDensity -> <Anonymous>
> f(,NULL)
Error in xy.coords(x, y) : argument "x" is missing, with no default
Calls: f -> xy.coords
> f(NULL,NULL)
Error in if (!missing(bandwidth) && min(bandwidth) <= 0) stop("'bandwidth' must be strictly positive") : 
  missing value where TRUE/FALSE needed
Calls: f -> .smoothScatterCalcDensity -> <Anonymous>
> f(list())
Error in xy.coords(x, y) : 
  'x' is a list, but does not have components 'x' and 'y'
Calls: f -> xy.coords
> f(l0)
Error in if (!missing(bandwidth) && min(bandwidth) <= 0) stop("'bandwidth' must be strictly positive") : 
  missing value where TRUE/FALSE needed
Calls: f -> .smoothScatterCalcDensity -> <Anonymous>
> f(c0)
Error in if (!missing(bandwidth) && min(bandwidth) <= 0) stop("'bandwidth' must be strictly positive") : 
  missing value where TRUE/FALSE needed
Calls: f -> .smoothScatterCalcDensity -> <Anonymous>
> f(m0)
Error in x[, 2] : subscript out of bounds
Calls: f -> xy.coords
> f(df0)
Error in if (!missing(bandwidth) && min(bandwidth) <= 0) stop("'bandwidth' must be strictly positive") : 
  missing value where TRUE/FALSE needed
Calls: f -> .smoothScatterCalcDensity -> <Anonymous>
> f(FALSE)
Error in apply(x, 2, stats::quantile, probs = c(0.05, 0.95), na.rm = TRUE,  : 
  dim(X) must have a positive length
Calls: f -> .smoothScatterCalcDensity -> diff -> apply
> f(list(),list())
Error in if (!missing(bandwidth) && min(bandwidth) <= 0) stop("'bandwidth' must be strictly positive") : 
  missing value where TRUE/FALSE needed
Calls: f -> .smoothScatterCalcDensity -> <Anonymous>
> f(l0,l0)
Error in if (!missing(bandwidth) && min(bandwidth) <= 0) stop("'bandwidth' must be strictly positive") : 
  missing value where TRUE/FALSE needed
Calls: f -> .smoothScatterCalcDensity -> <Anonymous>
> f(c0,c0)
Error in if (!missing(bandwidth) && min(bandwidth) <= 0) stop("'bandwidth' must be strictly positive") : 
  missing value where TRUE/FALSE needed
Calls: f -> .smoothScatterCalcDensity -> <Anonymous>
> f(df0,df0)
Error in if (!missing(bandwidth) && min(bandwidth) <= 0) stop("'bandwidth' must be strictly positive") : 
  missing value where TRUE/FALSE needed
Calls: f -> .smoothScatterCalcDensity -> <Anonymous>
> f(FALSE,FALSE)
Error in apply(x, 2, stats::quantile, probs = c(0.05, 0.95), na.rm = TRUE,  : 
  dim(X) must have a positive length
Calls: f -> .smoothScatterCalcDensity -> diff -> apply
> 
> ##  dev.capabilities  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.capabilities", pos = 'package:grDevices')
> f()
$semiTransparency
[1] FALSE

$transparentBackground
[1] "fully"

$rasterImage
[1] "non-missing"

$capture
[1] FALSE

$locator
[1] FALSE

$events
[1] "MouseDown" "MouseMove" "MouseUp"   "Keybd"    

> f(NULL)
$semiTransparency
[1] FALSE

$transparentBackground
[1] "fully"

$rasterImage
[1] "non-missing"

$capture
[1] FALSE

$locator
[1] FALSE

$events
[1] "MouseDown" "MouseMove" "MouseUp"   "Keybd"    

> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
named list()
> f(l0)
named list()
> f(c0)
named list()
> f(m0)
named list()
> f(df0)
named list()
> f(FALSE)
named list()
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dev.capture  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.capture", pos = 'package:grDevices')
> f()
NULL
Warning messages:
1: In f() :
  X11 protocol error: BadValue (integer parameter out of range for operation)
2: In f() :
  X11 protocol error: BadDrawable (invalid Pixmap or Window parameter)
3: In f() :
  X11 protocol error: BadValue (integer parameter out of range for operation)
4: In f() :
  X11 protocol error: BadDrawable (invalid Pixmap or Window parameter)
5: In f() :
  X11 protocol error: BadDrawable (invalid Pixmap or Window parameter)
> f(NULL)
NULL
Warning message:
In f(NULL) :
  X11 protocol error: BadDrawable (invalid Pixmap or Window parameter)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
NULL
Warning message:
In f(list()) :
  X11 protocol error: BadDrawable (invalid Pixmap or Window parameter)
> f(l0)
NULL
Warning message:
In f(l0) :
  X11 protocol error: BadDrawable (invalid Pixmap or Window parameter)
> f(c0)
NULL
Warning message:
In f(c0) :
  X11 protocol error: BadDrawable (invalid Pixmap or Window parameter)
> f(m0)
NULL
Warning message:
In f(m0) :
  X11 protocol error: BadDrawable (invalid Pixmap or Window parameter)
> f(df0)
NULL
Warning message:
In f(df0) :
  X11 protocol error: BadDrawable (invalid Pixmap or Window parameter)
> f(FALSE)
NULL
Warning message:
In f(FALSE) :
  X11 protocol error: BadDrawable (invalid Pixmap or Window parameter)
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dev.control  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.control", pos = 'package:grDevices')
> f()
Error in f() : argument is missing with no default
> f(NULL)
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in match.arg(displaylist) : 
  'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(l0)
Error in match.arg(displaylist) : 
  'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(c0)
Error in match.arg(displaylist) : 
  'arg' should be one of "inhibit", "enable"
Calls: f -> match.arg
> f(m0)
Error in match.arg(displaylist) : 
  'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(df0)
Error in match.arg(displaylist) : 
  'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(FALSE)
Error in match.arg(displaylist) : 
  'arg' must be NULL or a character vector
Calls: f -> match.arg
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dev.copy  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.copy", pos = 'package:grDevices')
> f()
BMP 
  2 
> f(NULL)
Error in f(NULL) : 'device' should be a function
> f(,NULL)
BMP 
  3 
> f(NULL,NULL)
Error in f(NULL, NULL) : 'device' should be a function
> f(list())
Error in f(list()) : 'device' should be a function
> f(l0)
Error in f(l0) : 'device' should be a function
> f(c0)
Error in f(c0) : 'device' should be a function
> f(m0)
Error in f(m0) : 'device' should be a function
> f(df0)
Error in f(df0) : 'device' should be a function
> f(FALSE)
Error in f(FALSE) : 'device' should be a function
> f(list(),list())
Error in f(list(), list()) : 'device' should be a function
> f(l0,l0)
Error in f(l0, l0) : 'device' should be a function
> f(c0,c0)
Error in f(c0, c0) : 'device' should be a function
> f(df0,df0)
Error in f(df0, df0) : 'device' should be a function
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : 'device' should be a function
> 
> ##  dev.copy2eps  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.copy2eps", pos = 'package:grDevices')
> f()
BMP 
  2 
> f(NULL)
Error in if (!missing(family) && family %in% c("ComputerModern", "ComputerModernItalic")) { : 
  missing value where TRUE/FALSE needed
Calls: f ... eval -> eval -> <Anonymous> -> device -> guessEncoding
> f(,NULL)
BMP 
  2 
> f(NULL,NULL)
Error in if (!missing(family) && family %in% c("ComputerModern", "ComputerModernItalic")) { : 
  missing value where TRUE/FALSE needed
Calls: f ... eval -> eval -> <Anonymous> -> device -> guessEncoding
> f(list())
Error in if (!missing(family) && family %in% c("ComputerModern", "ComputerModernItalic")) { : 
  missing value where TRUE/FALSE needed
Calls: f ... eval -> eval -> <Anonymous> -> device -> guessEncoding
> f(l0)
Error in if (!missing(family) && family %in% c("ComputerModern", "ComputerModernItalic")) { : 
  missing value where TRUE/FALSE needed
Calls: f ... eval -> eval -> <Anonymous> -> device -> guessEncoding
> f(c0)
Error in if (!missing(family) && family %in% c("ComputerModern", "ComputerModernItalic")) { : 
  missing value where TRUE/FALSE needed
Calls: f ... eval -> eval -> <Anonymous> -> device -> guessEncoding
> f(m0)
Error in if (!missing(family) && family %in% c("ComputerModern", "ComputerModernItalic")) { : 
  missing value where TRUE/FALSE needed
Calls: f ... eval -> eval -> <Anonymous> -> device -> guessEncoding
> f(df0)
Error in postscriptFonts(family) : 
  invalid arguments in 'postscriptFonts' (must be font names)
Calls: f ... eval -> eval -> <Anonymous> -> device -> postscriptFonts
> f(FALSE)
Error in postscriptFonts(family) : 
  invalid arguments in 'postscriptFonts' (must be font names)
Calls: f ... eval -> eval -> <Anonymous> -> device -> postscriptFonts
> f(list(),list())
Error in if (!missing(family) && family %in% c("ComputerModern", "ComputerModernItalic")) { : 
  missing value where TRUE/FALSE needed
Calls: f ... eval -> eval -> <Anonymous> -> device -> guessEncoding
In addition: Warning messages:
1: 'mode(title)' differs between new and previous
	 ==> NOT changing 'title' 
2: 'length(title)' differs between new and previous
	 ==> NOT changing 'title' 
> f(l0,l0)
Error in if (!missing(family) && family %in% c("ComputerModern", "ComputerModernItalic")) { : 
  missing value where TRUE/FALSE needed
Calls: f ... eval -> eval -> <Anonymous> -> device -> guessEncoding
In addition: Warning messages:
1: 'mode(title)' differs between new and previous
	 ==> NOT changing 'title' 
2: 'length(title)' differs between new and previous
	 ==> NOT changing 'title' 
> f(c0,c0)
Error in if (!missing(family) && family %in% c("ComputerModern", "ComputerModernItalic")) { : 
  missing value where TRUE/FALSE needed
Calls: f ... eval -> eval -> <Anonymous> -> device -> guessEncoding
In addition: Warning message:
'length(title)' differs between new and previous
	 ==> NOT changing 'title' 
> f(df0,df0)
Error in postscriptFonts(family) : 
  invalid arguments in 'postscriptFonts' (must be font names)
Calls: f ... eval -> eval -> <Anonymous> -> device -> postscriptFonts
In addition: Warning message:
'mode(title)' differs between new and previous
	 ==> NOT changing 'title' 
> f(FALSE,FALSE)
Error in postscriptFonts(family) : 
  invalid arguments in 'postscriptFonts' (must be font names)
Calls: f ... eval -> eval -> <Anonymous> -> device -> postscriptFonts
In addition: Warning message:
'mode(title)' differs between new and previous
	 ==> NOT changing 'title' 
> 
> ##  dev.copy2pdf  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.copy2pdf", pos = 'package:grDevices')
> f()
BMP 
  2 
> f(NULL)
Error in device(...) : invalid 'family' argument
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> device
> f(,NULL)
BMP 
  2 
> f(NULL,NULL)
Error in device(...) : invalid 'family' argument
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> device
> f(list())
Error in device(...) : invalid 'family' argument
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> device
> f(l0)
Error in device(...) : invalid 'family' argument
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> device
> f(c0)
Error in device(...) : invalid 'family' argument
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> device
> f(m0)
Error in device(...) : invalid 'family' argument
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> device
> f(df0)
Error in pdfFonts(family) : 
  invalid arguments in 'pdfFonts' (must be font names)
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> device -> pdfFonts
> f(FALSE)
Error in pdfFonts(family) : 
  invalid arguments in 'pdfFonts' (must be font names)
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> device -> pdfFonts
> f(list(),list())
Error in device(...) : invalid 'family' argument
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> device
In addition: Warning messages:
1: 'mode(title)' differs between new and previous
	 ==> NOT changing 'title' 
2: 'length(title)' differs between new and previous
	 ==> NOT changing 'title' 
> f(l0,l0)
Error in device(...) : invalid 'family' argument
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> device
In addition: Warning messages:
1: 'mode(title)' differs between new and previous
	 ==> NOT changing 'title' 
2: 'length(title)' differs between new and previous
	 ==> NOT changing 'title' 
> f(c0,c0)
Error in device(...) : invalid 'family' argument
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> device
In addition: Warning message:
'length(title)' differs between new and previous
	 ==> NOT changing 'title' 
> f(df0,df0)
Error in pdfFonts(family) : 
  invalid arguments in 'pdfFonts' (must be font names)
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> device -> pdfFonts
In addition: Warning message:
'mode(title)' differs between new and previous
	 ==> NOT changing 'title' 
> f(FALSE,FALSE)
Error in pdfFonts(family) : 
  invalid arguments in 'pdfFonts' (must be font names)
Calls: f ... eval.parent -> eval -> eval -> <Anonymous> -> device -> pdfFonts
In addition: Warning message:
'mode(title)' differs between new and previous
	 ==> NOT changing 'title' 
> 
> ##  dev.cur  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.cur", pos = 'package:grDevices')
> f()
BMP 
  3 
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  dev.flush  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.flush", pos = 'package:grDevices')
> f()
[1] 0
> f(NULL)
[1] 0
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in max(0L, level) : invalid 'type' (list) of argument
Calls: f
> f(l0)
[1] 0
> f(c0)
Error in -max(0L, level) : invalid argument to unary operator
Calls: f
> f(m0)
[1] 0
> f(df0)
Error in max(0L, level) : invalid 'type' (list) of argument
Calls: f
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dev.hold  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.hold", pos = 'package:grDevices')
> f()
[1] 0
> f(NULL)
[1] 0
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in max(0L, level) : invalid 'type' (list) of argument
Calls: f
> f(l0)
[1] 0
> f(c0)
[1] 0
> f(m0)
[1] 0
> f(df0)
Error in max(0L, level) : invalid 'type' (list) of argument
Calls: f
> f(FALSE)
[1] 0
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dev.interactive  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.interactive", pos = 'package:grDevices')
> f()
[1] FALSE
> f(NULL)
[1] FALSE
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
[1] FALSE
> f(l0)
[1] FALSE
> f(c0)
[1] FALSE
> f(m0)
[1] FALSE
> f(df0)
[1] FALSE
> f(FALSE)
[1] FALSE
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dev.list  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.list", pos = 'package:grDevices')
> f()
BMP BMP BMP BMP BMP 
  2   3   4   5   6 
> f(NULL)
Error in f(NULL) : unused argument (NULL)
> f(,NULL)
Error in f(, NULL) : unused arguments (, NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused arguments (NULL, NULL)
> f(list())
Error in f(list()) : unused argument (list())
> f(l0)
Error in f(l0) : unused argument (l0)
> f(c0)
Error in f(c0) : unused argument (c0)
> f(m0)
Error in f(m0) : unused argument (m0)
> f(df0)
Error in f(df0) : unused argument (df0)
> f(FALSE)
Error in f(FALSE) : unused argument (FALSE)
> f(list(),list())
Error in f(list(), list()) : unused arguments (list(), list())
> f(l0,l0)
Error in f(l0, l0) : unused arguments (l0, l0)
> f(c0,c0)
Error in f(c0, c0) : unused arguments (c0, c0)
> f(df0,df0)
Error in f(df0, df0) : unused arguments (df0, df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused arguments (FALSE, FALSE)
> 
> ##  dev.new  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.new", pos = 'package:grDevices')
> f()
dev.new(): using pdf(file="Rplots46.pdf")
> f(NULL)
dev.new(): using pdf(file="Rplots47.pdf")
> f(,NULL)
dev.new(): using pdf(file="Rplots48.pdf")
> f(NULL,NULL)
dev.new(): using pdf(file="Rplots49.pdf")
> f(list())
dev.new(): using pdf(file="Rplots50.pdf")
> f(l0)
dev.new(): using pdf(file="Rplots51.pdf")
> f(c0)
dev.new(): using pdf(file="Rplots52.pdf")
> f(m0)
dev.new(): using pdf(file="Rplots53.pdf")
> f(df0)
dev.new(): using pdf(file="Rplots54.pdf")
> f(FALSE)
dev.new(): using pdf(file="Rplots55.pdf")
> f(list(),list())
dev.new(): using pdf(file="Rplots56.pdf")
> f(l0,l0)
dev.new(): using pdf(file="Rplots57.pdf")
> f(c0,c0)
dev.new(): using pdf(file="Rplots58.pdf")
> f(df0,df0)
dev.new(): using pdf(file="Rplots59.pdf")
> f(FALSE,FALSE)
dev.new(): using pdf(file="Rplots60.pdf")
> 
> ##  dev.next  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.next", pos = 'package:grDevices')
> f()
BMP 
  2 
> f(NULL)
Error in f(NULL) : argument must have positive length
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : argument must have positive length
> f(l0)
Error in f(l0) : argument must have positive length
> f(c0)
Error in f(c0) : argument must have positive length
> f(m0)
Error in f(m0) : argument must have positive length
> f(df0)
BMP 
  2 
> f(FALSE)
BMP 
  2 
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dev.off  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.off", pos = 'package:grDevices')
> f()
BMP 
  2 
> f(NULL)
Error in if (which == 1) stop("cannot shut down device 1 (the null device)") : 
  argument is of length zero
Calls: f
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in if (which == 1) stop("cannot shut down device 1 (the null device)") : 
  argument is of length zero
Calls: f
> f(l0)
Error in if (which == 1) stop("cannot shut down device 1 (the null device)") : 
  argument is of length zero
Calls: f
> f(c0)
Error in if (which == 1) stop("cannot shut down device 1 (the null device)") : 
  argument is of length zero
Calls: f
> f(m0)
Error in if (which == 1) stop("cannot shut down device 1 (the null device)") : 
  argument is of length zero
Calls: f
> f(df0)
Error in matrix(unlist(value, recursive = FALSE, use.names = FALSE), nrow = nr,  : 
  length of 'dimnames' [2] not equal to array extent
Calls: f -> Ops.data.frame -> matrix
> f(FALSE)
BMP 
  2 
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dev.prev  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.prev", pos = 'package:grDevices')
> f()
pdf 
 20 
> f(NULL)
Error in f(NULL) : argument must have positive length
> f(,NULL)
Error in f(, NULL) : unused argument (NULL)
> f(NULL,NULL)
Error in f(NULL, NULL) : unused argument (NULL)
> f(list())
Error in f(list()) : argument must have positive length
> f(l0)
Error in f(l0) : argument must have positive length
> f(c0)
Error in f(c0) : argument must have positive length
> f(m0)
Error in f(m0) : argument must have positive length
> f(df0)
pdf 
 20 
> f(FALSE)
pdf 
 20 
> f(list(),list())
Error in f(list(), list()) : unused argument (list())
> f(l0,l0)
Error in f(l0, l0) : unused argument (l0)
> f(c0,c0)
Error in f(c0, c0) : unused argument (c0)
> f(df0,df0)
Error in f(df0, df0) : unused argument (df0)
> f(FALSE,FALSE)
Error in f(FALSE, FALSE) : unused argument (FALSE)
> 
> ##  dev.print  :
> c0 <- character(0)
> l0 <- logical(0)
> m0 <- matrix(1,0,0)
> df0 <- as.data.frame(c0)
> f <- get("dev.print", pos = 'package:grDevices')
> f()

 *** caught segfault ***
address (nil), cause 'memory not mapped'

Traceback:
 1: dev.off(eval.parent(oc))
 2: f()
An irrecoverable exception occurred. R is aborting now ...
